(function (n, t) { typeof exports == "object" && typeof module != "undefined" ? t(exports) : typeof define == "function" && define.amd ? define(["exports"], t) : (n = n || self, t(n.faceapi = n.faceapi || {})) })(this, function (n) {
    "use strict";
    /**
         * @license
         * Copyright 2020 Google LLC. All Rights Reserved.
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         *
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         * =============================================================================
         */
    function hr(n, t) { function i() { this.constructor = n } an(n, t); n.prototype = null === t ? Object.create(t) : (i.prototype = t.prototype, new i) } function y(n, t, i, r) { return new (i || (i = Promise))(function (u, f) { function o(n) { try { e(r.next(n)) } catch (n) { f(n) } } function s(n) { try { e(r.throw(n)) } catch (n) { f(n) } } function e(n) { n.done ? u(n.value) : new i(function (t) { t(n.value) }).then(o, s) } e((r = r.apply(n, t || [])).next()) }) } function p(n, t) { function o(e) { return function (o) { return function (e) { if (f) throw new TypeError("Generator is already executing."); for (; r;)try { if (f = 1, u && (i = 2 & e[0] ? u.return : e[0] ? u.throw || ((i = u.return) && i.call(u), 0) : u.next) && !(i = i.call(u, e[1])).done) return i; switch (u = 0, i && (e = [2 & e[0], i.value]), e[0]) { case 0: case 1: i = e; break; case 4: return r.label++, { value: e[1], done: !1 }; case 5: r.label++; u = e[1]; e = [0]; continue; case 7: e = r.ops.pop(); r.trys.pop(); continue; default: if (!(i = (i = r.trys).length > 0 && i[i.length - 1]) && (6 === e[0] || 2 === e[0])) { r = 0; continue } if (3 === e[0] && (!i || e[1] > i[0] && e[1] < i[3])) { r.label = e[1]; break } if (6 === e[0] && r.label < i[1]) { r.label = i[1]; i = e; break } if (i && r.label < i[2]) { r.label = i[2]; r.ops.push(e); break } i[2] && r.ops.pop(); r.trys.pop(); continue }e = t.call(n, r) } catch (n) { e = [6, n]; u = 0 } finally { f = i = 0 } if (5 & e[0]) throw e[1]; return { value: e[0] ? e[1] : void 0, done: !0 } }([e, o]) } } var f, u, i, e, r = { label: 0, sent: function () { if (1 & i[0]) throw i[1]; return i[1] }, trys: [], ops: [] }; return e = { next: o(0), "throw": o(1), "return": o(2) }, "function" == typeof Symbol && (e[Symbol.iterator] = function () { return this }), e } function tbt(n, t, i) { n[decodeURIComponent(t)] = decodeURIComponent(i || "") } function o() { return fy } function ey(n, t) { var i = hy(n, t); return be.get(i) } function yn(n) { return is.get(n) } function oy(n) { for (var f, e, i = be.entries(), t = []; ;) { var r = i.next(), o = r.done, u = r.value; if (o) break; f = u[0]; e = u[1]; f.split("_")[0] === n && t.push(e) } return t } function sy(n) { var t = n.kernelName, i = n.backendName, r = hy(t, i); if (be.has(r)) throw new Error("The kernel '" + t + "' for backend '" + i + "' is already registered"); be.set(r, n) } function pn(n) { var t = n.kernelName; is.has(t) && console.warn("Overriding the gradient for '" + t + "'"); is.set(t, n) } function ibt(n, t) { var i = hy(n, t); if (!be.has(i)) throw new Error("The kernel '" + n + "' for backend '" + t + "' is not registered"); be.delete(i) } function rbt(n) { if (!is.has(n)) throw new Error("The gradient '" + n + "' for backend is not registered"); is.delete(n) } function hy(n, t) { return t + "_" + n } function wn(n) { for (var t = n.length, r = 0, i = 0; t > 0;)i = Math.random() * t | 0, r = n[--t], n[t] = n[i], n[i] = r } function ec(n, t, i) { return Math.max(n, Math.min(t, i)) } function cy(n) { return n % 2 == 0 ? n : n + 1 } function bn(n) { for (var i = 0, t = 0; t < n.length; t++)i += n[t]; return i } function i(n, t) { if (!n) throw new Error("string" == typeof t ? t : t()); } function rt(n, t, r) { void 0 === r && (r = ""); i(yt(n, t), function () { return r + " Shapes " + n + " and " + t + " must match" }) } function ie(n) { i(null != n, function () { return "The input to the tensor constructor must be a non-null value." }) } function hu(n, t, i) { if (void 0 === t && (t = []), void 0 === i && (i = !1), null == t && (t = []), Array.isArray(n) || ei(n) && !i) for (var r = 0; r < n.length; ++r)hu(n[r], t, i); else t.push(n); return t } function w(n) { if (0 === n.length) return 1; for (var i = n[0], t = 1; t < n.length; t++)i *= n[t]; return i } function yt(n, t) { if (n === t) return !0; if (null == n || null == t || n.length !== t.length) return !1; for (var i = 0; i < n.length; i++)if (n[i] !== t[i]) return !1; return !0 } function lt(n) { return n % 1 == 0 } function kn(n) { if (null != Math.tanh) return Math.tanh(n); if (n === 1 / 0) return 1; if (n === -1 / 0) return -1; var t = Math.exp(2 * n); return (t - 1) / (t + 1) } function oc(n) { var t = Math.ceil(Math.sqrt(n)); return [t, Math.ceil(n / t)] } function re(n, t) { return t <= n.length ? n : n + " ".repeat(t - n.length) } function ly(n, t, i) { return void 0 === t && (t = function () { return 0 }), new Promise(function (r, u) { var f = 0, e = function () { if (n()) r(); else { f++; var o = t(f); null != i && f >= i ? u() : setTimeout(e, o) } }; e() }) } function dn(n, t) { for (var f, r = 1, u = -1, i = 0; i < n.length; ++i)if (n[i] >= 0) r *= n[i]; else if (-1 === n[i]) { if (-1 !== u) throw Error("Shapes can only have 1 implicit size. Found -1 at dim " + u + " and dim " + i); u = i } else if (n[i] < 0) throw Error("Shapes can not be < 0. Found " + n[i] + " at dim " + i); if (-1 === u) { if (t > 0 && t !== r) throw Error("Size(" + t + ") must match the product of shape " + n); return n } if (0 === r) throw Error("Cannot infer the missing size in [" + n + "] when there are 0 elements"); if (t % r != 0) throw Error("The implicit shape can't be a fractional number. Got " + t + " / " + r); return f = n.slice(), f[u] = t / r, f } function pt(n, t) { var r = t.length; return i((n = null == n ? t.map(function (n, t) { return t }) : [].concat(n)).every(function (n) { return n >= -r && n < r }), function () { return "All values in axis param must be in range [-" + r + ", " + r + ") but got axis " + n }), i(n.every(function (n) { return lt(n) }), function () { return "All values in axis param must be integers but got axis " + n }), n.map(function (n) { return n < 0 ? r + n : n }) } function rf(n, t) { for (var f = [], e = [], o = null != t && Array.isArray(t) && 0 === t.length, r = null == t || o ? null : pt(t, n).sort(), u = 0, i = 0; i < n.length; ++i) { if (null != r) { if (r[u] === i && 1 !== n[i]) throw new Error("Can't squeeze axis " + i + " since its dim '" + n[i] + "' is not 1"); (null == r[u] || r[u] > i) && 1 === n[i] && (f.push(n[i]), e.push(i)); r[u] <= i && u++ } 1 !== n[i] && (f.push(n[i]), e.push(i)) } return { newShape: f, keptDims: e } } function ke(n, t) { var i = null; if (null == n || "float32" === n) i = new Float32Array(t); else if ("int32" === n) i = new Int32Array(t); else { if ("bool" !== n) throw new Error("Unknown data type " + n); i = new Uint8Array(t) } return i } function rs(n, t) { var i = null; if (null == n || "float32" === n) i = new Float32Array(t); else if ("int32" === n) i = new Int32Array(t); else if ("bool" === n) i = new Uint8Array(t); else { if ("string" !== n) throw new Error("Unknown data type " + n); i = new Array(t) } return i } function gn(n, t) { for (var r, i = 0; i < n.length; i++)if (r = n[i], isNaN(r) || !isFinite(r)) throw Error("A tensor of type " + t + " being uploaded contains " + r + "."); } function ntt(n) { return "bool" === n || "complex64" === n || "float32" === n || "int32" === n || "string" === n } function ttt(n, t) { return "complex64" !== t && ("float32" !== t || "complex64" === n) && ("int32" !== t || "float32" === n || "complex64" === n) && ("bool" !== t || "bool" !== n) } function ei(n) { return n instanceof Float32Array || n instanceof Int32Array || n instanceof Uint8Array } function ay(n) { if ("float32" === n || "int32" === n) return 4; if ("complex64" === n) return 8; if ("bool" === n) return 1; throw new Error("Unknown dtype " + n); } function itt(n) { if (null == n) return 0; var t = 0; return n.forEach(function (n) { return t += n.length }), t } function uf(n) { return "string" == typeof n || n instanceof String } function rtt(n) { return "boolean" == typeof n } function utt(n) { return "number" == typeof n } function de(n) { return Array.isArray(n) ? de(n[0]) : n instanceof Float32Array ? "float32" : n instanceof Int32Array || n instanceof Uint8Array ? "int32" : utt(n) ? "float32" : uf(n) ? "string" : rtt(n) ? "bool" : "float32" } function ff(n) { return !!(n && n.constructor && n.call && n.apply) } function sc(n, t) { for (var i = t; i < n; ++i)if (n % i == 0) return i; return n } function cr(n) { var i = n.length, r, t; if (i < 2) return []; for (r = new Array(i - 1), r[i - 2] = n[i - 1], t = i - 3; t >= 0; --t)r[t] = r[t + 1] * n[t + 1]; return r } function vy(n, t, i) { if ("string" === t) throw new Error("Cannot convert a string[] to a TypedArray"); if (Array.isArray(n) && (n = hu(n)), i && gn(n, t), function (n, t) { return n instanceof Float32Array && "float32" === t || n instanceof Int32Array && "int32" === t || n instanceof Uint8Array && "bool" === t }(n, t)) return n; if (null == t || "float32" === t || "complex64" === t) return new Float32Array(n); if ("int32" === t) return new Int32Array(n); if ("bool" === t) { for (var u = new Uint8Array(n.length), r = 0; r < u.length; ++r)0 !== Math.round(n[r]) && (u[r] = 1); return u } throw new Error("Unknown data type " + t); } function yy(n, t) { if (0 === n.length) return t[0]; var i = n.reduce(function (n, t) { return n * t }); if (0 === i) return []; if (i !== t.length) throw new Error("[" + n + "] does not match the input size."); return function n(t, i, r) { var e = [], f, u, o, s; if (1 === i.length) for (f = i[0], u = 0; u < f; u++)e[u] = r[t + u]; else for (f = i[0], o = i.slice(1), s = o.reduce(function (n, t) { return n * t }), u = 0; u < f; u++)e[u] = n(t + u * s, o, r); return e }(0, n, t) } function py(n, t) { for (var i = ge(n, t), r = 0; r < i.length; r++)i[r] = 1; return i } function ge(n, t) { if (null == t || "float32" === t || "complex64" === t) return new Float32Array(n); if ("int32" === t) return new Int32Array(n); if ("bool" === t) return new Uint8Array(n); throw new Error("Unknown data type " + t); } function lr() { return o().platform.now() } function wy(n) { n.forEach(function (t) { i(Number.isInteger(t) && t >= 0, function () { return "Tensor must have a shape comprised of positive integers but got shape [" + n + "]." }) }) } function ftt(n, t) { return void 0 === t && (t = "utf-8"), t = t || "utf-8", o().platform.encode(n, t) } function us(n, t) { return void 0 === t && (t = "utf-8"), t = t || "utf-8", o().platform.decode(n, t) } function by(n, t, i) { if (0 === t) return 0; if (1 === t) return n[0]; for (var u = n[n.length - 1], r = 0; r < n.length - 1; ++r)u += i[r] * n[r]; return u } function ett(n, t, i) { if (0 === t) return []; if (1 === t) return [n]; for (var r = new Array(t), u = 0; u < r.length - 1; ++u)r[u] = Math.floor(n / i[u]), n -= r[u] * i[u]; return r[r.length - 1] = n, r } function obt(n, t, i, r) { var f = cr(t), e = function (n, t, i, r) { var h = w(t), f = r[r.length - 1], o = new Array(f).fill(0), c = t.length, l = "complex64" === i ? os(n) : n, e, s, u; if (c > 1) for (e = 0; e < h / f; e++)for (s = e * f, u = 0; u < f; u++)o[u] = Math.max(o[u], es(l[s + u], 0, i).length); return o }(n, t, i, f), o = t.length, s = function n(t, i, r, u, f, e) { var o, l, a, d, g; void 0 === e && (e = !0); var v = "complex64" === r ? 2 : 1, h = i[0], y = i.length; if (0 === y) return "complex64" === r ? [es(os(t)[0], 0, r)] : "bool" === r ? [stt(t[0])] : [t[0].toString()]; if (1 === y) { if (h > ott) { var nt = fs * v, p = Array.from(t.slice(0, nt)), w = Array.from(t.slice((h - fs) * v, h * v)); return "complex64" === r && (p = os(p), w = os(w)), ["[" + p.map(function (n, t) { return es(n, f[t], r) }).join(", ") + ", ..., " + w.map(function (n, t) { return es(n, f[h - fs + t], r) }).join(", ") + "]"] } return ["[" + ("complex64" === r ? os(t) : Array.from(t)).map(function (n, t) { return es(n, f[t], r) }).join(", ") + "]"] } var b = i.slice(1), k = u.slice(1), c = u[0] * v, s = []; if (h > ott) { for (o = 0; o < fs; o++)l = (a = o * c) + c, s.push.apply(s, n(t.slice(a, l), b, r, k, f, !1)); for (s.push("..."), o = h - fs; o < h; o++)l = (a = o * c) + c, s.push.apply(s, n(t.slice(a, l), b, r, k, f, o === h - 1)) } else for (o = 0; o < h; o++)l = (a = o * c) + c, s.push.apply(s, n(t.slice(a, l), b, r, k, f, o === h - 1)); for (d = 2 === y ? "," : "", s[0] = "[" + s[0] + d, o = 1; o < s.length - 1; o++)s[o] = " " + s[o] + d; for (g = ",\n", o = 2; o < y; o++)g += "\n"; return s[s.length - 1] = " " + s[s.length - 1] + "]" + (e ? "" : g), s }(n, t, i, f, e), u = ["Tensor"]; return r && (u.push("  dtype: " + i), u.push("  rank: " + o), u.push("  shape: [" + t + "]"), u.push("  values:")), u.push(s.map(function (n) { return "    " + n }).join("\n")), u.join("\n") } function es(n, t, i) { return re(Array.isArray(n) ? parseFloat(n[0].toFixed(ky)) + " + " + parseFloat(n[1].toFixed(ky)) + "j" : uf(n) ? "'" + n + "'" : "bool" === i ? stt(n) : parseFloat(n.toFixed(ky)).toString(), t) } function stt(n) { return 0 === n ? "false" : "true" } function os(n) { for (var i = [], t = 0; t < n.length; t += 2)i.push([n[t], n[t + 1]]); return i } function ri(n, t) { if ("string" === n || "string" === t) { if ("string" === n && "string" === t) return "string"; throw new Error("Can not upcast " + n + " with " + t); } return ctt[n][t] } function hc(n) { return ri(n, "int32") } function ht(n, t) { if (n.dtype === t.dtype) return [n, t]; var i = ri(n.dtype, t.dtype); return [n.cast(i), t.cast(i)] } function ltt(n, t) { i(n.dtype === t.dtype, function () { return "The dtypes of the first(" + n.dtype + ") and second(" + t.dtype + ") input must match" }) } function rp(n) { var t = []; return function n(t, i, r) { var f, e, o, u; if (null != t) { if (t instanceof et) return void i.push(t); if (f = t, Array.isArray(f) || "object" == typeof f) { e = t; for (o in e) u = e[o], r.has(u) || (r.add(u), n(u, i, r)) } } }(n, t, new Set), t } function vtt() { return "undefined" != typeof window && null != window.document || "undefined" != typeof WorkerGlobalScope } function ytt(n, t) { sf[n] = t } function ru(n) { n in sf || (sf[n] = function (n) { if (1 !== n && 2 !== n) throw new Error("Cannot get WebGL rendering context, WebGL is disabled."); var t = function (n) { if ("undefined" != typeof OffscreenCanvas && 2 === n) return new OffscreenCanvas(300, 150); if ("undefined" != typeof document) return document.createElement("canvas"); throw new Error("Cannot create a canvas in this context"); }(n); return (t.addEventListener("webglcontextlost", function (t) { t.preventDefault(); delete sf[n] }, !1), 1 === n) ? t.getContext("webgl", cc) || t.getContext("experimental-webgl", cc) : t.getContext("webgl2", cc) }(n)); var t = sf[n]; return t.isContextLost() ? (delete sf[n], ru(n)) : (t.disable(t.DEPTH_TEST), t.disable(t.STENCIL_TEST), t.disable(t.BLEND), t.disable(t.DITHER), t.disable(t.POLYGON_OFFSET_FILL), t.disable(t.SAMPLE_COVERAGE), t.enable(t.SCISSOR_TEST), t.enable(t.CULL_FACE), t.cullFace(t.BACK), sf[n]) } function lc(n, t) { return [t, n] } function hs(n) { var t = w(n); return oc(Math.ceil(t / 4)) } function cs(n, t) { return [Math.max(1, Math.ceil(t / 2)), Math.max(1, Math.ceil(n / 2))] } function fp(n, t) { var r, u, f, e, s, h, c, l, a, i = n; return 2 === o().getNumber("WEBGL_VERSION") ? (r = i.R32F, u = i.R16F, f = i.RGBA16F, e = i.RGBA32F, s = i.RED, h = 4, c = 1, l = i.HALF_FLOAT, a = i.FLOAT) : (r = n.RGBA, u = n.RGBA, f = n.RGBA, e = i.RGBA, s = n.RGBA, h = 4, c = 4, l = null != t ? t.HALF_FLOAT_OES : null, a = n.FLOAT), { internalFormatFloat: r, internalFormatHalfFloat: u, internalFormatPackedHalfFloat: f, internalFormatPackedFloat: e, textureFormatFloat: s, downloadTextureFormat: n.RGBA, downloadUnpackNumChannels: h, defaultNumChannels: c, textureTypeHalfFloat: l, textureTypeFloat: a } } function l(n, t, i) { var r = i(); return t && function (n) { var t = n.getError(); if (t !== n.NO_ERROR) throw new Error("WebGL Error: " + ktt(n, t)); }(n), r } function btt(n) { return !!(o().getBool("WEBGL_RENDER_FLOAT32_ENABLED") || 0 === n || ptt < Math.abs(n) && Math.abs(n) < wtt) } function ktt(n, t) { switch (t) { case n.NO_ERROR: return "NO_ERROR"; case n.INVALID_ENUM: return "INVALID_ENUM"; case n.INVALID_VALUE: return "INVALID_VALUE"; case n.INVALID_OPERATION: return "INVALID_OPERATION"; case n.INVALID_FRAMEBUFFER_OPERATION: return "INVALID_FRAMEBUFFER_OPERATION"; case n.OUT_OF_MEMORY: return "OUT_OF_MEMORY"; case n.CONTEXT_LOST_WEBGL: return "CONTEXT_LOST_WEBGL"; default: return "Unknown error code " + t } } function ls(n, t, i) { return cu(n, t, function () { return n.getExtension(i) }, 'Extension "' + i + '" not supported on this browser.') } function dtt(n, t, i) { var r = cu(n, t, function () { return n.createShader(n.VERTEX_SHADER) }, "Unable to create vertex WebGLShader."); if (l(n, t, function () { return n.shaderSource(r, i) }), l(n, t, function () { return n.compileShader(r) }), !1 === n.getShaderParameter(r, n.COMPILE_STATUS)) throw console.log(n.getShaderInfoLog(r)), new Error("Failed to compile vertex shader."); return r } function gtt(n, t, i) { var r = cu(n, t, function () { return n.createShader(n.FRAGMENT_SHADER) }, "Unable to create fragment WebGLShader."); if (l(n, t, function () { return n.shaderSource(r, i) }), l(n, t, function () { return n.compileShader(r) }), !1 === n.getShaderParameter(r, n.COMPILE_STATUS)) throw function (n, t) { var e = nit.exec(t); if (null == e) return console.log("Couldn't parse line number in error: " + t), void console.log(n); for (var r = +e[1], o = n.split("\n"), s = o.length.toString().length + 2, i = o.map(function (n, t) { return re((t + 1).toString(), s) + n }), u = 0, f = 0; f < i.length; f++)u = Math.max(i[f].length, u); var h = i.slice(0, r - 1), c = i.slice(r - 1, r), l = i.slice(r); console.log(h.join("\n")); console.log(t.split("\n")[0]); console.log("%c " + re(c[0], u), "border:1px solid red; background-color:#e3d2d2; color:#a61717"); console.log(l.join("\n")) }(i, n.getShaderInfoLog(r)), new Error("Failed to compile fragment shader."); return r } function tit(n, t) { return cu(n, t, function () { return n.createProgram() }, "Unable to create WebGLProgram.") } function iit(n, t, i) { if (l(n, t, function () { return n.linkProgram(i) }), !1 === n.getProgramParameter(i, n.LINK_STATUS)) throw console.log(n.getProgramInfoLog(i)), new Error("Failed to link vertex and fragment shaders."); } function yc(n, t, i) { if (l(n, t, function () { return n.validateProgram(i) }), !1 === n.getProgramParameter(i, n.VALIDATE_STATUS)) throw console.log(n.getProgramInfoLog(i)), new Error("Shader program validation failed."); } function rit(n, t, i) { var r = cu(n, t, function () { return n.createBuffer() }, "Unable to create WebGLBuffer"); return l(n, t, function () { return n.bindBuffer(n.ARRAY_BUFFER, r) }), l(n, t, function () { return n.bufferData(n.ARRAY_BUFFER, i, n.STATIC_DRAW) }), r } function uit(n, t, i) { var r = cu(n, t, function () { return n.createBuffer() }, "Unable to create WebGLBuffer"); return l(n, t, function () { return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, r) }), l(n, t, function () { return n.bufferData(n.ELEMENT_ARRAY_BUFFER, i, n.STATIC_DRAW) }), r } function fit(n, t) { return cu(n, t, function () { return n.createTexture() }, "Unable to create WebGLTexture.") } function eit(n, t) { var i = o().getNumber("WEBGL_MAX_TEXTURE_SIZE"), r; if (n <= 0 || t <= 0) { r = "[" + n + "x" + t + "]"; throw new Error("Requested texture size " + r + " is invalid."); } if (n > i || t > i) { r = "[" + n + "x" + t + "]"; throw new Error("Requested texture size " + r + " greater than WebGL maximum on this browser / GPU " + ("[" + i + "x" + i + "]") + "."); } } function oit(n, t) { return cu(n, t, function () { return n.createFramebuffer() }, "Unable to create WebGLFramebuffer.") } function ep(n, t, i, r, u, f, e, o) { var s = n.getAttribLocation(i, r); return -1 !== s && (l(n, t, function () { return n.bindBuffer(n.ARRAY_BUFFER, u) }), l(n, t, function () { return n.vertexAttribPointer(s, f, n.FLOAT, !1, e, o) }), l(n, t, function () { return n.enableVertexAttribArray(s) }), !0) } function sit(n, t, i, r) { vit(n, r); l(n, t, function () { return n.activeTexture(n.TEXTURE0 + r) }); l(n, t, function () { return n.bindTexture(n.TEXTURE_2D, i) }) } function hit(n, t, i, r) { return cu(n, t, function () { return n.getUniformLocation(i, r) }, 'uniform "' + r + '" not present in program.') } function cit(n, t, i) { return n.getUniformLocation(t, i) } function lit(n, t, i, r, u, f) { l(n, t, function () { return sit(n, t, r, f) }); l(n, t, function () { return n.uniform1i(u, f) }) } function pc(n, t, i, r) { l(n, t, function () { return n.bindFramebuffer(n.FRAMEBUFFER, r) }); l(n, t, function () { return n.framebufferTexture2D(n.FRAMEBUFFER, n.COLOR_ATTACHMENT0, n.TEXTURE_2D, i, 0) }) } function op(n, t, i) { l(n, t, function () { return n.bindFramebuffer(n.FRAMEBUFFER, i) }); l(n, t, function () { return n.framebufferTexture2D(n.FRAMEBUFFER, n.COLOR_ATTACHMENT0, n.TEXTURE_2D, null, 0) }) } function as(n) { var t = n.checkFramebufferStatus(n.FRAMEBUFFER); if (t !== n.FRAMEBUFFER_COMPLETE) throw new Error("Error binding framebuffer: " + ait(n, t)); } function ait(n, t) { switch (t) { case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT: return "FRAMEBUFFER_INCOMPLETE_ATTACHMENT"; case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: return "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"; case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS: return "FRAMEBUFFER_INCOMPLETE_DIMENSIONS"; case n.FRAMEBUFFER_UNSUPPORTED: return "FRAMEBUFFER_UNSUPPORTED"; default: return "unknown error " + t } } function cu(n, t, i, r) { var u = l(n, t, function () { return i() }); if (null == u) throw new Error(r); return u } function vit(n, t) { var i = n.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1, r = t + n.TEXTURE0; if (r < n.TEXTURE0 || r > i) throw new Error("textureUnit must be in " + ("[gl.TEXTURE0, gl.TEXTURE" + i + "]") + "."); } function vs(n, t) { return void 0 === t && (t = 2), w(n.slice(0, n.length - t)) } function ys(n) { if (0 === n.length) throw Error("Cannot get rows and columns of an empty shape array."); return [n.length > 1 ? n[n.length - 2] : 1, n[n.length - 1]] } function wc(n) { var t = [1, 1, 1]; return 0 === n.length || 1 === n.length && 1 === n[0] || (t = [vs(n)].concat(ys(n))), t } function yit(n, t) { var u, i, f, r; if (void 0 === t && (t = !1), i = o().getNumber("WEBGL_MAX_TEXTURE_SIZE"), (t && (i *= 2, 1 === (n = n.map(function (t, i) { return i >= n.length - 2 ? cy(n[i]) : n[i] })).length && (n = [2, n[0]])), 2 !== n.length) && (f = rf(n), n = f.newShape), r = w(n), n.length <= 1 && r <= i) return [1, r]; if (2 === n.length && n[0] <= i && n[1] <= i) return n; if (3 === n.length && n[0] * n[1] <= i && n[2] <= i) return [n[0] * n[1], n[2]]; if (3 === n.length && n[0] <= i && n[1] * n[2] <= i) return [n[0], n[1] * n[2]]; if (4 === n.length && n[0] * n[1] * n[2] <= i && n[3] <= i) return [n[0] * n[1] * n[2], n[3]]; if (4 === n.length && n[0] <= i && n[1] * n[2] * n[3] <= i) return [n[0], n[1] * n[2] * n[3]]; if (t) { var h = vs(n), e = 2, s = 2; return n.length && (e = (u = ys(n))[0], s = u[1]), oc(r = h * (e / 2) * (s / 2)).map(function (n) { return 2 * n }) } return oc(r) } function bc(n) { return n % 2 == 0 } function ps(n, t) { if (yt(n = n.slice(-2), t = t.slice(-2)) || !n.length || !t.length || 0 === n[0] || 0 === n[1] || 0 === t[0] || 0 === t[1]) return !0; if (n.length !== t.length) { var i = n.slice(-1)[0], r = t.slice(-1)[0]; if (i === r || bc(i) && bc(r) && (1 === n[0] || 1 === t[0])) return !0 } return n[1] === t[1] && bc(n[0]) && bc(t[0]) } function pit(n) { if (null == ac) { var t = ru(n); ac = t.getParameter(t.MAX_TEXTURE_SIZE) } return ac } function wit(n) { if (null == vc) { var t = ru(n); vc = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS) } return Math.min(16, vc) } function bit(n) { if (0 === n) return 0; var t = ru(n); return tr(t, "EXT_disjoint_timer_query_webgl2") && 2 === n ? 2 : tr(t, "EXT_disjoint_timer_query") ? 1 : 0 } function tr(n, t) { return null != n.getExtension(t) } function sp(n) { try { if (null != ru(n)) return !0 } catch (n) { return !1 } return !1 } function kit(n) { if (0 === n) return !1; var t = ru(n); if (1 === n) { if (!tr(t, "OES_texture_float")) return !1 } else if (!tr(t, "EXT_color_buffer_float")) return !1; return hp(t) } function dit(n) { var t, i; return 0 === n ? !1 : (t = ru(n), 1 !== n) ? tr(t, "EXT_color_buffer_float") ? hp(t) : tr(t, "EXT_color_buffer_half_float") ? (i = t.getExtension("EXT_color_buffer_half_float"), function (n, t) { var i = fp(n, t), r = n.createTexture(), u, f; return n.bindTexture(n.TEXTURE_2D, r), n.texImage2D(n.TEXTURE_2D, 0, i.internalFormatHalfFloat, 1, 1, 0, i.textureFormatFloat, i.textureTypeHalfFloat, null), u = n.createFramebuffer(), n.bindFramebuffer(n.FRAMEBUFFER, u), n.framebufferTexture2D(n.FRAMEBUFFER, n.COLOR_ATTACHMENT0, n.TEXTURE_2D, r, 0), f = n.checkFramebufferStatus(n.FRAMEBUFFER) === n.FRAMEBUFFER_COMPLETE, n.bindTexture(n.TEXTURE_2D, null), n.bindFramebuffer(n.FRAMEBUFFER, null), n.deleteTexture(r), n.deleteFramebuffer(u), f }(t, i)) : !1 : !!tr(t, "OES_texture_float") && !!tr(t, "WEBGL_color_buffer_float") && hp(t) } function hp(n) { var t = fp(n), i = n.createTexture(), r, u; return n.bindTexture(n.TEXTURE_2D, i), n.texImage2D(n.TEXTURE_2D, 0, t.internalFormatFloat, 1, 1, 0, t.textureFormatFloat, t.textureTypeFloat, null), r = n.createFramebuffer(), n.bindFramebuffer(n.FRAMEBUFFER, r), n.framebufferTexture2D(n.FRAMEBUFFER, n.COLOR_ATTACHMENT0, n.TEXTURE_2D, i, 0), u = n.checkFramebufferStatus(n.FRAMEBUFFER) === n.FRAMEBUFFER_COMPLETE, n.bindTexture(n.TEXTURE_2D, null), n.bindFramebuffer(n.FRAMEBUFFER, null), n.deleteTexture(i), n.deleteFramebuffer(r), u } function git(n) { return 2 === n && null != ru(n).fenceSync } function cbt() { o().set("PROD", !0) } function lbt() { o().set("DEBUG", !0) } function abt() { o().set("DEPRECATION_WARNINGS_ENABLED", !1); console.warn("TensorFlow.js deprecation warnings have been disabled.") } function cp(n) { o().getBool("DEPRECATION_WARNINGS_ENABLED") && console.warn(n + " You can disable deprecation warnings with tf.disableDeprecationWarnings().") } function vbt() { r.disposeVariables() } function ybt() { return r } function pbt() { return r.memory() } function wbt(n) { return r.profile(n) } function c(n, t) { return r.tidy(n, t) } function ai(n) { rp(n).forEach(function (n) { return n.dispose() }) } function trt(n) { return r.keep(n) } function bbt(n) { return r.time(n) } function kbt(n) { return r.setBackend(n) } function dbt() { return r.ready() } function gbt() { return r.backendName } function nkt(n) { r.removeBackend(n) } function tkt(n) { return r.findBackend(n) } function ikt(n) { return r.findBackendFactory(n) } function rkt(n, t, i) { return void 0 === i && (i = 1), r.registerBackend(n, t, i) } function ukt() { return r.backend } function fkt(n, t) { o().setPlatform(n, t) } function kc() { for (var t = [], n = 0; n < arguments.length; n++)t[n] = arguments[n]; o().getBool("IS_TEST") || console.warn.apply(console, t) } function uu(n, t) { var r = n, u; if (ei(n)) return "string" === t ? [] : [n.length]; if (!Array.isArray(n)) return []; for (u = []; Array.isArray(r) || ei(r) && "string" !== t;)u.push(r.length), r = r[0]; return Array.isArray(n) && o().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY") && function n(t, r, u) { if (u = u || [], !Array.isArray(t) && !ei(t)) return void i(0 === r.length, function () { return "Element arr[" + u.join("][") + "] is a primitive, but should be an array/TypedArray of " + r[0] + " elements" }); i(r.length > 0, function () { return "Element arr[" + u.join("][") + "] should be a primitive, but is an array of " + t.length + " elements" }); i(t.length === r[0], function () { return "Element arr[" + u.join("][") + "] should have " + r[0] + " elements, but has " + t.length + " elements" }); for (var e = r.slice(1), f = 0; f < t.length; ++f)n(t[f], e, u.concat(f)) }(n, u, []), u } function irt(n, t, i, r) { if (null != n && ("numeric" !== n && n !== t || "numeric" === n && "string" === t)) throw new Error("Argument '" + i + "' passed to '" + r + "' must be " + n + " tensor, but got " + t + " tensor"); } function t(n, t, i, u) { var f, e, s, h; if (void 0 === u && (u = "numeric"), n instanceof et) return irt(u, n.dtype, t, i), n; if (f = de(n), "string" !== f && ["bool", "int32", "float32"].indexOf(u) >= 0 && (f = u), irt(u, f, t, i), null == n || !ei(n) && !Array.isArray(n) && "number" != typeof n && "boolean" != typeof n && "string" != typeof n) { e = null == n ? "null" : n.constructor.name; throw new Error("Argument '" + t + "' passed to '" + i + "' must be a Tensor or TensorLike, but got '" + e + "'"); } return s = uu(n, f), ei(n) || Array.isArray(n) || (n = [n]), h = "string" !== f ? vy(n, f, o().getBool("DEBUG")) : hu(n, [], !0), r.makeTensor(h, s, f) } function ws(n, i, r, u) { if (void 0 === u && (u = "numeric"), !Array.isArray(n)) throw new Error("Argument " + i + " passed to " + r + " must be a `Tensor[]` or `TensorLike[]`"); return n.map(function (n, u) { return t(n, i + "[" + u + "]", r) }, u) } function lp(n, t) { for (var i = 0; i < n.length; ++i)if (n[n.length - i - 1] !== t - 1 - i) return !1; return !0 } function rrt(n, t, i) { for (var f = n.length + t.length, r = [], e = 0, o = 0, u = 0; u < f; u++)-1 === i.indexOf(u) ? r.push(n[e++]) : r.push(t[o++]); return r } function oi(n, t) { for (var r = [], u = n.length, i = 0; i < u; i++)-1 === t.indexOf(i) && r.push(n[i]); return [r, t.map(function (t) { return n[t] })] } function vi(n, t) { return rrt(n, t.map(function () { return 1 }), t) } function wi(n, t, r) { i(lp(t, r), function () { return n + " supports only inner-most axes for now. Got axes " + t + " and rank-" + r + " input." }) } function ar(n, t) { if (lp(n, t)) return null; for (var r = [], i = 0; i < t; ++i)-1 === n.indexOf(i) && r.push(i); return n.forEach(function (n) { return r.push(n) }), r } function dc(n) { return n.map(function (n, t) { return [t, n] }).sort(function (n, t) { return n[1] - t[1] }).map(function (n) { return n[0] }) } function vr(n, t) { for (var r = [], i = t - n; i < t; ++i)r.push(i); return r } function urt(n, t) { var r = n[0].length, u; n.forEach(function (n, t) { i(n.length === r, function () { return "Error in concat" + r + "D: rank of tensors[" + t + "] must be the same as the rank of the rest (" + r + ")" }) }); i(t >= 0 && t < r, function () { return "Error in concat" + r + "D: axis must be between 0 and " + (r - 1) + "." }); u = n[0]; n.forEach(function (n, f) { for (var e = 0; e < r; e++)i(e === t || n[e] === u[e], function () { return "Error in concat" + r + "D: Shape of tensors[" + f + "] (" + n + ") does not match the shape of the rest (" + u + ") along the non-concatenated axis " + f + "." }) }) } function ue(n, t) { for (var r = n[0].slice(), i = 1; i < n.length; i++)r[t] += n[i][t]; return r } function u(n) { var i = Object.keys(n), t, f, u; if (1 !== i.length) throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with " + i.length + " keys."); return t = i[0], f = n[t], t.endsWith("_") && (t = t.substring(0, t.length - 1)), u = function () { for (var u, i = [], n = 0; n < arguments.length; n++)i[n] = arguments[n]; r.startScope(t); try { return u = f.apply(void 0, i), u instanceof Promise && console.error("Cannot return a Promise inside of tidy."), r.endScope(u), u } catch (i) { throw r.endScope(null), i; } }, Object.defineProperty(u, "name", { value: t, configurable: !0 }), u } function fi(n, t, i) { return hf(n, t, uu(n, i), i) } function hf(n, t, u, f) { var s, h, e, c, l; if (null == f && (f = de(n)), "complex64" === f) throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag)."); if (!ei(n) && !Array.isArray(n) && "number" != typeof n && "boolean" != typeof n && "string" != typeof n) throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray"); if (null != t) for (wy(t), s = w(t), h = w(u), i(s === h, function () { return "Based on the provided shape, [" + t + "], the tensor should have " + s + " values but has " + h }), e = 0; e < u.length; ++e)c = u[e], l = e !== u.length - 1 || c !== w(t.slice(e)), i(u[e] === t[e] || !l, function () { return "Error creating a new Tensor. Inferred shape (" + u + ") does not match the provided shape (" + t + "). " }); return ei(n) || Array.isArray(n) || (n = [n]), t = t || u, n = "string" !== f ? vy(n, f, o().getBool("DEBUG")) : hu(n, [], !0), r.makeTensor(n, t, f) } function h(n, t) { if ((ei(n) && "string" !== t || Array.isArray(n)) && "complex64" !== t) throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)"); if ("string" === t && ei(n) && !(n instanceof Uint8Array)) throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`."); return hf(n, [], [], t) } function vt(n, t) { ie(n); var i = uu(n, t); if (1 !== i.length) throw new Error("tensor1d() requires values to be a flat/TypedArray"); return hf(n, null, i, t) } function lu(n, t, i) { if (ie(n), null != t && 2 !== t.length) throw new Error("tensor2d() requires shape to have two numbers"); var r = uu(n, i); if (2 !== r.length && 1 !== r.length) throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray"); if (1 === r.length && null == t) throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray"); return hf(n, t, r, i) } function gc(n, t, i) { if (ie(n), null != t && 3 !== t.length) throw new Error("tensor3d() requires shape to have three numbers"); var r = uu(n, i); if (3 !== r.length && 1 !== r.length) throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray"); if (1 === r.length && null == t) throw new Error("tensor3d() requires shape to be provided when `values` are a flat array"); return hf(n, t, r, i) } function yi(n, t, i) { if (ie(n), null != t && 4 !== t.length) throw new Error("tensor4d() requires shape to have four numbers"); var r = uu(n, i); if (4 !== r.length && 1 !== r.length) throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray"); if (1 === r.length && null == t) throw new Error("tensor4d() requires shape to be provided when `values` are a flat array"); return hf(n, t, r, i) } function frt(n, t, i) { if (ie(n), null != t && 5 !== t.length) throw new Error("tensor5d() requires shape to have five numbers"); var r = uu(n, i); if (5 !== r.length && 1 !== r.length) throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray"); if (1 === r.length && null == t) throw new Error("tensor5d() requires shape to be provided when `values` are a flat array"); return hf(n, t, r, i) } function ert(n, t, i) { if (ie(n), null != t && 6 !== t.length) throw new Error("tensor6d() requires shape to have six numbers"); var r = uu(n, i); if (6 !== r.length && 1 !== r.length) throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray"); if (1 === r.length && null == t) throw new Error("tensor6d() requires shape to be provided when `values` are a flat array"); return hf(n, t = t || r, r, i) } function ort(n, t, i, u) { return void 0 === t && (t = !0), r.makeVariable(n, t, i, u) } function fe(n, t) { var i, u, f; return (void 0 === t && (t = "float32"), "complex64" === t) ? (i = fe(n, "float32"), u = ot(n, "float32"), ui(i, u)) : (f = py(w(n), t), r.makeTensor(f, n, t)) } function ot(n, t) { var i, u, f; return (void 0 === t && (t = "float32"), "complex64" === t) ? (i = ot(n, "float32"), u = ot(n, "float32"), ui(i, u)) : (f = ge(w(n), t), r.makeTensor(f, n, t)) } function pr(n, t, i) { return r.runKernelFunc(function (r) { return r.fill(n, t, i) }, {}) } function srt(n, t, i) { if (i <= 0) throw new Error("The number of values should be positive."); return r.runKernelFunc(function (r) { return r.linspace(n, t, i) }, {}) } function bs(n, t, i, r) { var u, f; if (void 0 === i && (i = 1), void 0 === r && (r = "float32"), 0 === i) throw new Error("Cannot have a step of zero"); if (n === t || n < t && i < 0 || t < n && i > 1) return ot([0], r); for (u = ge(Math.abs(Math.ceil((t - n) / i)), r), t < n && 1 === i && (i = -1), u[0] = n, f = 1; f < u.length; f++)u[f] = u[f - 1] + i; return vt(u, r) } function ee(n, t) { return n(t = { exports: {} }, t.exports), t.exports } function k(n, t, i) { return void 0 === t && (t = "float32"), t = t || "float32", wy(n), new no(n, t, i) } function vrt(n, t) { void 0 === t && (t = !1); console.log(n.toString(t)) } function rl(n, t, i, r) { var u, e, f; if (void 0 === r && (r = !0), u = [], r) (u = u.concat(t.slice(0))).push(n[0] / i), u = u.concat(n.slice(1)); else { for (u = u.concat(n[0]), e = t.length, f = 0; f < e; ++f)u = u.concat([n[f + 1] / t[f], t[f]]); u = u.concat(n.slice(e + 1)) } return u } function ul(n, t, i) { var u, r, f, e; if (void 0 === i && (i = !0), u = [], i) for (u.push(t), r = t + 1; r < n; ++r)r <= 2 * t ? (u.push(r), u.push(r - (t + 1))) : u.push(r); else { for (f = [], e = [], r = 1; r < n; ++r)r >= 2 * t + 1 || r % 2 == 1 ? e.push(r) : f.push(r); u.push.apply(u, f); u.push(0); u.push.apply(u, e) } return u } function fl(n, t, i, r) { var f, u; for (void 0 === r && (r = !0), f = [], r ? f.push(n[0] / i) : f.push(n[0] * i), u = 1; u < n.length; ++u)u <= t.length ? r ? f.push(t[u - 1] * n[u]) : f.push(n[u] / t[u - 1]) : f.push(n[u]); return f } function sut(n, t) { for (var r = [0], i = 0; i < t; ++i)r.push(n[i][0]); return r } function hut(n, t, i) { for (var u = n.slice(0, 1), r = 0; r < i; ++r)u.push(n[r + 1] - t[r][0] - t[r][1]); return u } function dp(n, t) { var e, u, f, h; if (n.rank < 1) throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was " + n.rank + "."); if (t.rank < 1) throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was " + t.rank + "."); if ("int32" !== t.dtype) throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was " + t.dtype + "."); if (t.shape[t.rank - 1] > n.rank) throw new Error("index innermost dimension length must be <= tensor rank; saw: " + t.shape[t.rank - 1] + " vs. " + n.rank); if (0 === n.size) throw new Error("Requested more than 0 entries, but input is empty. Input shape: " + n.shape + "."); for (var r = t.shape, o = r[r.length - 1], s = 1, i = 0; i < r.length - 1; ++i)s *= r[i]; for (e = n.shape, u = r.slice(), u.pop(), f = 1, i = o; i < n.rank; ++i)f *= e[i], u.push(e[i]); return h = cr(n.shape).map(function (n) { return n / f }).concat([1]).slice(0, o), [u, s, f, h] } function ol(n) { return n <= el ? n : sc(n, Math.floor(Math.sqrt(n))) } function lut(n, t, i) { var f = t.rank > 1 ? t.shape[t.rank - 1] : 1, u = t.rank > 1 ? t.rank - 1 : 1, e = "Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: " + i.shape + ", indices.shape: " + t.shape + ", shape: " + n + ", sliceDim: " + f + ", and batchDim: " + u + ".", r; if (i.rank < u) throw new Error(e + " update.rank < " + u + ". "); if (n.length < f + (i.rank - u)) throw new Error(e + " Output shape length < " + (f + (i.rank - u))); if (i.rank !== u + n.length - f) throw new Error(e + " update.rank != " + (u + n.length - f)); for (r = 0; r < u; ++r)if (i.shape[r] !== t.shape[r]) throw new Error(e + " updates.shape[" + r + "] (" + i.shape[r] + ") != indices.shape[" + r + "] (" + t.shape[r] + ")."); for (r = 0; r < i.rank - u; ++r)if (i.shape[r + u] !== n[r + f]) throw new Error(e + " updates.shape[" + (r + u) + "] (" + i.shape[r + u] + ") != shape[" + (r + u) + "] (" + n[r + u] + ")"); } function aut(n, t, i) { if (t.rank < 1) throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was " + t.rank + "."); if (n.rank < 1) throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was " + n.rank + "."); if ("int32" !== t.dtype) throw new Error("The dtype of 'indices' should be int32, but got dtype: " + t.dtype); if (i.length < 1) throw new Error("Output rank must be greater or equal to 1, but got shape: " + i); if (0 === i.length) { if (0 === t.size) throw new Error("Indices specified for empty output. indices shape: " + t.shape); if (0 === n.size) throw new Error("Updates specified for empty output. updates shape: " + n.shape); } lut(i, t, n) } function ks(n, t, i) { for (var o, f = t.shape.length, r = f > 1 ? t.shape[f - 1] : 1, s = i.length, e = 1, u = r; u < s; ++u)e *= i[u]; return o = r < 1 ? 1 : r, { sliceRank: r, numUpdates: w(t.shape) / o, sliceSize: e, strides: cr(i.slice(0, r)).concat([1]), outputSize: w(i) } } function yut(n, t, r) { i(n.rank === t.length, function () { return "Error in slice" + n.rank + "D: Length of begin " + t + " must match the rank of the array (" + n.rank + ")." }); i(n.rank === r.length, function () { return "Error in slice" + n.rank + "D: Length of size " + r + " must match the rank of the array (" + n.rank + ")." }); for (var f = function (u) { i(t[u] + r[u] <= n.shape[u], function () { return "Error in slice" + n.rank + "D: begin[" + u + "] + size[" + u + "] (" + (t[u] + r[u]) + ") would overflow input.shape[" + u + "] (" + n.shape[u] + ")" }) }, u = 0; u < n.rank; ++u)f(u) } function gp(n) { for (var t = [], i = 0; n > 0;)1 & n && t.push(i), n /= 2, i++; return t } function sl(n, t, i) { for (var u = [], r = 0; r < n.length; r++)u[r] = Math.ceil((t[r] - n[r]) / i[r]); return u } function put(n, t, i, r, u) { var f = t[u], o = i[u] || 1, e; return (n & 1 << u || null == f) && (f = o > 0 ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER), e = r[u], f < 0 && (f += e), f = ec(0, f, e - 1) } function wut(n, t, i, r, u) { var f = t[u], o = i[u] || 1, e; return (n & 1 << u || null == f) && (f = o > 0 ? Number.MAX_SAFE_INTEGER : Number.MIN_SAFE_INTEGER), e = r[u], f < 0 && (f += e), f = o > 0 ? ec(0, f, e) : ec(-1, f, e - 1) } function nw(n, t, i) { for (var u = i.length, r = 0; r < i.length; r++)if (i[r] > 1) { u = r; break } for (r = u + 1; r < i.length; r++)if (t[r] > 0 || i[r] !== n[r]) return !1; return !0 } function tw(n, t) { for (var r = n.length > 0 ? n[n.length - 1] : 1, i = 0; i < n.length - 1; i++)r += n[i] * t[i]; return r } function ykt(n) { return i(ff(n), function () { return "The f passed in grad(f) must be a function" }), function (i, u) { var e = t(i, "x", "tf.grad", null), f = null != u ? t(u, "dy", "tf.grad") : null; return r.tidy(function () { var t = r.gradients(function () { return n(e) }, [e], f), u = t.value, i = t.grads; return null != f && rt(u.shape, f.shape, "The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"), hl(i), i[0] }) } } function pkt(n) { return i(ff(n), function () { return "The f passed in grads(f) must be a function" }), function (u, f) { i(Array.isArray(u), function () { return "The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s" }); var o = ws(u, "args", "tf.grads", null), e = null != f ? t(f, "dy", "tf.grads") : null; return r.tidy(function () { var t = r.gradients(function () { return n.apply(void 0, o) }, o, e), u = t.value, i = t.grads; return null != e && rt(u.shape, e.shape, "The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"), hl(i), i }) } } function wkt(n) { return i(ff(n), function () { return "The f passed in valueAndGrad(f) must be a function" }), function (t, u) { i(t instanceof et, function () { return "The x passed in valueAndGrad(f)(x) must be a tensor" }); i(null == u || u instanceof et, function () { return "The dy passed in valueAndGrad(f)(x, dy) must be a tensor" }); var f = r.gradients(function () { return n(t) }, [t], u), e = f.grads, o = f.value; return hl(e), { grad: e[0], value: o } } } function bkt(n) { return i(ff(n), function () { return "The f passed in valueAndGrads(f) must be a function" }), function (t, u) { i(Array.isArray(t) && t.every(function (n) { return n instanceof et }), function () { return "The args passed in valueAndGrads(f)(args) must be array of tensors" }); i(null == u || u instanceof et, function () { return "The dy passed in valueAndGrads(f)(args, dy) must be a tensor" }); var f = r.gradients(function () { return n.apply(void 0, t) }, t, u); return null != u && rt(f.value.shape, u.shape, "The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"), hl(f.grads), f } } function kut(n, t) { var f, h, e, c, u; if (i(ff(n), function () { return "The f passed in variableGrads(f) must be a function" }), i(null == t || Array.isArray(t) && t.every(function (n) { return n instanceof ef }), function () { return "The varList passed in variableGrads(f, varList) must be an array of variables" }), f = null != t, !f) for (h in t = [], r.registeredVariables) t.push(r.registeredVariables[h]); e = f ? t.filter(function (n) { return !n.trainable }) : null; c = t.length; i((t = t.filter(function (n) { return n.trainable })).length > 0, function () { return "variableGrads() expects at least one of the input variables to be trainable, but none of the " + c + " variables is trainable." }); var l = r.gradients(n, t, null, !0), o = l.value, s = l.grads; return i(s.some(function (n) { return null != n }), function () { return "Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()." }), i(0 === o.rank, function () { return "The f passed in variableGrads(f) must return a scalar, but it returned a rank-" + o.rank + " tensor" }), u = {}, t.forEach(function (n, t) { null != s[t] && (u[n.name] = s[t]) }), null != e && e.forEach(function (n) { return u[n.name] = null }), { value: o, grads: u } } function ds(n) { return r.customGrad(n) } function hl(n) { if (n.filter(function (n) { return null == n }).length > 0) throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y."); } function f(n) { throw new Error("'" + n + "' not yet implemented or not found in the registry. Did you forget to import the kernel?"); } function au(n, t) { for (var r, e, u = n.length, f = [], i = 0; i < u; i++)r = u - 1 - i, e = n[r] || 1, (t[t.length - 1 - i] || 1) > 1 && 1 === e && f.unshift(r); return f } function kt(n, t) { for (var r = [], i = 0; i < t.length; i++) { var u = n[n.length - i - 1], f = t.length - i - 1, e = t[f]; (null == u || 1 === u && e > 1) && r.unshift(f) } return r } function tt(n, t) { for (var i, r, u = [], e = Math.max(n.length, t.length), f = 0; f < e; f++)if (i = n[n.length - f - 1], null == i && (i = 1), r = t[t.length - f - 1], null == r && (r = 1), 1 === i) u.unshift(r); else if (1 === r) u.unshift(i); else { if (i !== r) throw Error("Operands could not be broadcast together with shapes " + n + " and " + t + "."); u.unshift(i) } return u } function to(n, t, i, r, u, f, e) { void 0 === e && (e = "channelsLast"); var o, s = cl(t), h = s[0], c = s[1]; if ("channelsLast" === e) o = [h, c, n[3], n[3]]; else { if ("channelsFirst" !== e) throw new Error("Unknown dataFormat " + e); o = [h, c, n[1], n[1]] } return lf(n, o, i, r, u, f, !1, e) } function gs(n, t, i, r, u, f, e) { void 0 === e && (e = "NDHWC"); var o, s, h = fw(t), c = h[0], l = h[1], a = h[2]; if ("NDHWC" === e) s = "channelsLast", o = [c, l, a, n[4], n[4]]; else { if ("NCDHW" !== e) throw new Error("Unknown dataFormat " + e); s = "channelsFirst"; o = [c, l, a, n[1], n[1]] } return nh(n, o, i, r, u, !1, s, f) } function lf(n, t, r, u, f, e, o, s) { void 0 === o && (o = !1); void 0 === s && (s = "channelsLast"); var c = [-1, -1, -1, -1], h = c[0], l = c[1], a = c[2], v = c[3]; if ("channelsLast" === s) h = n[0], l = n[1], a = n[2], v = n[3]; else { if ("channelsFirst" !== s) throw new Error("Unknown dataFormat " + s); h = n[0]; v = n[1]; l = n[2]; a = n[3] } var y, d = t[0], g = t[1], nt = t[3], tt = cl(r), it = tt[0], rt = tt[1], ut = cl(u), ft = ut[0], et = ut[1], ot = io(d, ft), st = io(g, et), p = function (n, t, r, u, f, e, o, s) { var l, h, c, a; if ("number" == typeof n) l = { top: n, bottom: n, left: n, right: n, type: 0 === n ? "VALID" : "NUMBER" }, a = function (n, t, r, u, f) { var e; null == u && (u = uw(n, t, r)); var s = n[0], h = n[1], o = th((s - t + 2 * u) / r + 1, f); return i(lt(o), function () { return "The output # of rows (" + o + ") must be an integer. Change the stride and/or zero pad parameters" }), e = th((h - t + 2 * u) / r + 1, f), i(lt(e), function () { return "The output # of columns (" + e + ") must be an integer. Change the stride and/or zero pad parameters" }), [o, e] }([t, r], e, u, n, s), h = a[0], c = a[1]; else if ("same" === n) { h = Math.ceil(t / u); c = Math.ceil(r / f); var v = Math.max(0, (h - 1) * u + e - t), y = Math.max(0, (c - 1) * f + o - r), p = Math.floor(v / 2), b = v - p, w = Math.floor(y / 2); l = { top: p, bottom: b, left: w, right: y - w, type: "SAME" } } else { if ("valid" !== n) throw Error("Unknown padding parameter: " + n); l = { top: 0, bottom: 0, left: 0, right: 0, type: "VALID" }; h = Math.ceil((t - e + 1) / u); c = Math.ceil((r - o + 1) / f) } return { padInfo: l, outHeight: h, outWidth: c } }(f, l, a, it, rt, ot, st, e), ht = p.padInfo, w = p.outHeight, b = p.outWidth, k = o ? nt * v : nt; return "channelsFirst" === s ? y = [h, k, w, b] : "channelsLast" === s && (y = [h, w, b, k]), { batchSize: h, dataFormat: s, inHeight: l, inWidth: a, inChannels: v, outHeight: w, outWidth: b, outChannels: k, padInfo: ht, strideHeight: it, strideWidth: rt, filterHeight: d, filterWidth: g, effectiveFilterHeight: ot, effectiveFilterWidth: st, dilationHeight: ft, dilationWidth: et, inShape: n, outShape: y, filterShape: t } } function nh(n, t, r, u, f, e, o, s) { void 0 === e && (e = !1); void 0 === o && (o = "channelsLast"); var h = [-1, -1, -1, -1, -1], c = h[0], l = h[1], a = h[2], v = h[3], y = h[4]; if ("channelsLast" === o) c = n[0], l = n[1], a = n[2], v = n[3], y = n[4]; else { if ("channelsFirst" !== o) throw new Error("Unknown dataFormat " + o); c = n[0]; y = n[1]; l = n[2]; a = n[3]; v = n[4] } var w, it = t[0], rt = t[1], ut = t[2], ft = t[4], b = fw(r), et = b[0], ot = b[1], st = b[2], k = fw(u), ht = k[0], ct = k[1], at = k[2], vt = io(it, ht), yt = io(rt, ct), pt = io(ut, at), p = function (n, t, r, u, f, e, o, s, h, c, l) { var p, a, v, y, w; if ("number" == typeof n) p = { top: n, bottom: n, left: n, right: n, front: n, back: n, type: 0 === n ? "VALID" : "NUMBER" }, w = function (n, t, r, u, f, e) { var o, s; null == f && (f = uw(n, t, u)); var c = n[0], l = n[1], a = n[2], h = th((c - t + 2 * f) / u + 1, e); return i(lt(h), function () { return "The output # of depths (" + h + ") must be an integer. Change the stride and/or zero pad parameters" }), o = th((l - t + 2 * f) / u + 1, e), i(lt(o), function () { return "The output # of rows (" + o + ") must be an integer. Change the stride and/or zero pad parameters" }), s = th((a - t + 2 * f) / u + 1, e), i(lt(s), function () { return "The output # of columns (" + s + ") must be an integer. Change the stride and/or zero pad parameters" }), [h, o, s, r] }([t, r, u, 1], s, 1, f, n, l), a = w[0], v = w[1], y = w[2]; else if ("same" === n) { a = Math.ceil(t / f); v = Math.ceil(r / e); y = Math.ceil(u / o); var b = (a - 1) * f + s - t, k = (v - 1) * e + h - r, d = (y - 1) * o + c - u, g = Math.floor(b / 2), it = b - g, nt = Math.floor(k / 2), rt = k - nt, tt = Math.floor(d / 2); p = { top: nt, bottom: rt, left: tt, right: d - tt, front: g, back: it, type: "SAME" } } else { if ("valid" !== n) throw Error("Unknown padding parameter: " + n); p = { top: 0, bottom: 0, left: 0, right: 0, front: 0, back: 0, type: "VALID" }; a = Math.ceil((t - s + 1) / f); v = Math.ceil((r - h + 1) / e); y = Math.ceil((u - c + 1) / o) } return { padInfo: p, outDepth: a, outHeight: v, outWidth: y } }(f, l, a, v, et, ot, st, vt, yt, pt, s), wt = p.padInfo, d = p.outDepth, g = p.outHeight, nt = p.outWidth, tt = e ? ft * y : ft; return "channelsFirst" === o ? w = [c, tt, d, g, nt] : "channelsLast" === o && (w = [c, d, g, nt, tt]), { batchSize: c, dataFormat: o, inDepth: l, inHeight: a, inWidth: v, inChannels: y, outDepth: d, outHeight: g, outWidth: nt, outChannels: tt, padInfo: wt, strideDepth: et, strideHeight: ot, strideWidth: st, filterDepth: it, filterHeight: rt, filterWidth: ut, effectiveFilterDepth: vt, effectiveFilterHeight: yt, effectiveFilterWidth: pt, dilationDepth: ht, dilationHeight: ct, dilationWidth: at, inShape: n, outShape: w, filterShape: t } } function uw(n, t, i, r) { void 0 === r && (r = 1); var u = io(t, r); return Math.floor((n[0] * (i - 1) - i + u) / 2) } function cl(n) { return "number" == typeof n ? [n, n, n] : 2 === n.length ? [n[0], n[1], 1] : n } function fw(n) { return "number" == typeof n ? [n, n, n] : n } function io(n, t) { return t <= 1 ? n : n + (n - 1) * (t - 1) } function th(n, t) { if (!t) return n; switch (t) { case "round": return Math.round(n); case "ceil": return Math.ceil(n); case "floor": return Math.floor(n); default: throw new Error("Unknown roundingMode " + t); } } function he(n) { var t = cl(n), i = t[0], r = t[1], u = t[2]; return 1 === i && 1 === r && 1 === u } function pi(n, t) { return he(n) || he(t) } function ll(n) { if ("NHWC" === n) return "channelsLast"; if ("NCHW" === n) return "channelsFirst"; throw new Error("Unknown dataFormat " + n); } function ew(n, t, i) { var f, e; if ("complex64" === t) { if ("complex64" === n.dtype) return n.clone(); var o = ot(n.shape), s = n.toFloat(), u = i.complex(s, o); return o.dispose(), s.dispose(), u } if (!ttt(n.dtype, t)) return r.makeTensorFromDataId(n.dataId, n.shape, t); if ("complex64" === n.dtype) return f = i.real(n), u = f.cast(t), f.dispose(), u; if ("int32" === t) return i.int(n); if ("bool" === t) return e = h(0, n.dtype), u = i.notEqual(n, e), e.dispose(), u; throw new Error("Error in Cast: failed to cast " + n.dtype + " to " + t); } function al(n, t) { return r.makeTensorFromDataId(n.dataId, t, n.dtype) } function ow(n, t, i) { var f = (t - n) / (i - 1), r = ge(i, "float32"), u; for (r[0] = n, u = 1; u < r.length; u++)r[u] = r[u - 1] + f; return vt(r, "float32") } function sw(n, t) { if (n.length !== t.length) throw new Error("Cannot merge real and imag arrays of different lengths. real:" + n.length + ", imag: " + t.length + "."); for (var r = new Float32Array(2 * n.length), i = 0; i < r.length; i += 2)r[i] = n[i / 2], r[i + 1] = t[i / 2]; return r } function nft(n, t) { return { real: n[2 * t], imag: n[2 * t + 1] } } function kkt(n, t, i, r) { n[2 * r] = t; n[2 * r + 1] = i } function dkt(n, t, i) { var r = (i ? 2 : -2) * Math.PI * (n / t); return { real: Math.cos(r), imag: Math.sin(r) } } function gkt(n, t, i) { var r = function (n, t, i) { return function (n, t, i) { for (var r = 0, u = n.length, f = 0, o = !1, e; r < u;)e = i(t, n[f = r + (u - r >>> 1)]), e > 0 ? r = f + 1 : (u = f, o = !e); return o ? r : -r - 1 }(n, t, i || ndt) }(n, t, i), u = r < 0 ? -(r + 1) : r; n.splice(u, 0, t) } function ndt(n, t) { return n > t ? 1 : n < t ? -1 : 0 } function hw(n, t, i, r, u) { return tft(n, t, i, r, u, 0).selectedIndices } function cw(n, t, i, r, u, f) { var e = tft(n, t, i, r, u, f); return e.numValidOutputs.dispose(), { selectedIndices: e.selectedIndices, selectedScores: e.selectedScores } } function tft(n, t, i, r, u, f, e, o) { var p, l, w, a; void 0 === o && (o = !1); for (var v = Array.from(t).map(function (n, t) { return { score: n, boxIndex: t, suppressBeginIndex: 0 } }).filter(function (n) { return n.score > u }).sort(ift), d = f > 0 ? -.5 / f : 0, c = [], y = []; c.length < i && v.length > 0;) { var s = v.pop(), b = s.score, k = s.boxIndex, g = s.suppressBeginIndex; if (b < u) break; for (p = !1, l = c.length - 1; l >= g; --l) { if (w = tdt(n, k, c[l]), w >= r) { p = !0; break } if (s.score = s.score * idt(r, d, w), s.score <= u) break } s.suppressBeginIndex = c.length; p || (s.score === b ? (c.push(k), y.push(s.score)) : s.score > u && gkt(v, s, ift)) } return a = c.length, o && (c.fill(0, a), y.fill(0, a)), { selectedIndices: vt(c, "int32"), selectedScores: vt(y, "float32"), numValidOutputs: h(a, "int32") } } function tdt(n, t, i) { var r = n.subarray(4 * t, 4 * t + 4), u = n.subarray(4 * i, 4 * i + 4), f = Math.min(r[0], r[2]), e = Math.min(r[1], r[3]), o = Math.max(r[0], r[2]), s = Math.max(r[1], r[3]), h = Math.min(u[0], u[2]), c = Math.min(u[1], u[3]), l = Math.max(u[0], u[2]), a = Math.max(u[1], u[3]), v = (o - f) * (s - e), y = (l - h) * (a - c); if (v <= 0 || y <= 0) return 0; var w = Math.max(f, h), b = Math.max(e, c), k = Math.min(o, l), d = Math.min(s, a), p = Math.max(k - w, 0) * Math.max(d - b, 0); return p / (v + y - p) } function idt(n, t, i) { var r = Math.exp(t * i * i); return i <= n ? r : 0 } function ift(n, t) { return n.score - t.score || n.score === t.score && t.boxIndex - n.boxIndex } function rft(n, t, i) { var r = new Array(n.rank).fill(0), u = n.shape.slice(); return t.map(function (t) { u[i] = t; var f = n.slice(r, u); return r[i] += t, f }) } function uft(n, t) { for (var r, o, f = new Array(n.rank), i = 0; i < f.length; i++)f[i] = n.shape[i] * t[i]; for (r = k(f, n.dtype), i = 0; i < r.values.length; ++i) { for (var s = r.indexToLoc(i), e = new Array(n.rank), u = 0; u < e.length; u++)e[u] = s[u] % n.shape[u]; o = n.locToIndex(e); r.values[i] = n.values[o] } return r.toTensor() } function fft(n, t, i, r) { for (var f, c = t[t.length - 1], l = [n.length / c, c], h = l[0], a = l[1], v = ke(i, h * r), y = ke("int32", h * r), e = 0; e < h; e++) { for (var p = e * a, w = n.subarray(p, p + a), o = [], u = 0; u < w.length; u++)o.push({ value: w[u], index: u }); o.sort(function (n, t) { return t.value - n.value }); var s = e * r, b = v.subarray(s, s + r), k = y.subarray(s, s + r); for (u = 0; u < r; u++)b[u] = o[u].value, k[u] = o[u].index } return f = t.slice(), f[f.length - 1] = r, [fi(v, f, i), fi(y, f, "int32")] } function lw(n, t) { for (var f, u, e, o, r = [], i = 0; i < t.length; i++)t[i] && r.push(i); for (f = k(n, "int32"), u = k([r.length, n.length], "int32"), i = 0; i < r.length; i++)e = f.indexToLoc(r[i]), o = i * n.length, u.values.set(e, o); return u.toTensor() } function eft(n, t) { return ["x", "y", "z", "w", "u", "v"].slice(0, t).map(function (t) { return n + "." + t }) } function ki(n, t) { return 1 === t ? [n] : eft(n, t) } function li() { var n, t, i, r, u, f, e, s, h, c; return 2 === o().getNumber("WEBGL_VERSION") ? (n = "#version 300 es", t = "in", i = "out", r = "in", u = "texture", f = "outputColor", e = "out vec4 outputColor;", s = "\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ", h = "", c = "\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    ") : (n = "", t = "attribute", i = "varying", r = "varying", u = "texture2D", f = "gl_FragColor", e = "", s = "\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ", h = "\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ", c = "\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "), { version: n, attribute: t, varyingVs: i, varyingFs: r, texture2D: u, output: f, defineOutput: e, defineSpecialNaN: s, defineSpecialInf: h, defineRound: c } } function ce(n, t, i) { void 0 === i && (i = "index"); var r = cr(t); return r.map(function (t, u) { return "int " + n[u] + " = " + i + " / " + t + "; " + (u === r.length - 1 ? "int " + n[u + 1] + " = " + i + " - " + n[u] + " * " + t : "index -= " + n[u] + " * " + t) + ";" }).join("") } function aw(n) { var t = cr(n).map(function (n) { return n.toString() }); return "\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * " + t[0] + " + coords.y * " + t[1] + " + coords.z;\n  }\n" } function edt(n, t, i, r) { var u = []; n.forEach(function (n) { var t = w(n.shapeInfo.logicalShape); n.shapeInfo.isUniform ? u.push("uniform float " + n.name + (t > 1 ? "[" + t + "]" : "") + ";") : (u.push("uniform sampler2D " + n.name + ";"), u.push("uniform int offset" + n.name + ";")) }); var e, o, c = u.join("\n"), l = n.map(function (n) { return function (n, t, i) { var r, u, f; return void 0 === i && (i = !1), r = "", r += i ? oft(n) : ro(n), u = n.shapeInfo.logicalShape, f = t.logicalShape, u.length <= f.length && (r += i ? function (n, t) { var h, c = n.name, l = c.charAt(0).toUpperCase() + c.slice(1), b = "get" + l + "AtOutCoords", r = n.shapeInfo.logicalShape.length, f = t.logicalShape.length, i = au(n.shapeInfo.logicalShape, t.logicalShape), k = st(f), a = f - r, v = ["x", "y", "z", "w", "u", "v"], e, o, s; h = 0 === r ? "" : f < 2 && i.length >= 1 ? "coords = 0;" : i.map(function (n) { return "coords." + v[n + a] + " = 0;" }).join("\n"); e = ""; e = f < 2 && r > 0 ? "coords" : n.shapeInfo.logicalShape.map(function (n, t) { return "coords." + v[t + a] }).join(", "); var u = "return outputValue;", y = 1 === w(n.shapeInfo.logicalShape), p = 1 === w(t.logicalShape); return 1 !== r || y || p ? y && !p ? u = 1 === f ? "\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      " : "\n        return vec4(outputValue.x);\n      " : i.length && (o = r - 2, s = r - 1, i.indexOf(o) > -1 && i.indexOf(s) > -1 ? u = "return vec4(outputValue.x);" : i.indexOf(o) > -1 ? u = "return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);" : i.indexOf(s) > -1 && (u = "return vec4(outputValue.xx, outputValue.zz);")) : u = "\n      return vec4(outputValue.xy, outputValue.xy);\n    ", "\n    vec4 " + b + "() {\n      " + k + " coords = getOutputCoords();\n      " + h + "\n      vec4 outputValue = get" + l + "(" + e + ");\n      " + u + "\n    }\n  " }(n, t) : function (n, t) { var u = n.name, e = u.charAt(0).toUpperCase() + u.slice(1), o = "get" + e + "AtOutCoords", a = t.texShape, v = n.shapeInfo.texShape, r = n.shapeInfo.logicalShape.length, i = t.logicalShape.length, f; if (!n.shapeInfo.isUniform && r === i && null == n.shapeInfo.flatOffset && yt(v, a)) return "\n      float " + o + "() {\n        return sampleTexture(" + u + ", resultUV);\n      }\n    "; var s, y = st(i), h = au(n.shapeInfo.logicalShape, t.logicalShape), c = i - r, l = ["x", "y", "z", "w", "u", "v"]; return s = 0 === r ? "" : i < 2 && h.length >= 1 ? "coords = 0;" : h.map(function (n) { return "coords." + l[n + c] + " = 0;" }).join("\n"), f = "", f = i < 2 && r > 0 ? "coords" : n.shapeInfo.logicalShape.map(function (n, t) { return "coords." + l[t + c] }).join(", "), "\n    float " + o + "() {\n      " + y + " coords = getOutputCoords();\n      " + s + "\n      return get" + e + "(" + f + ");\n    }\n  " }(n, t)), r }(n, t, r) }).join("\n"), s = t.texShape, f = li(), a = function (n) { return "\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return " + n.texture2D + "(textureSampler, uv).r;\n    }\n  " }(f), h = function (n) { return n.version + "\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    " + n.varyingFs + " vec2 resultUV;\n    " + n.defineOutput + "\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    " + n.defineSpecialNaN + "\n    " + n.defineSpecialInf + "\n    " + n.defineRound + "\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    " + odt + "\n    " + sdt + "\n    " + hdt + "\n  " }(f); return t.isPacked ? (e = function (n, t) { switch (n.length) { case 0: return "\n    int getOutputCoords() {\n      return 0;\n    }\n  "; case 1: return function (n, t) { var i = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)]; return 1 === i[0] ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * " + i[1] + ".0);\n      }\n    " : 1 === i[1] ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * " + i[0] + ".0);\n      }\n    " : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" + i[0] + ", " + i[1] + "));\n      return 2 * (resTexRC.x * " + i[1] + " + resTexRC.y);\n    }\n  " }(0, t); case 2: return function (n, t) { var i = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)], r; return yt(n, t) ? "\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(" + i[0] + ", " + i[1] + "));\n      }\n    " : (r = Math.ceil(n[1] / 2), "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" + i[0] + ", " + i[1] + "));\n\n      int index = resTexRC.x * " + i[1] + " + resTexRC.y;\n      int r = 2 * (index / " + r + ");\n      int c = imod(index, " + r + ") * 2;\n\n      return ivec2(r, c);\n    }\n  ") }(n, t); case 3: return u = n, f = t, i = [Math.ceil(f[0] / 2), Math.ceil(f[1] / 2)], r = Math.ceil(u[2] / 2), e = r * Math.ceil(u[1] / 2), "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" + i[0] + ", " + i[1] + "));\n      int index = resTexRC.x * " + i[1] + " + resTexRC.y;\n\n      int b = index / " + e + ";\n      index -= b * " + e + ";\n\n      int r = 2 * (index / " + r + ");\n      int c = imod(index, " + r + ") * 2;\n\n      return ivec3(b, r, c);\n    }\n  "; default: return function (n, t) { for (var r = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)], u = Math.ceil(n[n.length - 1] / 2), f = u * Math.ceil(n[n.length - 2] / 2), e = f, o = "", s = "b, r, c", i = 2; i < n.length - 1; i++)e *= n[n.length - i - 1], o = "\n      int b" + i + " = index / " + e + ";\n      index -= b" + i + " * " + e + ";\n    " + o, s = "b" + i + ", " + s; return "\n    ivec" + n.length + " getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" + r[0] + ", " + r[1] + "));\n      int index = resTexRC.x * " + r[1] + " + resTexRC.y;\n\n      " + o + "\n\n      int b = index / " + f + ";\n      index -= b * " + f + ";\n\n      int r = 2 * (index / " + u + ");\n      int c = imod(index, " + u + ") * 2;\n\n      return ivec" + n.length + "(" + s + ");\n    }\n  " }(n, t) }var u, f, i, r, e }(t.logicalShape, s), o = function (n) { return "\n    void setOutput(vec4 val) {\n      " + n.output + " = val;\n    }\n  " }(f)) : (e = function (n, t) { switch (n.length) { case 0: return "\n    int getOutputCoords() {\n      return 0;\n    }\n  "; case 1: return function (n, t) { return 1 === t[0] ? "\n      int getOutputCoords() {\n        return int(resultUV.x * " + t[1] + ".0);\n      }\n    " : 1 === t[1] ? "\n      int getOutputCoords() {\n        return int(resultUV.y * " + t[0] + ".0);\n      }\n    " : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" + t[0] + ", " + t[1] + "));\n      return resTexRC.x * " + t[1] + " + resTexRC.y;\n    }\n  " }(0, t); case 2: return function (n, t) { return yt(n, t) ? "\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(" + t[0] + ", " + t[1] + "));\n      }\n    " : 1 === n[1] ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(" + t[0] + ", " + t[1] + "));\n        int index = resTexRC.x * " + t[1] + " + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    " : 1 === n[0] ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(" + t[0] + ", " + t[1] + "));\n        int index = resTexRC.x * " + t[1] + " + resTexRC.y;\n        return ivec2(0, index);\n      }\n    " : "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" + t[0] + ", " + t[1] + "));\n      int index = resTexRC.x * " + t[1] + " + resTexRC.y;\n      int r = index / " + n[1] + ";\n      int c = index - r * " + n[1] + ";\n      return ivec2(r, c);\n    }\n  " }(n, t); case 3: return i = t, r = ce(["r", "c", "d"], n), "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" + i[0] + ", " + i[1] + "));\n      int index = resTexRC.x * " + i[1] + " + resTexRC.y;\n      " + r + "\n      return ivec3(r, c, d);\n    }\n  "; case 4: return function (n, t) { var i = ce(["r", "c", "d", "d2"], n); return "\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(" + t[0] + ", " + t[1] + "));\n      int index = resTexRC.x * " + t[1] + " + resTexRC.y;\n      " + i + "\n      return ivec4(r, c, d, d2);\n    }\n  " }(n, t); case 5: return function (n, t) { var i = ce(["r", "c", "d", "d2", "d3"], n); return "\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(" + t[0] + ",\n                             " + t[1] + "));\n\n      int index = resTexRC.x * " + t[1] + " + resTexRC.y;\n\n      " + i + "\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  " }(n, t); case 6: return function (n, t) { var i = ce(["r", "c", "d", "d2", "d3", "d4"], n); return "\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(" + t[0] + ", " + t[1] + "));\n      int index = resTexRC.x * " + t[1] + " + resTexRC.y;\n\n      " + i + "\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  " }(n, t); default: throw new Error(n.length + "-D output sampling is not yet supported"); }var i, r }(t.logicalShape, s), o = function (n) { return "\n    void setOutput(float val) {\n      " + n.output + " = vec4(val, 0, 0, 0);\n    }\n  " }(f)), r && (h += cdt), [h, a, o, c, e, l, i].join("\n") } function ro(n) { var t = n.shapeInfo.logicalShape; switch (t.length) { case 0: return function (n) { var t = n.name, i = "get" + t.charAt(0).toUpperCase() + t.slice(1); if (n.shapeInfo.isUniform) return "float " + i + "() {return " + t + ";}"; var r = n.shapeInfo.texShape, f = r[0], e = r[1]; if (1 === f && 1 === e) return "\n      float " + i + "() {\n        return sampleTexture(" + t + ", halfCR);\n      }\n    "; var u = n.shapeInfo.texShape, o = u[0], s = u[1], h = le(t); return "\n    float " + i + "() {\n      vec2 uv = uvFromFlat(" + o + ", " + s + ", " + h + ");\n      return sampleTexture(" + t + ", uv);\n    }\n  " }(n); case 1: return function (n) { var t = n.name, i = "get" + t.charAt(0).toUpperCase() + t.slice(1), f; if (n.shapeInfo.isUniform) return "\n      float " + i + "(int index) {\n        " + uo(n) + "\n      }\n    "; var e = n.shapeInfo.texShape, r = e[0], u = e[1]; return 1 === u && 1 === r ? "\n      float " + i + "(int index) {\n        return sampleTexture(" + t + ", halfCR);\n      }\n    " : (f = le(t), 1 === u) ? "\n      float " + i + "(int index) {\n        vec2 uv = vec2(0.5, (float(index + " + f + ") + 0.5) / " + r + ".0);\n        return sampleTexture(" + t + ", uv);\n      }\n    " : 1 === r ? "\n      float " + i + "(int index) {\n        vec2 uv = vec2((float(index + " + f + ") + 0.5) / " + u + ".0, 0.5);\n        return sampleTexture(" + t + ", uv);\n      }\n    " : "\n    float " + i + "(int index) {\n      vec2 uv = uvFromFlat(" + r + ", " + u + ", index + " + f + ");\n      return sampleTexture(" + t + ", uv);\n    }\n  " }(n); case 2: return function (n) { var t = n.shapeInfo.logicalShape, i = n.name, r = "get" + i.charAt(0).toUpperCase() + i.slice(1), u = n.shapeInfo.texShape, s, h, a; if (null != u && yt(t, u)) return s = u[0], h = u[1], "\n    float " + r + "(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(" + h + ".0, " + s + ".0);\n      return sampleTexture(" + i + ", uv);\n    }\n  "; var c = rf(t), v = c.newShape, y = c.keptDims, l = v; if (l.length < t.length) return a = fo(n, l), "\n      " + ro(a) + "\n      float " + r + "(int row, int col) {\n        return " + r + "(" + eo(["row", "col"], y) + ");\n      }\n    "; if (n.shapeInfo.isUniform) return "\n      float " + r + "(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(" + t[1] + ", 1)));\n        " + uo(n) + "\n      }\n    "; var f = u[0], e = u[1], o = le(i); return 1 === e ? "\n    float " + r + "(int row, int col) {\n      float index = dot(vec3(row, col, " + o + "), vec3(" + t[1] + ", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / " + f + ".0);\n      return sampleTexture(" + i + ", uv);\n    }\n  " : 1 === f ? "\n    float " + r + "(int row, int col) {\n      float index = dot(vec3(row, col, " + o + "), vec3(" + t[1] + ", 1, 1));\n      vec2 uv = vec2((index + 0.5) / " + e + ".0, 0.5);\n      return sampleTexture(" + i + ", uv);\n    }\n  " : "\n  float " + r + "(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * " + t[1] + " + col + " + o + ";\n    vec2 uv = uvFromFlat(" + f + ", " + e + ", index);\n    return sampleTexture(" + i + ", uv);\n  }\n" }(n); case 3: return function (n) { var t = n.shapeInfo.logicalShape, i = n.name, r = "get" + i.charAt(0).toUpperCase() + i.slice(1), e = t[1] * t[2], f = t[2], s = rf(t), y = s.newShape, p = s.keptDims, h = y, c, v; if (h.length < t.length) return c = fo(n, h), "\n        " + ro(c) + "\n        float " + r + "(int row, int col, int depth) {\n          return " + r + "(" + eo(["row", "col", "depth"], p) + ");\n        }\n      "; if (n.shapeInfo.isUniform) return "\n      float " + r + "(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(" + e + ", " + f + ", 1)));\n        " + uo(n) + "\n      }\n    "; var l = n.shapeInfo.texShape, o = l[0], u = l[1], a = n.shapeInfo.flatOffset; return u === e && null == a ? "\n        float " + r + "(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(" + f + ", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(" + u + ".0, " + o + ".0);\n          return sampleTexture(" + i + ", uv);\n        }\n      " : u === f && null == a ? "\n    float " + r + "(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(" + t[1] + ", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" + u + ".0, " + o + ".0);\n      return sampleTexture(" + i + ", uv);\n    }\n  " : (v = le(i), "\n      float " + r + "(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * " + e + " + col * " + f + " + depth + " + v + ";\n        vec2 uv = uvFromFlat(" + o + ", " + u + ", index);\n        return sampleTexture(" + i + ", uv);\n      }\n  ") }(n); case 4: return function (n) { var t = n.shapeInfo.logicalShape, i = n.name, r = "get" + i.charAt(0).toUpperCase() + i.slice(1), u = t[3], e = t[2] * u, o = t[1] * e, h = rf(t), c = h.newShape, p = h.keptDims, l, y; if (c.length < t.length) return l = fo(n, c), "\n      " + ro(l) + "\n      float " + r + "(int row, int col, int depth, int depth2) {\n        return " + r + "(" + eo(["row", "col", "depth", "depth2"], p) + ");\n      }\n    "; if (n.shapeInfo.isUniform) return "\n      float " + r + "(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(" + o + ", " + e + ", " + u + ", 1)));\n        " + uo(n) + "\n      }\n    "; var a = n.shapeInfo.flatOffset, v = n.shapeInfo.texShape, s = v[0], f = v[1]; return f === o && null == a ? "\n      float " + r + "(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(" + e + ", " + u + ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" + f + ".0, " + s + ".0);\n        return sampleTexture(" + i + ", uv);\n      }\n    " : f === u && null == a ? "\n      float " + r + "(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(" + t[1] * t[2] + ", " + t[2] + ", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" + f + ".0, " + s + ".0);\n        return sampleTexture(" + i + ", uv);\n      }\n    " : (y = le(i), "\n    float " + r + "(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " + o + " + col * " + e + " +\n          depth * " + u + " + depth2;\n      vec2 uv = uvFromFlat(" + s + ", " + f + ", index + " + y + ");\n      return sampleTexture(" + i + ", uv);\n    }\n  ") }(n); case 5: return function (n) { var t = n.shapeInfo.logicalShape, i = n.name, r = "get" + i.charAt(0).toUpperCase() + i.slice(1), u = t[4], e = t[3] * u, o = t[2] * e, s = t[1] * o, c = rf(t), l = c.newShape, w = c.keptDims, a, p; if (l.length < t.length) return a = fo(n, l), "\n      " + ro(a) + "\n      float " + r + "(int row, int col, int depth, int depth2, int depth3) {\n        return " + r + "(" + eo(["row", "col", "depth", "depth2", "depth3"], w) + ");\n      }\n    "; if (n.shapeInfo.isUniform) return "\n      float " + r + "(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(" + s + ", " + o + ", " + e + ", " + u + ")) +\n          depth3;\n        " + uo(n) + "\n      }\n    "; var v = n.shapeInfo.flatOffset, y = n.shapeInfo.texShape, h = y[0], f = y[1]; return f === s && null == v ? "\n      float " + r + "(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(" + o + ", " + e + ", " + u + ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" + f + ".0, " + h + ".0);\n        return sampleTexture(" + i + ", uv);\n      }\n    " : f === u && null == v ? "\n      float " + r + "(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(" + t[1] * t[2] * t[3] + ",\n               " + t[2] * t[3] + ", " + t[3] + ", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" + f + ".0, " + h + ".0);\n        return sampleTexture(" + i + ", uv);\n      }\n    " : (p = le(i), "\n    float " + r + "(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " + s + " + col * " + o + " + depth * " + e + " +\n          depth2 * " + u + " + depth3 + " + p + ";\n      vec2 uv = uvFromFlat(" + h + ", " + f + ", index);\n      return sampleTexture(" + i + ", uv);\n    }\n  ") }(n); case 6: return function (n) { var t = n.shapeInfo.logicalShape, i = n.name, r = "get" + i.charAt(0).toUpperCase() + i.slice(1), l = rf(t), a = l.newShape, b = l.keptDims, v, w; if (a.length < t.length) return v = fo(n, a), "\n      " + ro(v) + "\n      float " + r + "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return " + r + "(" + eo(["row", "col", "depth", "depth2", "depth3", "depth4"], b) + ");\n      }\n    "; var u = t[5], e = t[4] * u, o = t[3] * e, s = t[2] * o, h = t[1] * s; if (n.shapeInfo.isUniform) return "\n      float " + r + "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(" + h + ", " + s + ", " + o + ", " + e + ")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(" + u + ", 1)));\n        " + uo(n) + "\n      }\n    "; var y = n.shapeInfo.flatOffset, p = n.shapeInfo.texShape, c = p[0], f = p[1]; return f === h && null == y ? "\n      float " + r + "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(" + s + ", " + o + ", " + e + ", " + u + ")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" + f + ".0, " + c + ".0);\n        return sampleTexture(" + i + ", uv);\n      }\n    " : f === u && null == y ? "\n      float " + r + "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(" + t[1] * t[2] * t[3] * t[4] + ",\n               " + t[2] * t[3] * t[4] + ",\n               " + t[3] * t[4] + ",\n               " + t[4] + ")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" + f + ".0, " + c + ".0);\n        return sampleTexture(" + i + ", uv);\n      }\n    " : (w = le(i), "\n    float " + r + "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " + h + " + col * " + s + " + depth * " + o + " +\n          depth2 * " + e + " + depth3 * " + u + " + depth4 + " + w + ";\n      vec2 uv = uvFromFlat(" + c + ", " + f + ", index);\n      return sampleTexture(" + i + ", uv);\n    }\n  ") }(n); default: throw new Error(t.length + "-D input sampling is not yet supported"); } } function oft(n) { var t, i, r; switch (n.shapeInfo.logicalShape.length) { case 0: return t = n.name, i = "get" + t.charAt(0).toUpperCase() + t.slice(1), r = li(), "\n    vec4 " + i + "() {\n      return " + r.texture2D + "(" + t + ", halfCR);\n    }\n  "; case 1: return function (n) { var t = n.name, u = "get" + t.charAt(0).toUpperCase() + t.slice(1), i = n.shapeInfo.texShape, r = [Math.ceil(i[0] / 2), Math.ceil(i[1] / 2)], f = li(); return "\n    vec4 " + u + "(int index) {\n      vec2 uv = packedUVfrom1D(\n        " + r[0] + ", " + r[1] + ", index);\n      return " + f.texture2D + "(" + t + ", uv);\n    }\n  " }(n); case 2: return function (n) { var u = n.shapeInfo.logicalShape, i = n.name, f = "get" + i.charAt(0).toUpperCase() + i.slice(1), t = n.shapeInfo.texShape, s = t[0], h = t[1], e = li(), r, o; return null != t && yt(u, t) ? "\n      vec4 " + f + "(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(" + h + ".0, " + s + ".0);\n\n        return " + e.texture2D + "(" + i + ", uv);\n      }\n    " : (r = [Math.ceil(t[0] / 2), Math.ceil(t[1] / 2)], o = Math.ceil(u[1] / 2), "\n    vec4 " + f + "(int row, int col) {\n      vec2 uv = packedUVfrom2D(" + o + ", " + r[0] + ", " + r[1] + ", row, col);\n      return " + e.texture2D + "(" + i + ", uv);\n    }\n  ") }(n); case 3: return function (n) { var t = n.shapeInfo.logicalShape, i = n.name, r = "get" + i.charAt(0).toUpperCase() + i.slice(1), u = n.shapeInfo.texShape, f = [Math.ceil(u[0] / 2), Math.ceil(u[1] / 2)], e, o; if (1 === t[0]) return e = t.slice(1), o = fo(n, e), "\n        " + oft(o) + "\n        vec4 " + r + "(int b, int row, int col) {\n          return " + r + "(" + eo(["b", "row", "col"], [1, 2]) + ");\n        }\n      "; var h = f[0], c = f[1], s = Math.ceil(t[2] / 2), l = s * Math.ceil(t[1] / 2), a = li(); return "\n    vec4 " + r + "(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        " + h + ", " + c + ", " + l + ", " + s + ", b, row, col);\n      return " + a.texture2D + "(" + i + ", uv);\n    }\n  " }(n); default: return function (n) { for (var a, i = n.shapeInfo.logicalShape, r = i.length, u = n.name, v = "get" + u.charAt(0).toUpperCase() + u.slice(1), h = n.shapeInfo.texShape, c = [Math.ceil(h[0] / 2), Math.ceil(h[1] / 2)], y = c[0], f = c[1], l = Math.ceil(i[r - 1] / 2), e = l * Math.ceil(i[r - 2] / 2), o = "int b, int row, int col", s = "b * " + e + " + (row / 2) * " + l + " + (col / 2)", t = 2; t < r - 1; t++)o = "int b" + t + ", " + o, e *= i[r - t - 1], s = "b" + t + " * " + e + " + " + s; return a = li(), "\n    vec4 " + v + "(" + o + ") {\n      int index = " + s + ";\n      int texR = index / " + f + ";\n      int texC = index - texR * " + f + ";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" + f + ", " + y + ");\n      return " + a.texture2D + "(" + u + ", uv);\n    }\n  " }(n) } } function le(n) { return "offset" + n } function uo(n) { var t = n.name, i = w(n.shapeInfo.logicalShape); return i < 2 ? "return " + t + ";" : "\n    for (int i = 0; i < " + i + "; i++) {\n      if (i == index) {\n        return " + t + "[i];\n      }\n    }\n  " } function st(n) { if (n <= 1) return "int"; if (2 === n) return "ivec2"; if (3 === n) return "ivec3"; if (4 === n) return "ivec4"; if (5 === n) return "ivec5"; if (6 === n) return "ivec6"; throw Error("GPU for rank " + n + " is not yet supported"); } function fo(n, t) { var i = JSON.parse(JSON.stringify(n)); return i.shapeInfo.logicalShape = t, i } function eo(n, t) { return t.map(function (t) { return n[t] }).join(", ") } function vl(n, t, i) { var r = n.indexOf(t); return n.map(function (n, t) { return t === r ? n + " - " + i : n }).join() } function pft(n, t) { if (1 === n) return "" + t; if (2 === n) return t + ".y"; if (3 === n) return t + ".z"; if (4 === n) return t + ".w"; throw Error("Cumulative sum for rank " + n + " is not yet supported"); } function bft(n, t) { var i = li(); return dtt(n, t, i.version + "\n    precision highp float;\n    " + i.attribute + " vec3 clipSpacePos;\n    " + i.attribute + " vec2 uv;\n    " + i.varyingVs + " vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }") } function kft(n, t) { return rit(n, t, new Float32Array([-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0])) } function dft(n, t) { return uit(n, t, new Uint16Array([0, 1, 2, 2, 1, 3])) } function ih(n, t, i, r, u, f, e) { eit(i, r); var s = fit(n, t), o = n.TEXTURE_2D; return l(n, t, function () { return n.bindTexture(o, s) }), l(n, t, function () { return n.texParameteri(o, n.TEXTURE_WRAP_S, n.CLAMP_TO_EDGE) }), l(n, t, function () { return n.texParameteri(o, n.TEXTURE_WRAP_T, n.CLAMP_TO_EDGE) }), l(n, t, function () { return n.texParameteri(o, n.TEXTURE_MIN_FILTER, n.NEAREST) }), l(n, t, function () { return n.texParameteri(o, n.TEXTURE_MAG_FILTER, n.NEAREST) }), l(n, t, function () { return n.texImage2D(o, 0, u, i, r, 0, f, e, null) }), l(n, t, function () { return n.bindTexture(n.TEXTURE_2D, null) }), s } function gft(n, t, i, r, u) { var f = lc(i, r); return ih(n, t, f[0], f[1], u.internalFormatFloat, u.textureFormatFloat, n.FLOAT) } function net(n, t, i, r, u) { var f = lc(i, r); return ih(n, t, f[0], f[1], u.internalFormatHalfFloat, u.textureFormatFloat, u.textureTypeHalfFloat) } function tet(n, t, i, r) { var u = lc(i, r); return ih(n, t, u[0], u[1], n.RGBA, n.RGBA, n.UNSIGNED_BYTE) } function iet(n, t, i, r, u) { var f = cs(i, r); return ih(n, t, f[0], f[1], u.internalFormatPackedFloat, n.RGBA, n.FLOAT) } function ret(n, t, i, r, u) { var f = cs(i, r); return ih(n, t, f[0], f[1], u.internalFormatPackedHalfFloat, n.RGBA, u.textureTypeHalfFloat) } function uet(n, t, i, r) { return l(n, t, function () { return n.bindBuffer(n.ARRAY_BUFFER, r) }), ep(n, t, i, "clipSpacePos", r, 3, 20, 0) && ep(n, t, i, "uv", r, 2, 20, 12) } function fet(n, t, i, r, u, f, e) { var o, s, h; l(n, t, function () { return n.bindTexture(n.TEXTURE_2D, i) }); f instanceof Uint8Array ? (o = new Uint8Array(r * u * 4), s = n.UNSIGNED_BYTE, h = n.RGBA) : (o = new Float32Array(r * u * 4), s = n.FLOAT, h = e.internalFormatPackedFloat); o.set(f); l(n, t, function () { return n.texImage2D(n.TEXTURE_2D, 0, h, r, u, 0, n.RGBA, s, o) }); l(n, t, function () { return n.bindTexture(n.TEXTURE_2D, null) }) } function eet(n, t, i, r) { l(n, t, function () { return n.bindTexture(n.TEXTURE_2D, i) }); r.data instanceof Uint8Array ? l(n, t, function () { return n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, r.width, r.height, 0, n.RGBA, n.UNSIGNED_BYTE, r.data) }) : l(n, t, function () { return n.texImage2D(n.TEXTURE_2D, 0, n.RGBA, n.RGBA, n.UNSIGNED_BYTE, r) }); l(n, t, function () { return n.bindTexture(n.TEXTURE_2D, null) }) } function oet(n, t, i, r) { var u = n.createBuffer(), f; return l(n, t, function () { return n.bindBuffer(n.PIXEL_PACK_BUFFER, u) }), f = 16 * i * r, l(n, t, function () { return n.bufferData(n.PIXEL_PACK_BUFFER, f, n.STREAM_READ) }), l(n, t, function () { return n.readPixels(0, 0, r, i, n.RGBA, n.FLOAT, 0) }), l(n, t, function () { return n.bindBuffer(n.PIXEL_PACK_BUFFER, null) }), u } function set(n, t, i) { var r = n, u = new Float32Array(i); return r.bindBuffer(r.PIXEL_PACK_BUFFER, t), r.getBufferSubData(r.PIXEL_PACK_BUFFER, 0, u), r.bindBuffer(r.PIXEL_PACK_BUFFER, null), u } function het(n, t, i, r, u) { var f = lc(i, r), o = f[0], s = f[1], e = new Uint8Array(i * r * 4); return l(n, t, function () { return n.readPixels(0, 0, o, s, u.downloadTextureFormat, n.UNSIGNED_BYTE, e) }), new Float32Array(e.buffer) } function cet(n, t, i, r, u, f, e) { var o = n, s = new Float32Array(function (n, t) { var i = cs(n, t); return i[0] * i[1] * 4 }(f, e)); return o.bindBuffer(o.PIXEL_PACK_BUFFER, t), o.getBufferSubData(o.PIXEL_PACK_BUFFER, 0, s), o.bindBuffer(o.PIXEL_PACK_BUFFER, null), s } function aet(n, t, i, r) { var u = new Float32Array(i * r * 4); return l(n, t, function () { return n.readPixels(0, 0, r, i, n.RGBA, n.FLOAT, u) }), u } function yet(n, t) { if (n.length !== t.length) throw Error("Binary was compiled with " + n.length + " inputs, but was executed with " + t.length + " inputs"); n.forEach(function (n, i) { var e = n.logicalShape, r = t[i], o = r.shape, u, f; if (!yt(e, o)) throw Error("Binary was compiled with different shapes than the current args. Shapes " + e + " and " + o + " must match"); if ((!n.isUniform || !r.isUniform) && (u = n.texShape, f = r.isUniform ? null : r.texData.texShape, !yt(u, f))) throw Error("Binary was compiled with different texture shapes than the current args. Shape " + u + " and " + f + " must match"); }) } function wet(n, t) { if (n === gi.UPLOAD) return nr.PACKED_2X2_FLOAT32; if (n === gi.RENDER || null == n) return function (n) { return o().getBool("WEBGL_RENDER_FLOAT32_ENABLED") ? n ? nr.PACKED_2X2_FLOAT32 : nr.UNPACKED_FLOAT32 : n ? nr.PACKED_2X2_FLOAT16 : nr.UNPACKED_FLOAT16 }(t); if (n === gi.DOWNLOAD || n === gi.PIXELS) return nr.PACKED_4X1_UNSIGNED_BYTE; throw new Error("Unknown logical texture type " + n); } function bet(n, t, i) { return n[0] + "_" + n[1] + "_" + t + "_" + i } function wl(n, t) { if (void 0 === t && (t = !1), "linear" === n) return t ? nii : lti; if ("relu" === n) return t ? eot : det; if ("elu" === n) return t ? sot : not; if ("relu6" === n) return t ? oot : get; if ("prelu" === n) return t ? lft : cft; throw new Error("Activation " + n + " has not been implemented for the WebGL backend."); } function dst(n, r, u, f, e, o) { var s, h, a = t(n, "x", "batchNorm"), c = t(r, "mean", "batchNorm"), l = t(u, "variance", "batchNorm"); return null != e && (s = t(e, "scale", "batchNorm")), null != f && (h = t(f, "offset", "batchNorm")), i(2 === a.rank, function () { return "Error in batchNorm3D: x must be rank 3 but got rank " + a.rank + "." }), i(2 === c.rank || 1 === c.rank, function () { return "Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank " + c.rank + "." }), i(2 === l.rank || 1 === l.rank, function () { return "Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank " + l.rank + "." }), null != s && i(2 === s.rank || 1 === s.rank, function () { return "Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank " + s.rank + "." }), null != h && i(2 === h.rank || 1 === h.rank, function () { return "Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank " + h.rank + "." }), eh(a, c, l, h, s, o) } function gst(n, r, u, f, e, o) { var s, h, a = t(n, "x", "batchNorm"), c = t(r, "mean", "batchNorm"), l = t(u, "variance", "batchNorm"); return null != e && (s = t(e, "scale", "batchNorm")), null != f && (h = t(f, "offset", "batchNorm")), i(3 === a.rank, function () { return "Error in batchNorm3D: x must be rank 3 but got rank " + a.rank + "." }), i(3 === c.rank || 1 === c.rank, function () { return "Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank " + c.rank + "." }), i(3 === l.rank || 1 === l.rank, function () { return "Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank " + l.rank + "." }), null != s && i(3 === s.rank || 1 === s.rank, function () { return "Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank " + s.rank + "." }), null != h && i(3 === h.rank || 1 === h.rank, function () { return "Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank " + h.rank + "." }), eh(a, c, l, h, s, o) } function nht(n, r, u, f, e, o) { var s, h, a = t(n, "x", "batchNorm"), c = t(r, "mean", "batchNorm"), l = t(u, "variance", "batchNorm"); return null != e && (s = t(e, "scale", "batchNorm")), null != f && (h = t(f, "offset", "batchNorm")), i(4 === a.rank, function () { return "Error in batchNorm4D: x must be rank 4 but got rank " + a.rank + "." }), i(4 === c.rank || 1 === c.rank, function () { return "Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank " + c.rank + "." }), i(4 === l.rank || 1 === l.rank, function () { return "Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank " + l.rank + "." }), null != s && i(4 === s.rank || 1 === s.rank, function () { return "Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank " + s.rank + "." }), null != h && i(4 === h.rank || 1 === h.rank, function () { return "Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank " + h.rank + "." }), eh(a, c, l, h, s, o) } function eh(n, u, f, e, o, s) { var w; null == s && (s = .001); var l, v, y, c = t(n, "x", "batchNorm"), a = t(u, "mean", "batchNorm"), p = t(f, "variance", "batchNorm"); return null != o && (l = t(o, "scale", "batchNorm")), null != e && (v = t(e, "offset", "batchNorm")), i(a.rank === p.rank, function () { return "Batch normalization gradient requires mean and variance to have equal ranks." }), i(null == v || a.rank === v.rank, function () { return "Batch normalization gradient requires mean and offset to have equal ranks." }), i(null == l || a.rank === l.rank, function () { return "Batch normalization gradient requires mean and scale to have equal ranks." }), y = 0 === c.rank || 1 === c.rank ? c.as4D(1, 1, 1, c.size) : 2 === c.rank ? c.as4D(1, 1, c.shape[0], c.shape[1]) : 3 === c.rank ? c.as4D(1, c.shape[0], c.shape[1], c.shape[2]) : c, w = [c, a, p, l], r.runKernelFunc(function (n, t) { var i = n.batchNormalization(y, dl(a), dl(p), s, dl(l), dl(v)); return t([c, a, p, l]), i }, { x: c, mean: a, variance: p, scale: l, offset: v }, function (n, t) { var u = t, o = u[0], i = u[1], w = u[2], a = u[3], c = null == a ? h(1) : a, f = kt(i.shape, y.shape), l = [], e; if (1 === i.rank) { for (e = 0; e < y.shape.length - 1; ++e)l.push(y.shape[e]); l.push(1) } var v = o.sub(i), p = n.mul(c), r = ub(w.add(h(s))), b = r.mul(r).mul(r).mul(h(-.5)); return { x: function () { return 1 === i.rank ? n.mul(se(r.as4D(1, 1, 1, i.shape[0]), l)).mul(c).reshape(o.shape) : n.mul(r).mul(c).reshape(o.shape) }, mean: function () { var n = r.mul(h(-1)).mul(p); return 1 === i.rank && (n = n.sum(f)), n.reshape(i.shape) }, variance: function () { var n = b.mul(v).mul(p); return 1 === i.rank && (n = n.sum(f)), n.reshape(i.shape) }, scale: function () { var u = v.mul(r), t = n.mul(u); return 1 === i.rank && (t = t.sum(f)), t.reshape(i.shape) }, offset: function () { var t = n; return 1 === i.rank && (t = t.sum(f)), t.reshape(i.shape) } } }, "BatchNormalization", { varianceEpsilon: s }, w).reshape(c.shape) } function dl(n) { return null == n ? null : 0 === n.rank ? n.as1D() : 1 === n.rank ? n : 2 === n.rank ? n.as4D(1, 1, n.shape[0], n.shape[1]) : 3 === n.rank ? n.as4D(1, n.shape[0], n.shape[1], n.shape[2]) : n } function gl() { cp("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon") } function act(n, t) { for (var r = [], i = n; i < t; ++i)r.push(i); return r } function vct(n) { for (var i, r = [], t = 0; t < n.length; ++t)for (i = 0; i < n[t].length; ++i)r.push(n[t][i]); return r } function pct(n, t, u, f, e, o, s) { var a, v; void 0 === o && (o = "NHWC"); i(n.length === t.rank, function () { return "Length of inShape (" + n.length + ") and rank of dy (" + t.rank + ") must match" }); var c = n, h = t, y = !1; 3 === t.rank && (y = !0, h = t.as4D(1, t.shape[0], t.shape[1], t.shape[2]), c = [1, n[0], n[1], n[2]]); i(4 === c.length, function () { return "Error in conv2dDerInput: inShape must be length 4, but got length " + c.length + "." }); i(4 === h.rank, function () { return "Error in conv2dDerInput: dy must be rank 4, but got rank " + h.rank }); i(4 === u.rank, function () { return "Error in conv2dDerInput: filter must be rank 4, but got rank " + u.rank }); a = "NHWC" === o ? c[3] : c[1]; v = "NHWC" === o ? h.shape[3] : h.shape[1]; i(a === u.shape[2], function () { return "Error in conv2dDerInput: depth of input (" + a + ") must match input depth for filter " + u.shape[2] + "." }); i(v === u.shape[3], function () { return "Error in conv2dDerInput: depth of output (" + v + ") must match output depth for filter " + u.shape[3] + "." }); null != s && i(lt(e), function () { return "Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode " + s + " but got pad " + e + "." }); var p = ll(o), w = lf(c, u.shape, f, 1, e, s, !1, p), l = r.runKernelFunc(function (n, t) { var i = n.conv2dDerInput(h, u, w); return t([u, h]), i }, { dy4D: h, filter: u }, function (n, t) { var i = t[0], r = t[1]; return { dy4D: function () { return ur(n, i, f, e, o, 1, s) }, filter: function () { return pb(n, r, i.shape, f, e, o, s) } } }); return y ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l } function yb(n) { var t = function (n) { return "number" == typeof n ? [n, n, n] : 2 === n.length ? [n[0], n[1], 1] : n }(n), i = t[0], r = t[1], u = t[2]; return 1 === i && 1 === r && 1 === u } function wct(n, t, u, f, e) { var c, l, v, o; i(n.length === t.rank, function () { return "Length of inShape (" + n.length + ") and rank of dy (" + t.rank + ") must match" }); var h = n, s = t, a = !1; return 4 === t.rank && (a = !0, s = t.as5D(1, t.shape[0], t.shape[1], t.shape[2], t.shape[3]), h = [1, n[0], n[1], n[2], n[3]]), c = h[4], l = s.shape[4], i(5 === h.length, function () { return "Error in conv3dDerInput: inShape must be length 5, but got length " + h.length + "." }), i(5 === s.rank, function () { return "Error in conv3dDerInput: dy must be rank 5, but got rank " + s.rank }), i(5 === u.rank, function () { return "Error in conv3dDerInput: filter must be rank 5, but got rank " + u.rank }), i(c === u.shape[3], function () { return "Error in conv3dDerInput: depth of input (" + c + ") must match input depth for filter " + u.shape[3] + "." }), i(l === u.shape[4], function () { return "Error in conv3dDerInput: depth of output (" + l + ") must match output depth for filter " + u.shape[4] + "." }), v = nh(h, u.shape, f, 1, e), o = r.runKernelFunc(function (n) { return n.conv3dDerInput(s, u, v) }, { dy5D: s }), a ? o.as4D(o.shape[1], o.shape[2], o.shape[3], o.shape[4]) : o } function hlt(n, u, f, e, o, s) { var c = t(n, "x", "maxPool"), h = c, v = !1, l, y, a; return (3 === c.rank && (v = !0, h = c.as4D(1, c.shape[0], c.shape[1], c.shape[2])), null == e && (e = [1, 1]), i(4 === h.rank, function () { return "Error in maxPool: input must be rank 4 but got rank " + h.rank + "." }), i(pi(f, e), function () { return "Error in maxPool: Either strides or dilations must be 1. Got strides " + f + " and dilations '" + e + "'" }), null != s && i(lt(o), function () { return "Error in maxPool: pad must be an integer when using, dimRoundingMode " + s + " but got pad " + o + "." }), l = to(h.shape, u, f, e, o, s), 1 === l.filterWidth && 1 === l.filterHeight && yt(l.inShape, l.outShape)) ? c.clone() : (y = [h], a = r.runKernelFunc(function (n, t) { var i = n.maxPool(h, l); return t([h, i]), i }, { x: h }, function (n, s) { var h = s[0], c = s[1]; return { x: function () { return function (n, u, f, e, o, s, h, c) { var a = t(n, "dy", "maxPoolBackprop"), l = t(u, "input", "maxPoolBackprop"), y = t(f, "output", "maxPoolBackprop"), v; return i(l.rank === a.rank, function () { return "Rank of input (" + l.rank + ") does not match rank of dy (" + a.rank + ")" }), null == s && (s = [1, 1]), i(pi(o, s), function () { return "Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides " + o + " and dilations '" + s + "'" }), i(4 === a.rank, function () { return "Error in maxPoolBackprop: dy must be rank 4 but got rank " + a.rank + "." }), i(4 === l.rank, function () { return "Error in maxPoolBackprop: input must be rank 4 but got rank " + l.rank + "." }), null != c && i(lt(h), function () { return "Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode " + c + " but got pad " + h + "." }), v = to(l.shape, e, o, s, h, c), r.runKernelFunc(function (n) { return n.maxPoolBackprop(a, l, y, v) }, { $dy: a, $input: l }) }(n, h, c, u, f, e, o) } } }, "MaxPool", l, y), v ? a.as3D(a.shape[1], a.shape[2], a.shape[3]) : a) } function clt(n, u, f, e, o, s) { var h = t(n, "x", "avgPool", "float32"), c, v, a, l; return (null == e && (e = [1, 1]), i(pi(f, e), function () { return "Error in avgPool: Either strides or dilations must be 1. Got strides " + f + " and dilations '" + e + "'" }), c = h, v = !1, 3 === h.rank && (v = !0, c = h.as4D(1, h.shape[0], h.shape[1], h.shape[2])), i(4 === c.rank, function () { return "Error in avgPool: x must be rank 4 but got rank " + c.rank + "." }), null != s && i(lt(o), function () { return "Error in avgPool: pad must be an integer when using, dimRoundingMode " + s + " but got pad " + o + "." }), a = to(c.shape, u, f, e, o, s), 1 === a.filterWidth && 1 === a.filterHeight && yt(a.inShape, a.outShape)) ? h.clone() : (l = r.runKernelFunc(function (n) { return n.avgPool(c, a) }, { x: c }, function (n) { return { x: function () { return function (n, u, f, e, o, s) { var c = t(n, "dy", "avgPoolBackprop"), h = t(u, "input", "avgPoolBackprop"), p, a; i(h.rank === c.rank, function () { return "Rank of input (" + h.rank + ") does not match rank of dy (" + c.rank + ")" }); null == o && (o = [1, 1]); i(pi(e, o), function () { return "Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides " + e + " and dilations '" + o + "'" }); var l = h, v = c, y = !1; return (3 === h.rank && (y = !0, l = h.as4D(1, h.shape[0], h.shape[1], h.shape[2]), v = c.as4D(1, c.shape[0], c.shape[1], c.shape[2])), i(4 === v.rank, function () { return "Error in avgPoolBackprop: dy must be rank 4 but got rank " + v.rank + "." }), i(4 === l.rank, function () { return "Error in avgPoolBackprop: input must be rank 4 but got rank " + l.rank + "." }), p = to(l.shape, f, e, o, s), a = r.runKernelFunc(function (n) { return n.avgPoolBackprop(v, l, p) }, { dy4D: v, input4D: l }), y) ? a.as3D(a.shape[1], a.shape[2], a.shape[3]) : a }(n, c, u, f, e, o) } } }, "AvgPool", a), l = l.cast(h.dtype), v ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l) } function blt(n, t, i, r, u) { return t.rank < i.rank && (t = t.reshape(vi(t.shape, r))), n.rank < i.rank && (n = n.reshape(vi(n.shape, r))), { x: function () { var r = n.mul(i.equal(t).cast(n.dtype)); return null == u ? r : r.transpose(u) } } } function gat(n, t, i) { for (var f, e = 1 - n % 2, u = new Float32Array(n), r = 0; r < n; ++r)f = 2 * Math.PI * r / (n + e - 1), u[r] = t - i * Math.cos(f); return vt(u, "float32") } function rvt(n, t) { return void 0 === t && (t = !1), r.tidy(function () { if (2 !== n.shape.length) throw new Error("qr2d() requires a 2D Tensor, but got a " + n.shape.length + "D Tensor."); for (var f = n.shape[0], o = n.shape[1], u = pp(f), i = n.clone(), s = lu([[1]], [1, 1]), e = s.clone(), c = f >= o ? o : f, l = function (n) { var t, h = i, c = e, l = u; t = r.tidy(function () { var l = i.slice([n, n], [f - n, 1]), a = l.norm(), v = i.slice([n, n], [1, 1]), y = lu([[-1]]).where(v.greater(0), lu([[1]])), p = v.sub(y.mul(a)), r = l.div(p), w, t, b; e = 1 === r.shape[0] ? s.clone() : s.concat(r.slice([1, 0], [r.shape[0] - 1, r.shape[1]]), 0); var k = y.matMul(p).div(a).neg(), h = i.slice([n, 0], [f - n, o]), c = k.mul(e); return 0 === n ? i = h.sub(c.matMul(e.transpose().matMul(h))) : (w = h.sub(c.matMul(e.transpose().matMul(h))), i = i.slice([0, 0], [n, o]).concat(w, 0)), t = u.slice([0, n], [f, u.shape[1] - n]), 0 === n ? u = t.sub(t.matMul(e).matMul(c.transpose())) : (b = t.sub(t.matMul(e).matMul(c.transpose())), u = u.slice([0, 0], [f, n]).concat(b, 1)), [e, i, u] }); e = t[0]; i = t[1]; u = t[2]; ai([h, c, l]) }, h = 0; h < c; ++h)l(h); return !t && f > o && (u = u.slice([0, 0], [f, o]), i = i.slice([0, 0], [o, o])), [u, i] }) } function oa(n, t, r, u, f, e) { null == u && (u = .5); null == f && (f = Number.NEGATIVE_INFINITY); null == e && (e = 0); var o = n.shape[0]; return r = Math.min(r, o), i(0 <= u && u <= 1, function () { return "iouThreshold must be in [0, 1], but was '" + u + "'" }), i(2 === n.rank, function () { return "boxes must be a 2D tensor, but was of rank '" + n.rank + "'" }), i(4 === n.shape[1], function () { return "boxes must have 4 columns, but 2nd dimension was " + n.shape[1] }), i(1 === t.rank, function () { return "scores must be a 1D tensor" }), i(t.shape[0] === o, function () { return "scores has incompatible shape with boxes. Expected " + o + ", but was " + t.shape[0] }), i(0 <= e && e <= 1, function () { return "softNmsSigma must be in [0, 1], but was '" + e + "'" }), { maxOutputSize: r, iouThreshold: u, scoreThreshold: f, softNmsSigma: e } } function s(n, t) { Array.isArray(n) || (n = [n]); n.forEach(function (n) { null != n && i("complex64" !== n.dtype, function () { return t + " does not support complex64 tensors." }) }) } function sk(n, t, i, r) { if ("linear" === i) return n.linear(t); if ("relu" === i) return n.relu(t); if ("elu" === i) return n.elu(t); if ("relu6" === i) return n.relu6(t); if ("prelu" === i) return n.prelu(t, r); throw new Error("Activation " + i + " has not been implemented for the CPU backend."); } function avt(n, t) { for (var u = {}, i = 0, e = function (t) { var h = t.name, r = t.dtype, v = t.shape, s = w(v), e = void 0, f, b, c, l, k, a; if ("quantization" in t) { if (f = t.quantization, "uint8" !== f.dtype && "uint16" !== f.dtype) throw new Error("Weight " + t.name + " has unknown quantization dtype " + f.dtype + ". Supported quantization dtypes are: 'uint8' and 'uint16'."); var y = aa[f.dtype], o = n.slice(i, i + s * y), p = "uint8" === f.dtype ? new Uint8Array(o) : new Uint16Array(o); if ("float32" === r) e = Float32Array.from(p, function (n) { return n * f.scale + f.min }); else { if ("int32" !== r) throw new Error("Unsupported dtype in weight '" + h + "': " + r); e = Int32Array.from(p, function (n) { return Math.round(n * f.scale + f.min) }) } i += s * y } else if ("string" === r) for (b = w(t.shape), e = [], c = 0; c < b; c++)l = new Uint32Array(n.slice(i, i + vh))[0], i += vh, k = new Uint8Array(n.slice(i, i + l)), e.push(k), i += l; else { if (a = aa[r], o = n.slice(i, i + s * a), "float32" === r) e = new Float32Array(o); else if ("int32" === r) e = new Int32Array(o); else { if ("bool" !== r) throw new Error("Unsupported dtype in weight '" + h + "': " + r); e = new Uint8Array(o) } i += s * a } u[h] = fi(e, v, r) }, r = 0, f = t; r < f.length; r++)e(f[r]); return u } function rri(n) { var t, i, r, u; if (null === n) throw new Error("Invalid input value: " + JSON.stringify(n)); return t = 0, i = [], n.forEach(function (n) { if (t += n.byteLength, i.push(n.byteLength === n.buffer.byteLength ? n : new n.constructor(n)), !(n instanceof Float32Array || n instanceof Int32Array || n instanceof Uint8Array)) throw new Error("Unsupported TypedArray subtype: " + n.constructor.name); }), r = new Uint8Array(t), u = 0, i.forEach(function (n) { r.set(new Uint8Array(n.buffer), u); u += n.byteLength }), r.buffer } function vvt(n) { return va ? Buffer.byteLength(n) : new Blob([n]).size } function vk(n) { var r = 0, t, i; return n.forEach(function (n) { r += n.byteLength }), t = new Uint8Array(r), i = 0, n.forEach(function (n) { t.set(new Uint8Array(n), i); i += n.byteLength }), t.buffer } function yvt(n) { for (n = n.trim(); n.endsWith("/");)n = n.slice(0, n.length - 1); var t = n.split("/"); return t[t.length - 1] } function yh(n) { if (n.modelTopology instanceof ArrayBuffer) throw new Error("Expected JSON model topology, received ArrayBuffer."); return { dateSaved: new Date, modelTopologyType: "JSON", modelTopologyBytes: null == n.modelTopology ? 0 : vvt(JSON.stringify(n.modelTopology)), weightSpecsBytes: null == n.weightSpecs ? 0 : vvt(JSON.stringify(n.weightSpecs)), weightDataBytes: null == n.weightData ? 0 : n.weightData.byteLength } } function ya(n) { if (-1 === n.indexOf(co)) throw new Error("The url string provided does not contain a scheme. Supported schemes are: " + vf.getSchemes().join(",")); return { scheme: n.split(co)[0], path: n.split(co)[1] } } function pvt(n, t, r) { return void 0 === r && (r = !1), y(this, void 0, void 0, function () { var u, h, e, c, f, o, s, l, a; return p(this, function (v) { switch (v.label) { case 0: return i(n !== t, function () { return "Old path and new path are the same: '" + n + "'" }), i((u = fr.getLoadHandlers(n)).length > 0, function () { return "Copying failed because no load handler is found for source URL " + n + "." }), i(u.length < 2, function () { return "Copying failed because more than one (" + u.length + ") load handlers for source URL " + n + "." }), h = u[0], i((e = fr.getSaveHandlers(t)).length > 0, function () { return "Copying failed because no save handler is found for destination URL " + t + "." }), i(e.length < 2, function () { return "Copying failed because more than one (" + u.length + ") save handlers for destination URL " + t + "." }), c = e[0], f = ya(n).scheme, o = ya(n).path, s = f === ya(n).scheme, [4, h.load()]; case 1: return l = v.sent(), r && s ? [4, vf.getManager(f).removeModel(o)] : [3, 3]; case 2: v.sent(); v.label = 3; case 3: return [4, c.save(l)]; case 4: return a = v.sent(), !r || s ? [3, 6] : [4, vf.getManager(f).removeModel(o)]; case 5: v.sent(); v.label = 6; case 6: return [2, a.modelArtifactsInfo] } }) }) } function wvt() { if (!o().getBool("IS_BROWSER")) throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser."); var n = window || self, t = n.indexedDB || n.mozIndexedDB || n.webkitIndexedDB || n.msIndexedDB || n.shimIndexedDB; if (null == t) throw new Error("The current browser does not appear to support IndexedDB."); return t } function yk(n) { var t = n.result; t.createObjectStore(yf, { keyPath: "modelPath" }); t.createObjectStore(wu, { keyPath: "modelPath" }) } function dvt(n) { return { info: [lo, n, kvt].join(bu), topology: [lo, n, uri].join(bu), weightSpecs: [lo, n, fri].join(bu), weightData: [lo, n, eri].join(bu), modelMetadata: [lo, n, ori].join(bu) } } function sri(n) { var t = n.split(bu); if (t.length < 3) throw new Error("Invalid key format: " + n); return t.slice(1, t.length - 1).join(bu) } function nyt(n) { return new Promise(function (n) { return setTimeout(n) }).then(n) } function iyt(n, t, r, u) { !function (n) { i(null != n && Array.isArray(n) && n.length > 0, function () { return "promises must be a none empty array" }) }(n), function (n, t) { i(n >= 0 && n <= 1, function () { return "Progress fraction must be in range [0, 1], but got startFraction " + n }); i(t >= 0 && t <= 1, function () { return "Progress fraction must be in range [0, 1], but got endFraction " + t }); i(t >= n, function () { return "startFraction must be no more than endFraction, but got startFraction " + n + " and endFraction " + t }) }(r = null == r ? 0 : r, u = null == u ? 1 : u); var f = 0; return Promise.all(n.map(function (i) { return i.then(function (i) { var e = r + ++f / n.length * (u - r); return t(e), i }), i })) } function ryt(n, t) { return y(this, void 0, void 0, function () { var e, i, s, h, r, u, c, l, f; return p(this, function (a) { switch (a.label) { case 0: return null == t && (t = {}), e = null == t.fetchFunc ? o().platform.fetch : t.fetchFunc, i = n.map(function (n) { return e(n, t.requestInit, { isBinary: !0 }) }), s = 0, h = .5, null != t.onProgress ? [3, 2] : [4, Promise.all(i)]; case 1: return r = a.sent(), [3, 4]; case 2: return [4, iyt(i, t.onProgress, s, h)]; case 3: r = a.sent(); a.label = 4; case 4: return u = r.map(function (n) { return n.arrayBuffer() }), c = .5, l = 1, null != t.onProgress ? [3, 6] : [4, Promise.all(u)]; case 5: return f = a.sent(), [3, 8]; case 6: return [4, iyt(u, t.onProgress, c, l)]; case 7: f = a.sent(); a.label = 8; case 8: return [2, f] } }) }) } function uyt(n) { var t = this; return function (i, r, u) { return void 0 === r && (r = ""), y(t, void 0, void 0, function () { var o, t, f, s, v, h, c, l, a, e; return p(this, function (y) { switch (y.label) { case 0: if (o = i.map(function () { return !1 }), t = {}, f = null != u ? u.map(function () { return !1 }) : [], s = [], i.forEach(function (n, i) { var r = 0; n.weights.forEach(function (n) { var c = "quantization" in n ? n.quantization.dtype : n.dtype, e = aa[c] * w(n.shape), h = function () { o[i] = !0; null == t[i] && (t[i] = []); t[i].push({ manifestEntry: n, groupOffset: r, sizeBytes: e }) }; null != u ? u.forEach(function (t, i) { t === n.name && (h(), f[i] = !0) }) : h(); s.push(n.name); r += e }) }), !f.every(function (n) { return n })) throw v = u.filter(function (n, t) { return !f[t] }), new Error("Could not find weights in manifest with names: " + v.join(", ") + ". \nManifest JSON has weights with names: " + s.join(", ") + "."); return h = o.reduce(function (n, t, i) { return t && n.push(i), n }, []), c = [], h.forEach(function (n) { i[n].paths.forEach(function (n) { var t = r + (r.endsWith("/") ? "" : "/") + n; c.push(t) }) }), [4, n(c)]; case 1: return l = y.sent(), a = {}, e = 0, h.forEach(function (n) { for (var o, r = i[n].paths.length, s = 0, u = 0; u < r; u++)s += l[e + u].byteLength; for (var h = new ArrayBuffer(s), v = new Uint8Array(h), c = 0, f = 0; f < r; f++)o = new Uint8Array(l[e + f]), v.set(o, c), c += o.byteLength; t[n].forEach(function (n) { var t = avt(h.slice(n.groupOffset, n.groupOffset + n.sizeBytes), [n.manifestEntry]); for (var i in t) a[i] = t[i] }); e += r }), [2, a] } }) }) } } function kk(n) { return null != n.match(bk.URL_SCHEME_REGEX) } function gk(n, t) { return new bk(n, t) } function pf(n) { i(null != n.className, function () { return "Class being registered does not have the static className property defined." }); i("string" == typeof n.className, function () { return "className is required to be a string, but got type " + typeof n.className }); i(n.className.length > 0, function () { return "Class being registered has an empty-string as its className, which is disallowed." }); eyt.register(n) } function id() { return 32 === r.backend.floatPrecision() ? bri : oyt } function rd(n, t, i) { var e = !0, o, s, h, c, f, r, u, l, a; if (((ei(n) || ei(t)) && (e = !1), ei(n) && ei(t) && (e = !0), e) && (o = n.constructor.name, s = t.constructor.name, o !== s)) throw new Error("Arrays are of different type. Actual: " + o + ". Expected: " + s); if (Array.isArray(n) && Array.isArray(t) && (h = uu(n), c = uu(t), !yt(h, c))) throw new Error("Arrays have different shapes. Actual: [" + h + "]. Expected: [" + c + "]"); if (f = ei(n) ? n : hu(n), r = ei(t) ? t : hu(t), f.length !== r.length) throw new Error("Arrays have different lengths actual: " + f.length + " vs expected: " + r.length + ".\nActual:   " + f + ".\nExpected: " + r + "."); for (u = 0; u < r.length; ++u)if (l = f[u], a = r[u], !i(l, a)) throw new Error("Arrays differ: actual[" + u + "] = " + l + ", expected[" + u + "] = " + a + ".\nActual:   " + f + ".\nExpected: " + r + "."); } function ud(n, t, i) { return !isFinite(n) && !isFinite(t) || !(isNaN(n) || isNaN(t) || Math.abs(n - t) > i) } function tui() { return new Promise(function (n) { return nui(function () { return n() }) }) } function bf(n, t, i) { if (i === void 0 && (i = !1), n.beginPath(), t.slice(1).forEach(function (i, r) { var f = i.x, e = i.y, u = t[r]; n.moveTo(u.x, u.y); n.lineTo(f, e) }), i) { var r = t[t.length - 1], u = t[0]; if (!r || !u) return; n.moveTo(r.x, r.y); n.lineTo(u.x, u.y) } n.stroke() } function d(n, t) { function i() { this.constructor = n } iv(n, t); n.prototype = t === null ? Object.create(t) : (i.prototype = t.prototype, new i) } function a(n, t, i, r) { return new (i || (i = Promise))(function (u, f) { function o(n) { try { e(r.next(n)) } catch (t) { f(t) } } function s(n) { try { e(r["throw"](n)) } catch (t) { f(t) } } function e(n) { n.done ? u(n.value) : new i(function (t) { t(n.value) }).then(o, s) } e((r = r.apply(n, t || [])).next()) }) } function v(n, t) { function o(n) { return function (t) { return s([n, t]) } } function s(e) { if (f) throw new TypeError("Generator is already executing."); while (r) try { if (f = 1, u && (i = e[0] & 2 ? u["return"] : e[0] ? u["throw"] || ((i = u["return"]) && i.call(u), 0) : u.next) && !(i = i.call(u, e[1])).done) return i; (u = 0, i) && (e = [e[0] & 2, i.value]); switch (e[0]) { case 0: case 1: i = e; break; case 4: return r.label++, { value: e[1], done: !1 }; case 5: r.label++; u = e[1]; e = [0]; continue; case 7: e = r.ops.pop(); r.trys.pop(); continue; default: if (!(i = r.trys, i = i.length > 0 && i[i.length - 1]) && (e[0] === 6 || e[0] === 2)) { r = 0; continue } if (e[0] === 3 && (!i || e[1] > i[0] && e[1] < i[3])) { r.label = e[1]; break } if (e[0] === 6 && r.label < i[1]) { r.label = i[1]; i = e; break } if (i && r.label < i[2]) { r.label = i[2]; r.ops.push(e); break } i[2] && r.ops.pop(); r.trys.pop(); continue }e = t.call(n, r) } catch (o) { e = [6, o]; u = 0 } finally { f = i = 0 } if (e[0] & 5) throw e[1]; return { value: e[0] ? e[1] : void 0, done: !0 } } var r = { label: 0, sent: function () { if (i[0] & 1) throw i[1]; return i[1] }, trys: [], ops: [] }, f, u, i, e; return e = { next: o(0), "throw": o(1), "return": o(2) }, typeof Symbol == "function" && (e[Symbol.iterator] = function () { return this }), e } function wh() { for (var i = 0, n = 0, r = arguments.length; n < r; n++)i += arguments[n].length; for (var u = Array(i), f = 0, n = 0; n < r; n++)for (var e = arguments[n], t = 0, o = e.length; t < o; t++, f++)u[f] = e[t]; return u } function vo(n, t) { return n instanceof et && n.shape.length === t } function iui(n) { return vo(n, 1) } function hyt(n) { return vo(n, 2) } function bh(n) { return vo(n, 3) } function du(n) { return vo(n, 4) } function cyt(n) { return n % 1 != 0 } function fd(n) { return n % 2 == 0 } function rv(n, t) { t === void 0 && (t = 2); var i = Math.pow(10, t); return Math.floor(n * i) / i } function ed(n) { return n && n.width && n.height } function lyt(n, t) { var i = n.width, r = n.height, u = t / Math.max(r, i); return new ku(Math.round(i * u), Math.round(r * u)) } function uv(n) { return n.reduce(function (n, t) { return n.add(t) }, new ut(0, 0)).div(new ut(n.length, n.length)) } function yo(n, t, i) { return Array(n).fill(0).map(function (n, r) { return t + r * i }) } function kf(n) { return !!n && n !== Infinity && n !== -Infinity && !isNaN(n) || n === 0 } function fv(n) { return kf(n) && 0 <= n && n <= 1 } function ayt(n, t, i) { i === void 0 && (i = !0); var u = Math.max(0, Math.min(n.right, t.right) - Math.max(n.left, t.left)), f = Math.max(0, Math.min(n.bottom, t.bottom) - Math.max(n.top, t.top)), r = u * f; return i ? r / (n.area + t.area - r) : r / Math.min(n.area, t.area) } function vyt(n) { var t = n.map(function (n) { return n.x }), i = n.map(function (n) { return n.y }), r = t.reduce(function (n, t) { return t < n ? t : n }, Infinity), u = i.reduce(function (n, t) { return t < n ? t : n }, Infinity), f = t.reduce(function (n, t) { return n < t ? t : n }, 0), e = i.reduce(function (n, t) { return n < t ? t : n }, 0); return new kh(r, u, f, e) } function po(n, t, i, r) { r === void 0 && (r = !0); for (var u = t.map(function (n, t) { return { score: n, boxIndex: t } }).sort(function (n, t) { return n.score - t.score }).map(function (n) { return n.boxIndex }), f = [], e = function () { var s = u.pop(), e, o, t; for (f.push(s), e = u, o = [], t = 0; t < e.length; t++) { var h = e[t], c = n[s], l = n[h]; o.push(ayt(c, l, r)) } u = u.filter(function (n, t) { return o[t] <= i }) }; u.length > 0;)e(); return f } function wo(n, t) { return c(function () { var i = t[0], r = t[1], u = t[2], f = pr(wh(n.shape.slice(0, 3), [1]), i), e = pr(wh(n.shape.slice(0, 3), [1]), r), o = pr(wh(n.shape.slice(0, 3), [1]), u), s = wt([f, e, o], 3); return dt(n, s) }) } function yyt(n, t) { return t === void 0 && (t = !1), c(function () { var f = n.shape.slice(1), i = f[0], r = f[1]; if (i === r) return n; var e = Math.abs(i - r), c = Math.round(e * (t ? .5 : 1)), u = i > r ? 2 : 1, o = function (t) { var i = n.shape.slice(); return i[u] = t, pr(i, 0) }, s = o(c), h = e - s.shape[u], l = t && h ? o(h) : null, a = [l, n, s].filter(function (n) { return !!n }).map(function (n) { return n.toFloat() }); return wt(a, u) }) } function uui(n) { for (var r, u, t = n.slice(), i = t.length - 1; i > 0; i--)r = Math.floor(Math.random() * (i + 1)), u = t[i], t[i] = t[r], t[r] = u; return t } function ev(n) { return 1 / (1 + Math.exp(-n)) } function fui(n) { return Math.log(n / (1 - n)) } function bo(n) { return n.detection instanceof di } function ko(n, t) { var i = { detection: t }; return Object.assign({}, n, i) } function wyt() { var n = window.fetch || function () { throw new Error("fetch - missing fetch implementation for browser environment"); }, t = function () { throw new Error("readFile - filesystem not available for browser environment"); }; return { Canvas: HTMLCanvasElement, CanvasRenderingContext2D: CanvasRenderingContext2D, Image: HTMLImageElement, ImageData: ImageData, Video: HTMLVideoElement, createCanvasElement: function () { return document.createElement("canvas") }, createImageElement: function () { return document.createElement("img") }, fetch: n, readFile: t } } function byt(n) { var t = "", i; if (!n) try { n = require("fs") } catch (r) { t = r.toString() } return i = n ? function (t) { return new Promise(function (i, r) { n.readFile(t, function (n, t) { return n ? r(n) : i(t) }) }) } : function () { throw new Error("readFile - failed to require fs in nodejs environment with error: " + t); }, { readFile: i } } function kyt() { var n = global.Canvas || global.HTMLCanvasElement, t = global.Image || global.HTMLImageElement, i = function () { if (n) return new n; throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment"); }, r = function () { if (t) return new t; throw new Error("createImageElement - missing Image implementation for nodejs environment"); }, u = global.fetch || function () { throw new Error("fetch - missing fetch implementation for nodejs environment"); }, f = byt(); return ci({ Canvas: n || function () { function n() { } return n }(), CanvasRenderingContext2D: global.CanvasRenderingContext2D || function () { function n() { } return n }(), Image: t || function () { function n() { } return n }(), ImageData: global.ImageData || function () { function n() { } return n }(), Video: global.HTMLVideoElement || function () { function n() { } return n }(), createCanvasElement: i, createImageElement: r, fetch: u }, f) } function dyt() { return typeof window == "object" && typeof document != "undefined" && typeof HTMLImageElement != "undefined" && typeof HTMLCanvasElement != "undefined" && typeof HTMLVideoElement != "undefined" && typeof ImageData != "undefined" && typeof CanvasRenderingContext2D != "undefined" } function gyt() { return typeof global == "object" && typeof require == "function" && typeof module != "undefined" && typeof process != "undefined" && !!process.version } function cui() { if (!ni) throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()"); return ni } function ld(n) { ni = n } function ad() { dyt() && ld(wyt()); gyt() && ld(kyt()) } function lui(n) { if (ni || ad(), !ni) throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()"); var t = n.Canvas, i = t === void 0 ? ni.Canvas : t, r = n.Image, u = r === void 0 ? ni.Image : r; ni.Canvas = i; ni.Image = u; ni.createCanvasElement = n.createCanvasElement || function () { return new i }; ni.createImageElement = n.createImageElement || function () { return new u }; ni.ImageData = n.ImageData || ni.ImageData; ni.Video = n.Video || ni.Video; ni.fetch = n.fetch || ni.fetch; ni.readFile = n.readFile || ni.readFile } function sv(n) { return !ti.isNodejs() && typeof n == "string" ? document.getElementById(n) : n } function dr(n) { var r = ti.getEnv(), u = r.Canvas, f = r.CanvasRenderingContext2D, t, i; if (n instanceof f) return n; if (t = sv(n), !(t instanceof u)) throw new Error("resolveContext2d - expected canvas to be of instance of Canvas"); if (i = t.getContext("2d"), !i) throw new Error("resolveContext2d - canvas 2d context is null"); return i } function aui(n, t) { var i = Array.isArray(t) ? t : [t]; i.forEach(function (t) { var i = t instanceof di ? t.score : bo(t) ? t.detection.score : undefined, r = t instanceof di ? t.box : bo(t) ? t.detection.box : new kr(t), u = i ? "" + rv(i) : undefined; new tpt(r, { label: u }).draw(n) }) } function pd(n) { var t = ti.getEnv(), i = t.Image, r = t.Video; return n instanceof i && n.complete || n instanceof r && n.readyState >= 3 } function ipt(n) { return new Promise(function (t, i) { function r(n) { n.currentTarget && (n.currentTarget.removeEventListener("load", r), n.currentTarget.removeEventListener("error", u), t(n)) } function u(n) { n.currentTarget && (n.currentTarget.removeEventListener("load", r), n.currentTarget.removeEventListener("error", u), i(n)) } if (n instanceof ti.getEnv().Canvas || pd(n)) return t(); n.addEventListener("load", r); n.addEventListener("error", u) }) } function rpt(n) { return new Promise(function (t, i) { if (!(n instanceof Blob)) return i("bufferToImage - expected buf to be of type: Blob"); var r = new FileReader; r.onload = function () { if (typeof r.result != "string") return i("bufferToImage - expected reader.result to be a string, in onload"); var n = ti.getEnv().createImageElement(); n.onload = function () { return t(n) }; n.onerror = i; n.src = r.result }; r.onerror = i; r.readAsDataURL(n) }) } function hv(n) { var t = ti.getEnv(), i = t.Image, r = t.Video; return n instanceof i ? new ku(n.naturalWidth, n.naturalHeight) : n instanceof r ? new ku(n.videoWidth, n.videoHeight) : new ku(n.width, n.height) } function gh(n) { var i = n.width, r = n.height, u = ti.getEnv().createCanvasElement, t = u(); return t.width = i, t.height = r, t } function cv(n, t) { var r = ti.getEnv().ImageData; if (!(n instanceof r) && !pd(n)) throw new Error("createCanvasFromMedia - media has not finished loading yet"); var u = t || hv(n), f = u.width, e = u.height, i = gh({ width: f, height: e }); return n instanceof r ? dr(i).putImageData(n, 0, 0) : dr(i).drawImage(n, 0, 0, f, e), i } function upt(n, t) { return a(this, void 0, void 0, function () { var r, i, f, e, o, u; return v(this, function (s) { switch (s.label) { case 0: return r = t || ti.getEnv().createCanvasElement(), i = n.shape.slice(du(n) ? 1 : 0), f = i[0], e = i[1], o = i[2], u = c(function () { return n.as3D(f, e, o).toInt() }), [4, wa.toPixels(u, r)]; case 1: return s.sent(), u.dispose(), [2, r] } }) }) } function wd(n) { var t = ti.getEnv(), i = t.Image, r = t.Canvas, u = t.Video; return n instanceof i || n instanceof r || n instanceof u } function fpt(n, t, i) { i === void 0 && (i = !1); var e = ti.getEnv(), l = e.Image, o = e.Canvas; if (!(n instanceof l || n instanceof o)) throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement"); var r = hv(n), s = t / Math.max(r.height, r.width), u = s * r.width, f = s * r.height, h = gh({ width: t, height: t }), a = n instanceof o ? n : cv(n), c = Math.abs(u - f) / 2, v = i && u < f ? c : 0, y = i && f < u ? c : 0; return dr(h).drawImage(a, v, y, u, f), h } function ii(n) { return a(this, void 0, void 0, function () { var t, i, r; return v(this, function (u) { switch (u.label) { case 0: if (n instanceof go) return [2, n]; if (t = Array.isArray(n) ? n : [n], !t.length) throw new Error("toNetInput - empty array passed as input"); return i = function (t) { return Array.isArray(n) ? " at input index " + t + ":" : "" }, r = t.map(sv), r.forEach(function (n, r) { if (!wd(n) && !bh(n) && !du(n)) { if (typeof t[r] == "string") throw new Error("toNetInput -" + i(r) + " string passed, but could not resolve HTMLElement for element id " + t[r]); throw new Error("toNetInput -" + i(r) + " expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id"); } if (du(n)) { var u = n.shape[0]; if (u !== 1) throw new Error("toNetInput -" + i(r) + " tf.Tensor4D with batchSize " + u + " passed, but not supported in input array"); } }), [4, Promise.all(r.map(function (n) { return wd(n) && ipt(n) }))]; case 1: return u.sent(), [2, new go(r, Array.isArray(n))] } }) }) } function lv(n, t) { return a(this, void 0, void 0, function () { var u, i, f, r, e, o, s; return v(this, function (h) { switch (h.label) { case 0: return (u = ti.getEnv().Canvas, i = n, !!(n instanceof u)) ? [3, 5] : [4, ii(n)]; case 1: if (f = h.sent(), f.batchSize > 1) throw new Error("extractFaces - batchSize > 1 not supported"); return (r = f.getInput(0), !(r instanceof u)) ? [3, 2] : (e = r, [3, 4]); case 2: return [4, upt(r)]; case 3: e = h.sent(); h.label = 4; case 4: i = e; h.label = 5; case 5: return o = dr(i), s = t.map(function (n) { return n instanceof di ? n.forSize(i.width, i.height).box.floor() : n }).map(function (n) { return n.clipAtImageBorders(i.width, i.height) }), [2, s.map(function (n) { var u = n.x, f = n.y, t = n.width, i = n.height, r = gh({ width: t, height: i }); return dr(r).putImageData(o.getImageData(u, f, t, i), 0, 0), r })] } }) }) } function av(n, t) { return a(this, void 0, void 0, function () { return v(this, function () { if (!bh(n) && !du(n)) throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D"); if (du(n) && n.shape[0] > 1) throw new Error("extractFaceTensors - batchSize > 1 not supported"); return [2, c(function () { var i = n.shape.slice(du(n) ? 1 : 0), r = i[0], u = i[1], f = i[2], e = t.map(function (n) { return n instanceof di ? n.forSize(u, r).box : n }).map(function (n) { return n.clipAtImageBorders(u, r) }); return e.map(function (t) { var i = t.x, e = t.y, o = t.width, s = t.height; return wb(n.as3D(r, u, f), [e, i, 0], [s, o, f]) }) })] }) }) } function vv(n, t) { return a(this, void 0, void 0, function () { var r, i; return v(this, function (u) { switch (u.label) { case 0: return r = ti.getEnv().fetch, [4, r(n, t)]; case 1: if (i = u.sent(), !(i.status < 400)) throw new Error("failed to fetch: (" + i.status + ") " + i.statusText + ", from url: " + i.url); return [2, i] } }) }) } function vui(n) { return a(this, void 0, void 0, function () { var i, t; return v(this, function (r) { switch (r.label) { case 0: return [4, vv(n)]; case 1: return i = r.sent(), [4, i.blob()]; case 2: if (t = r.sent(), !t.type.startsWith("image/")) throw new Error("fetchImage - expected blob type to be of type image/*, instead have: " + t.type + ", for url: " + i.url); return [2, rpt(t)] } }) }) } function ept(n) { return a(this, void 0, void 0, function () { return v(this, function (t) { switch (t.label) { case 0: return [4, vv(n)]; case 1: return [2, t.sent().json()] } }) }) } function yui(n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = Float32Array.bind, [4, vv(n)]; case 1: return [4, i.sent().arrayBuffer()]; case 2: return [2, new (t.apply(Float32Array, [void 0, i.sent()]))] } }) }) } function opt(n, t) { var u = t + "-weights_manifest.json", f; if (!n) return { modelBaseUri: "", manifestUri: u }; if (n === "/") return { modelBaseUri: "/", manifestUri: "/" + u }; f = n.startsWith("http://") ? "http://" : n.startsWith("https://") ? "https://" : ""; n = n.replace(f, ""); var r = n.split("/").filter(function (n) { return n }), e = n.endsWith(".json") ? r[r.length - 1] : u, i = f + (n.endsWith(".json") ? r.slice(0, r.length - 1) : r).join("/"); return i = n.startsWith("/") ? "/" + i : i, { modelBaseUri: i, manifestUri: i === "/" ? "/" + e : i + "/" + e } } function spt(n, t) { return a(this, void 0, void 0, function () { var i, r, u, f; return v(this, function (e) { switch (e.label) { case 0: return i = opt(n, t), r = i.manifestUri, u = i.modelBaseUri, [4, ept(r)]; case 1: return f = e.sent(), [2, td.loadWeights(f, u)] } }) }) } function pui(n, t, i) { i === void 0 && (i = !1); var r = i ? hv(t) : t, u = r.width, f = r.height; return n.width = u, n.height = f, { width: u, height: f } } function er(n, t, i) { return c(function () { var r = ia(n, t.depthwise_filter, t.pointwise_filter, i, "same"); return nt(r, t.bias) }) } function bd(n, t, i) { return i === void 0 && (i = !1), c(function () { var r = ct(i ? nt(ur(n, t.conv0.filters, [2, 2], "same"), t.conv0.bias) : er(n, t.conv0, [2, 2])), u = er(r, t.conv1, [1, 1]), f = ct(nt(r, u)), e = er(f, t.conv2, [1, 1]); return ct(nt(r, nt(u, e))) }) } function yv(n, t, i, r) { return i === void 0 && (i = !1), r === void 0 && (r = !0), c(function () { var u = ct(i ? nt(ur(n, t.conv0.filters, r ? [2, 2] : [1, 1], "same"), t.conv0.bias) : er(n, t.conv0, r ? [2, 2] : [1, 1])), f = er(u, t.conv1, [1, 1]), o = ct(nt(u, f)), e = er(o, t.conv2, [1, 1]), s = ct(nt(u, nt(f, e))), h = er(s, t.conv3, [1, 1]); return ct(nt(u, nt(f, nt(e, h)))) }) } function nu(n, t, i, r) { return i === void 0 && (i = "same"), r === void 0 && (r = !1), c(function () { var u = nt(ur(n, t.filters, [1, 1], i), t.bias); return r ? ct(u) : u }) } function nf(n, t) { Object.keys(n).forEach(function (i) { t.some(function (n) { return n.originalPath === i }) || n[i].dispose() }) } function pv(n, t) { return function (i, r, u, f) { var e = yi(n(i * r * u * u), [u, u, i, r]), o = vt(n(r)); return t.push({ paramPath: f + "/filters" }, { paramPath: f + "/bias" }), { filters: e, bias: o } } } function kd(n, t) { return function (i, r, u) { var f = lu(n(i * r), [i, r]), e = vt(n(r)); return t.push({ paramPath: u + "/weights" }, { paramPath: u + "/bias" }), { weights: f, bias: e } } } function gd(n, t) { return function (i, r, u) { var f = yi(n(9 * i), [3, 3, i, 1]), e = yi(n(i * r), [1, 1, i, r]), o = vt(n(r)); return t.push({ paramPath: u + "/depthwise_filter" }, { paramPath: u + "/pointwise_filter" }, { paramPath: u + "/bias" }), new dd(f, e, o) } } function ng(n) { return function (t) { var i = n(t + "/depthwise_filter", 4), r = n(t + "/pointwise_filter", 4), u = n(t + "/bias", 1); return new dd(i, r, u) } } function df(n, t) { return function (i, r, u) { var f = n[i]; if (!vo(f, r)) throw new Error("expected weightMap[" + i + "] to be a Tensor" + r + "D, instead have " + f); return t.push({ originalPath: i, paramPath: u || i }), f } } function tf(n) { function i(n) { var i = t.slice(0, n); return t = t.slice(n), i } function r() { return t } var t = n; return { extractWeights: i, getRemainingWeights: r } } function hpt(n, t) { function r(n, t, r, f) { f === void 0 && (f = !1); var e = f ? u(n, t, 3, r + "/conv0") : i(n, t, r + "/conv0"), o = i(t, t, r + "/conv1"), s = i(t, t, r + "/conv2"); return { conv0: e, conv1: o, conv2: s } } function f(n, t, u, f) { f === void 0 && (f = !1); var e = r(n, t, u, f), o = e.conv0, s = e.conv1, h = e.conv2, c = i(t, t, u + "/conv3"); return { conv0: o, conv1: s, conv2: h, conv3: c } } var u = pv(n, t), i = gd(n, t); return { extractDenseBlock3Params: r, extractDenseBlock4Params: f } } function wui(n) { var i = [], r = tf(n), f = r.extractWeights, u = r.getRemainingWeights, t = hpt(f, i).extractDenseBlock4Params, e = t(3, 32, "dense0", !0), o = t(32, 64, "dense1"), s = t(64, 128, "dense2"), h = t(128, 256, "dense3"); if (u().length !== 0) throw new Error("weights remaing after extract: " + u().length); return { paramMappings: i, params: { dense0: e, dense1: o, dense2: s, dense3: h } } } function cpt(n) { return function (t) { var i = n(t + "/filters", 4), r = n(t + "/bias", 1); return { filters: i, bias: r } } } function lpt(n, t) { function f(n, t) { t === void 0 && (t = !1); var r = t ? u(n + "/conv0") : i(n + "/conv0"), f = i(n + "/conv1"), e = i(n + "/conv2"); return { conv0: r, conv1: f, conv2: e } } function e(n, t) { t === void 0 && (t = !1); var r = t ? u(n + "/conv0") : i(n + "/conv0"), f = i(n + "/conv1"), e = i(n + "/conv2"), o = i(n + "/conv3"); return { conv0: r, conv1: f, conv2: e, conv3: o } } var r = df(n, t), u = cpt(r), i = ng(r); return { extractDenseBlock3Params: f, extractDenseBlock4Params: e } } function bui(n) { var i = [], t = lpt(n, i).extractDenseBlock4Params, r = { dense0: t("dense0", !0), dense1: t("dense1"), dense2: t("dense2"), dense3: t("dense3") }; return nf(n, i), { params: r, paramMappings: i } } function eu(n, t) { return c(function () { return nt(ch(n, t.weights), t.bias) }) } function kui(n, t, i) { var r = [], u = tf(n), e = u.extractWeights, f = u.getRemainingWeights, o = kd(e, r), s = o(t, i, "fc"); if (f().length !== 0) throw new Error("weights remaing after extract: " + f().length); return { paramMappings: r, params: { fc: s } } } function dui(n) { function r(n) { var t = i(n + "/weights", 2), r = i(n + "/bias", 1); return { weights: t, bias: r } } var t = [], i = df(n, t), u = { fc: r("fc") }; return nf(n, t), { params: u, paramMappings: t } } function apt(n) { var t = {}, i = {}; return Object.keys(n).forEach(function (r) { var u = r.startsWith("fc") ? i : t; u[r] = n[r] }), { featureExtractorMap: t, classifierMap: i } } function ppt(n) { return n.expressions instanceof wv } function rg(n, t) { var i = { expressions: t }; return Object.assign({}, n, i) } function gui(n, t, i, r) { i === void 0 && (i = .1); var u = Array.isArray(t) ? t : [t]; u.forEach(function (t) { var u = t instanceof wv ? t : ppt(t) ? t.expressions : undefined; if (!u) throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof"); var f = u.asSortedArray(), e = f.filter(function (n) { return n.probability > i }), o = bo(t) ? t.detection.box.bottomLeft : r || new ut(0, 0), s = new yd(e.map(function (n) { return n.expression + " (" + rv(n.probability) + ")" }), o); s.draw(n) }) } function bv(n) { return bo(n) && n.landmarks instanceof pe && n.unshiftedLandmarks instanceof pe && n.alignedRect instanceof di } function nc(n, t) { var i = n.detection.box, r = t.shiftBy(i.x, i.y), f = r.align(), u = n.detection.imageDims, e = new di(n.detection.score, f.rescale(u.reverse()), u), o = { landmarks: r, unshiftedLandmarks: t, alignedRect: e }; return Object.assign({}, n, o) } function nfi(n, t) { var i = Array.isArray(t) ? t : [t]; i.forEach(function (t) { var i = t instanceof pe ? t : bv(t) ? t.landmarks : undefined; if (!i) throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof"); new fg(i).draw(n) }) } function tfi(n, t) { function u(n, t, u) { var f = i(n, t, u + "/separable_conv0"), e = i(t, t, u + "/separable_conv1"), o = r(n, t, 1, u + "/expansion_conv"); return { separable_conv0: f, separable_conv1: e, expansion_conv: o } } function f(n, t) { var r = i(n, n, t + "/separable_conv0"), u = i(n, n, t + "/separable_conv1"), f = i(n, n, t + "/separable_conv2"); return { separable_conv0: r, separable_conv1: u, separable_conv2: f } } var r = pv(n, t), i = gd(n, t); return { extractConvParams: r, extractSeparableConvParams: i, extractReductionBlockParams: u, extractMainBlockParams: f } } function ifi(n, t) { var u = [], f = tf(n), s = f.extractWeights, e = f.getRemainingWeights, i = tfi(s, u), h = i.extractConvParams, c = i.extractSeparableConvParams, r = i.extractReductionBlockParams, l = i.extractMainBlockParams, a = h(3, 32, 3, "entry_flow/conv_in"), v = r(32, 64, "entry_flow/reduction_block_0"), y = r(64, 128, "entry_flow/reduction_block_1"), p = { conv_in: a, reduction_block_0: v, reduction_block_1: y }, o = {}; yo(t, 0, 1).forEach(function (n) { o["main_block_" + n] = l(128, "middle_flow/main_block_" + n) }); var w = r(128, 256, "exit_flow/reduction_block"), b = c(256, 512, "exit_flow/separable_conv"), k = { reduction_block: w, separable_conv: b }; if (e().length !== 0) throw new Error("weights remaing after extract: " + e().length); return { paramMappings: u, params: { entry_flow: p, middle_flow: o, exit_flow: k } } } function rfi(n, t) { function f(n) { var t = i(n + "/separable_conv0"), r = i(n + "/separable_conv1"), f = u(n + "/expansion_conv"); return { separable_conv0: t, separable_conv1: r, expansion_conv: f } } function e(n) { var t = i(n + "/separable_conv0"), r = i(n + "/separable_conv1"), u = i(n + "/separable_conv2"); return { separable_conv0: t, separable_conv1: r, separable_conv2: u } } var r = df(n, t), u = cpt(r), i = ng(r); return { extractConvParams: u, extractSeparableConvParams: i, extractReductionBlockParams: f, extractMainBlockParams: e } } function ufi(n, t) { var r = [], i = rfi(n, r), e = i.extractConvParams, o = i.extractSeparableConvParams, u = i.extractReductionBlockParams, s = i.extractMainBlockParams, h = e("entry_flow/conv_in"), c = u("entry_flow/reduction_block_0"), l = u("entry_flow/reduction_block_1"), a = { conv_in: h, reduction_block_0: c, reduction_block_1: l }, f = {}; yo(t, 0, 1).forEach(function (n) { f["main_block_" + n] = s("middle_flow/main_block_" + n) }); var v = u("exit_flow/reduction_block"), y = o("exit_flow/separable_conv"), p = { reduction_block: v, separable_conv: y }; return nf(n, r), { params: { entry_flow: a, middle_flow: f, exit_flow: p }, paramMappings: r } } function bpt(n, t, i) { return nt(ur(n, t.filters, i, "same"), t.bias) } function eg(n, t, i) { i === void 0 && (i = !0); var r = i ? ct(n) : n; return r = er(r, t.separable_conv0, [1, 1]), r = er(ct(r), t.separable_conv1, [1, 1]), r = gt(r, [3, 3], [2, 2], "same"), nt(r, bpt(n, t.expansion_conv, [2, 2])) } function ffi(n, t) { var i = er(ct(n), t.separable_conv0, [1, 1]); return i = er(ct(i), t.separable_conv1, [1, 1]), i = er(ct(i), t.separable_conv2, [1, 1]), nt(i, n) } function efi(n) { var t = [], i = tf(n), f = i.extractWeights, r = i.getRemainingWeights, u = kd(f, t), e = u(512, 1, "fc/age"), o = u(512, 2, "fc/gender"); if (r().length !== 0) throw new Error("weights remaing after extract: " + r().length); return { paramMappings: t, params: { fc: { age: e, gender: o } } } } function ofi(n) { function r(n) { var t = i(n + "/weights", 2), r = i(n + "/bias", 1); return { weights: t, bias: r } } var t = [], i = df(n, t), u = { fc: { age: r("fc/age"), gender: r("fc/gender") } }; return nf(n, t), { params: u, paramMappings: t } } function sfi(n) { var t = [], i = lpt(n, t).extractDenseBlock3Params, r = { dense0: i("dense0", !0), dense1: i("dense1"), dense2: i("dense2") }; return nf(n, t), { params: r, paramMappings: t } } function hfi(n) { var i = [], r = tf(n), f = r.extractWeights, u = r.getRemainingWeights, t = hpt(f, i).extractDenseBlock3Params, e = t(3, 32, "dense0", !0), o = t(32, 64, "dense1"), s = t(64, 128, "dense2"); if (u().length !== 0) throw new Error("weights remaing after extract: " + u().length); return { paramMappings: i, params: { dense0: e, dense1: o, dense2: s } } } function afi(n, t) { return nt(si(n, t.weights), t.biases) } function sg(n, t, i, r, u) { u === void 0 && (u = "same"); var e = t.conv, o = e.filters, s = e.bias, f = ur(n, o, i, u); return f = nt(f, s), f = afi(f, t.scale), r ? ct(f) : f } function vfi(n, t) { return sg(n, t, [1, 1], !0) } function twt(n, t) { return sg(n, t, [1, 1], !1) } function iwt(n, t) { return sg(n, t, [2, 2], !0, "valid") } function yfi(n, t) { function r(t, i, r) { var u = n(t), f = u.length / (i * r * r); if (cyt(f)) throw new Error("depth has to be an integer: " + f + ", weights.length: " + u.length + ", numFilters: " + i + ", filterSize: " + r); return c(function () { return yu(yi(u, [i, f, r, r]), [2, 3, 1, 0]) }) } function u(i, u, f, e) { var o = r(i, u, f), s = vt(n(u)); return t.push({ paramPath: e + "/filters" }, { paramPath: e + "/bias" }), { filters: o, bias: s } } function f(i, r) { var u = vt(n(i)), f = vt(n(i)); return t.push({ paramPath: r + "/weights" }, { paramPath: r + "/biases" }), { weights: u, biases: f } } function i(n, t, i, r) { var e = u(n, t, i, r + "/conv"), o = f(t, r + "/scale"); return { conv: e, scale: o } } function e(n, t, r, u, f) { f === void 0 && (f = !1); var e = i((f ? .5 : 1) * n, t, r, u + "/conv1"), o = i(n, t, r, u + "/conv2"); return { conv1: e, conv2: o } } return { extractConvLayerParams: i, extractResidualLayerParams: e } } function pfi(n) { var r = tf(n), u = r.extractWeights, f = r.getRemainingWeights, i = [], e = yfi(u, i), s = e.extractConvLayerParams, t = e.extractResidualLayerParams, h = s(4704, 32, 7, "conv32_down"), l = t(9216, 32, 3, "conv32_1"), a = t(9216, 32, 3, "conv32_2"), v = t(9216, 32, 3, "conv32_3"), y = t(36864, 64, 3, "conv64_down", !0), p = t(36864, 64, 3, "conv64_1"), w = t(36864, 64, 3, "conv64_2"), b = t(36864, 64, 3, "conv64_3"), k = t(147456, 128, 3, "conv128_down", !0), d = t(147456, 128, 3, "conv128_1"), g = t(147456, 128, 3, "conv128_2"), nt = t(589824, 256, 3, "conv256_down", !0), tt = t(589824, 256, 3, "conv256_1"), it = t(589824, 256, 3, "conv256_2"), rt = t(589824, 256, 3, "conv256_down_out"), ut = c(function () { return yu(lu(u(32768), [128, 256]), [1, 0]) }), o; if (i.push({ paramPath: "fc" }), f().length !== 0) throw new Error("weights remaing after extract: " + f().length); return o = { conv32_down: h, conv32_1: l, conv32_2: a, conv32_3: v, conv64_down: y, conv64_1: p, conv64_2: w, conv64_3: b, conv128_down: k, conv128_1: d, conv128_2: g, conv256_down: nt, conv256_1: tt, conv256_2: it, conv256_down_out: rt, fc: ut }, { params: o, paramMappings: i } } function wfi(n, t) { function u(n) { var t = i(n + "/scale/weights", 1), r = i(n + "/scale/biases", 1); return { weights: t, biases: r } } function r(n) { var t = i(n + "/conv/filters", 4), r = i(n + "/conv/bias", 1), f = u(n); return { conv: { filters: t, bias: r }, scale: f } } function f(n) { return { conv1: r(n + "/conv1"), conv2: r(n + "/conv2") } } var i = df(n, t); return { extractConvLayerParams: r, extractResidualLayerParams: f } } function bfi(n) { var i = [], u = wfi(n, i), e = u.extractConvLayerParams, t = u.extractResidualLayerParams, o = e("conv32_down"), s = t("conv32_1"), h = t("conv32_2"), c = t("conv32_3"), l = t("conv64_down"), a = t("conv64_1"), v = t("conv64_2"), y = t("conv64_3"), p = t("conv128_down"), w = t("conv128_1"), b = t("conv128_2"), k = t("conv256_down"), d = t("conv256_1"), g = t("conv256_2"), nt = t("conv256_down_out"), r = n.fc, f; if (i.push({ originalPath: "fc", paramPath: "fc" }), !hyt(r)) throw new Error("expected weightMap[fc] to be a Tensor2D, instead have " + r); return f = { conv32_down: o, conv32_1: s, conv32_2: h, conv32_3: c, conv64_down: l, conv64_1: a, conv64_2: v, conv64_3: y, conv128_down: p, conv128_1: w, conv128_2: b, conv256_down: k, conv256_1: d, conv256_2: g, conv256_down_out: nt, fc: r }, nf(n, i), { params: f, paramMappings: i } } function ou(n, t) { var i = vfi(n, t.conv1); return i = twt(i, t.conv2), i = nt(i, n), ct(i) } function kv(n, t) { var i = iwt(n, t.conv1), u, e, f, o; i = twt(i, t.conv2); var r = so(n, 2, 2, "valid"), s = ot(r.shape), h = r.shape[3] !== i.shape[3], c = r.shape[1] !== i.shape[1] || r.shape[2] !== i.shape[2]; return c && (u = wh(i.shape), u[1] = 1, e = ot(u), i = wt([i, e], 1), f = wh(i.shape), f[2] = 1, o = ot(f), i = wt([i, o], 2)), r = h ? wt([r, s], 3) : r, i = nt(r, i), ct(i) } function kfi(n) { var t = new dv; return t.extractWeights(n), t } function hg(n, t) { var i = { descriptor: t }; return Object.assign({}, n, i) } function dfi(n) { return typeof n.age == "number" } function cg(n, t) { var i = { age: t }; return Object.assign({}, n, i) } function gfi(t) { return (t.gender === n.Gender.MALE || t.gender === n.Gender.FEMALE) && fv(t.genderProbability) } function lg(n, t, i) { var r = { gender: t, genderProbability: i }; return Object.assign({}, n, r) } function nei(n, t) { function f(i, r) { var u = yi(n(9 * i), [3, 3, i, 1]), f = vt(n(i)), e = vt(n(i)), o = vt(n(i)), s = vt(n(i)); return t.push({ paramPath: r + "/filters" }, { paramPath: r + "/batch_norm_scale" }, { paramPath: r + "/batch_norm_offset" }, { paramPath: r + "/batch_norm_mean" }, { paramPath: r + "/batch_norm_variance" }), { filters: u, batch_norm_scale: f, batch_norm_offset: e, batch_norm_mean: o, batch_norm_variance: s } } function i(i, r, u, f, e) { var o = yi(n(i * r * u * u), [u, u, i, r]), s = vt(n(r)); return t.push({ paramPath: f + "/filters" }, { paramPath: f + "/" + (e ? "batch_norm_offset" : "bias") }), { filters: o, bias: s } } function u(n, t, r, u) { var f = i(n, t, r, u, !0), e = f.filters, o = f.bias; return { filters: e, batch_norm_offset: o } } function r(n, t, i) { var r = f(n, i + "/depthwise_conv"), e = u(n, t, 1, i + "/pointwise_conv"); return { depthwise_conv: r, pointwise_conv: e } } function e() { var n = u(3, 32, 3, "mobilenetv1/conv_0"), t = r(32, 64, "mobilenetv1/conv_1"), i = r(64, 128, "mobilenetv1/conv_2"), f = r(128, 128, "mobilenetv1/conv_3"), e = r(128, 256, "mobilenetv1/conv_4"), o = r(256, 256, "mobilenetv1/conv_5"), s = r(256, 512, "mobilenetv1/conv_6"), h = r(512, 512, "mobilenetv1/conv_7"), c = r(512, 512, "mobilenetv1/conv_8"), l = r(512, 512, "mobilenetv1/conv_9"), a = r(512, 512, "mobilenetv1/conv_10"), v = r(512, 512, "mobilenetv1/conv_11"), y = r(512, 1024, "mobilenetv1/conv_12"), p = r(1024, 1024, "mobilenetv1/conv_13"); return { conv_0: n, conv_1: t, conv_2: i, conv_3: f, conv_4: e, conv_5: o, conv_6: s, conv_7: h, conv_8: c, conv_9: l, conv_10: a, conv_11: v, conv_12: y, conv_13: p } } function o() { var n = u(1024, 256, 1, "prediction_layer/conv_0"), t = u(256, 512, 3, "prediction_layer/conv_1"), r = u(512, 128, 1, "prediction_layer/conv_2"), f = u(128, 256, 3, "prediction_layer/conv_3"), e = u(256, 128, 1, "prediction_layer/conv_4"), o = u(128, 256, 3, "prediction_layer/conv_5"), s = u(256, 64, 1, "prediction_layer/conv_6"), h = u(64, 128, 3, "prediction_layer/conv_7"), c = i(512, 12, 1, "prediction_layer/box_predictor_0/box_encoding_predictor"), l = i(512, 9, 1, "prediction_layer/box_predictor_0/class_predictor"), a = i(1024, 24, 1, "prediction_layer/box_predictor_1/box_encoding_predictor"), v = i(1024, 18, 1, "prediction_layer/box_predictor_1/class_predictor"), y = i(512, 24, 1, "prediction_layer/box_predictor_2/box_encoding_predictor"), p = i(512, 18, 1, "prediction_layer/box_predictor_2/class_predictor"), w = i(256, 24, 1, "prediction_layer/box_predictor_3/box_encoding_predictor"), b = i(256, 18, 1, "prediction_layer/box_predictor_3/class_predictor"), k = i(256, 24, 1, "prediction_layer/box_predictor_4/box_encoding_predictor"), d = i(256, 18, 1, "prediction_layer/box_predictor_4/class_predictor"), g = i(128, 24, 1, "prediction_layer/box_predictor_5/box_encoding_predictor"), nt = i(128, 18, 1, "prediction_layer/box_predictor_5/class_predictor"), tt = { box_encoding_predictor: c, class_predictor: l }, it = { box_encoding_predictor: a, class_predictor: v }, rt = { box_encoding_predictor: y, class_predictor: p }, ut = { box_encoding_predictor: w, class_predictor: b }, ft = { box_encoding_predictor: k, class_predictor: d }, et = { box_encoding_predictor: g, class_predictor: nt }; return { conv_0: n, conv_1: t, conv_2: r, conv_3: f, conv_4: e, conv_5: o, conv_6: s, conv_7: h, box_predictor_0: tt, box_predictor_1: it, box_predictor_2: rt, box_predictor_3: ut, box_predictor_4: ft, box_predictor_5: et } } return { extractMobilenetV1Params: e, extractPredictionLayerParams: o } } function tei(n) { var t = [], i = tf(n), r = i.extractWeights, u = i.getRemainingWeights, f = nei(r, t), e = f.extractMobilenetV1Params, o = f.extractPredictionLayerParams, s = e(), h = o(), c = gc(r(20472), [1, 5118, 4]), l = { extra_dim: c }; if (t.push({ paramPath: "output_layer/extra_dim" }), u().length !== 0) throw new Error("weights remaing after extract: " + u().length); return { params: { mobilenetv1: s, prediction_layer: h, output_layer: l }, paramMappings: t } } function iei(n, t) { function r(n, t, i) { var r = u(n + "/Conv2d_" + t + "_pointwise/weights", 4, i + "/filters"), f = u(n + "/Conv2d_" + t + "_pointwise/convolution_bn_offset", 1, i + "/batch_norm_offset"); return { filters: r, batch_norm_offset: f } } function i(n) { var f = "mobilenetv1/conv_" + n, t = "MobilenetV1/Conv2d_" + n + "_depthwise", i = f + "/depthwise_conv", e = f + "/pointwise_conv", o = u(t + "/depthwise_weights", 4, i + "/filters"), s = u(t + "/BatchNorm/gamma", 1, i + "/batch_norm_scale"), h = u(t + "/BatchNorm/beta", 1, i + "/batch_norm_offset"), c = u(t + "/BatchNorm/moving_mean", 1, i + "/batch_norm_mean"), l = u(t + "/BatchNorm/moving_variance", 1, i + "/batch_norm_variance"); return { depthwise_conv: { filters: o, batch_norm_scale: s, batch_norm_offset: h, batch_norm_mean: c, batch_norm_variance: l }, pointwise_conv: r("MobilenetV1", n, e) } } function o() { return { conv_0: r("MobilenetV1", 0, "mobilenetv1/conv_0"), conv_1: i(1), conv_2: i(2), conv_3: i(3), conv_4: i(4), conv_5: i(5), conv_6: i(6), conv_7: i(7), conv_8: i(8), conv_9: i(9), conv_10: i(10), conv_11: i(11), conv_12: i(12), conv_13: i(13) } } function e(n, t) { var i = u(n + "/weights", 4, t + "/filters"), r = u(n + "/biases", 1, t + "/bias"); return { filters: i, bias: r } } function f(n) { var t = e("Prediction/BoxPredictor_" + n + "/BoxEncodingPredictor", "prediction_layer/box_predictor_" + n + "/box_encoding_predictor"), i = e("Prediction/BoxPredictor_" + n + "/ClassPredictor", "prediction_layer/box_predictor_" + n + "/class_predictor"); return { box_encoding_predictor: t, class_predictor: i } } function s() { return { conv_0: r("Prediction", 0, "prediction_layer/conv_0"), conv_1: r("Prediction", 1, "prediction_layer/conv_1"), conv_2: r("Prediction", 2, "prediction_layer/conv_2"), conv_3: r("Prediction", 3, "prediction_layer/conv_3"), conv_4: r("Prediction", 4, "prediction_layer/conv_4"), conv_5: r("Prediction", 5, "prediction_layer/conv_5"), conv_6: r("Prediction", 6, "prediction_layer/conv_6"), conv_7: r("Prediction", 7, "prediction_layer/conv_7"), box_predictor_0: f(0), box_predictor_1: f(1), box_predictor_2: f(2), box_predictor_3: f(3), box_predictor_4: f(4), box_predictor_5: f(5) } } var u = df(n, t); return { extractMobilenetV1Params: o, extractPredictionLayerParams: s } } function rei(n) { var t = [], r = iei(n, t), f = r.extractMobilenetV1Params, e = r.extractPredictionLayerParams, i = n["Output/extra_dim"], u; if (t.push({ originalPath: "Output/extra_dim", paramPath: "output_layer/extra_dim" }), !bh(i)) throw new Error("expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have " + i); return u = { mobilenetv1: f(), prediction_layer: e(), output_layer: { extra_dim: i } }, nf(n, t), { params: u, paramMappings: t } } function su(n, t, i) { return c(function () { var r = ur(n, t.filters, i, "same"); return r = nt(r, t.batch_norm_offset), bl(r, 0, 6) }) } function uei(n, t, i) { return c(function () { var r = hh(n, t.filters, i, "same"); return r = eb(r, t.batch_norm_mean, t.batch_norm_variance, t.batch_norm_offset, t.batch_norm_scale, rwt), bl(r, 0, 6) }) } function fei(n) { return [2, 4, 6, 12].some(function (t) { return t === n }) ? [2, 2] : [1, 1] } function eei(n, t) { return c(function () { var r = null, i = su(n, t.conv_0, [2, 2]), u = [t.conv_1, t.conv_2, t.conv_3, t.conv_4, t.conv_5, t.conv_6, t.conv_7, t.conv_8, t.conv_9, t.conv_10, t.conv_11, t.conv_12, t.conv_13]; if (u.forEach(function (n, t) { var u = t + 1, f = fei(u); i = uei(i, n.depthwise_conv, f); i = su(i, n.pointwise_conv, [1, 1]); u === 11 && (r = i) }), r === null) throw new Error("mobileNetV1 - output of conv layer 11 is null"); return { out: i, conv11: r } }) } function oei(n, t, i, r, u) { var e = n.shape[0], o = Math.min(i, e), s = t.map(function (n, t) { return { score: n, boxIndex: t } }).filter(function (n) { return n.score > u }).sort(function (n, t) { return t.score - n.score }), h = function (n) { return n <= r ? 1 : 0 }, f = []; return s.forEach(function (t) { var e, i, r; if (!(f.length >= o)) { for (e = t.score, i = f.length - 1; i >= 0; --i)if ((r = sei(n, t.boxIndex, f[i]), r !== 0) && (t.score *= h(r), t.score <= u)) break; e === t.score && f.push(t.boxIndex) } }), f } function sei(n, t, i) { var r = n.arraySync(), u = Math.min(r[t][0], r[t][2]), f = Math.min(r[t][1], r[t][3]), e = Math.max(r[t][0], r[t][2]), o = Math.max(r[t][1], r[t][3]), s = Math.min(r[i][0], r[i][2]), h = Math.min(r[i][1], r[i][3]), c = Math.max(r[i][0], r[i][2]), l = Math.max(r[i][1], r[i][3]), a = (e - u) * (o - f), v = (c - s) * (l - h); if (a <= 0 || v <= 0) return 0; var p = Math.max(u, s), w = Math.max(f, h), b = Math.min(e, c), k = Math.min(o, l), y = Math.max(b - p, 0) * Math.max(k - w, 0); return y / (a + v - y) } function hei(n) { var t = bt(yu(n, [1, 0])), i = [dt(t[2], t[0]), dt(t[3], t[1])], r = [nt(t[0], sr(i[0], h(2))), nt(t[1], sr(i[1], h(2)))]; return { sizes: i, centers: r } } function cei(n, t) { var u = hei(n), i = u.sizes, f = u.centers, r = bt(yu(t, [1, 0])), e = sr(si(kl(sr(r[2], h(5))), i[0]), h(2)), o = nt(si(sr(r[0], h(10)), i[0]), f[0]), s = sr(si(kl(sr(r[3], h(5))), i[1]), h(2)), c = nt(si(sr(r[1], h(10)), i[1]), f[1]); return yu(bi([dt(o, e), dt(c, s), nt(o, e), nt(c, s)]), [1, 0]) } function lei(n, t, i) { return c(function () { var u = n.shape[0], f = cei(or(se(i.extra_dim, [u, 1, 1]), [-1, 4]), or(n, [-1, 4])), e, r, o, s; return f = or(f, [u, f.shape[0] / u, 4]), e = fb(br(t, [0, 0, 1], [-1, -1, -1])), r = br(e, [0, 0, 0], [-1, -1, 1]), r = or(r, [u, r.shape[1]]), o = bt(f), s = bt(r), { boxes: o, scores: s } }) } function ns(n, t) { return c(function () { var i = n.shape[0], r = or(nu(n, t.box_encoding_predictor), [i, -1, 1, 4]), u = or(nu(n, t.class_predictor), [i, -1, 3]); return { boxPredictionEncoding: r, classPrediction: u } }) } function aei(n, t, i) { return c(function () { var a = su(n, i.conv_0, [1, 1]), r = su(a, i.conv_1, [2, 2]), v = su(r, i.conv_2, [1, 1]), u = su(v, i.conv_3, [2, 2]), y = su(u, i.conv_4, [1, 1]), f = su(y, i.conv_5, [2, 2]), p = su(f, i.conv_6, [1, 1]), w = su(p, i.conv_7, [2, 2]), e = ns(t, i.box_predictor_0), o = ns(n, i.box_predictor_1), s = ns(r, i.box_predictor_2), h = ns(u, i.box_predictor_3), c = ns(f, i.box_predictor_4), l = ns(w, i.box_predictor_5), b = wt([e.boxPredictionEncoding, o.boxPredictionEncoding, s.boxPredictionEncoding, h.boxPredictionEncoding, c.boxPredictionEncoding, l.boxPredictionEncoding], 1), k = wt([e.classPrediction, o.classPrediction, s.classPrediction, h.classPrediction, c.classPrediction, l.classPrediction], 1); return { boxPredictions: b, classPredictions: k } }) } function uwt(n) { var t = new ic; return t.extractWeights(n), t } function vei(n) { return uwt(n) } function fwt(n) { if (!n) throw new Error("invalid config: " + n); if (typeof n.withSeparableConvs != "boolean") throw new Error("config.withSeparableConvs has to be a boolean, have: " + n.withSeparableConvs); if (!gv(n.iouThreshold) || n.iouThreshold < 0 || n.iouThreshold > 1) throw new Error("config.iouThreshold has to be a number between [0, 1], have: " + n.iouThreshold); if (!Array.isArray(n.classes) || !n.classes.length || !n.classes.every(function (n) { return typeof n == "string" })) throw new Error("config.classes has to be an array class names: string[], have: " + JSON.stringify(n.classes)); if (!Array.isArray(n.anchors) || !n.anchors.length || !n.anchors.map(function (n) { return n || {} }).every(function (n) { return gv(n.x) && gv(n.y) })) throw new Error("config.anchors has to be an array of { x: number, y: number }, have: " + JSON.stringify(n.anchors)); if (n.meanRgb && (!Array.isArray(n.meanRgb) || n.meanRgb.length !== 3 || !n.meanRgb.every(gv))) throw new Error("config.meanRgb has to be an array of shape [number, number, number], have: " + JSON.stringify(n.meanRgb)); } function ag(n) { return c(function () { var t = si(n, h(.10000000149011612)); return nt(ct(dt(n, t)), t) }) } function ne(n, t) { return c(function () { var i = cf(n, [[0, 0], [1, 1], [1, 1], [0, 0]]); return i = ur(i, t.conv.filters, [1, 1], "valid"), i = dt(i, t.bn.sub), i = si(i, t.bn.truediv), i = nt(i, t.conv.bias), ag(i) }) } function te(n, t) { return c(function () { var i = cf(n, [[0, 0], [1, 1], [1, 1], [0, 0]]); return i = ia(i, t.depthwise_filter, t.pointwise_filter, [1, 1], "valid"), i = nt(i, t.bias), ag(i) }) } function noi(n, t) { function r(i, r) { var u = vt(n(i)), f = vt(n(i)); return t.push({ paramPath: r + "/sub" }, { paramPath: r + "/truediv" }), { sub: u, truediv: f } } function u(n, t, u) { var f = i(n, t, 3, u + "/conv"), e = r(t, u + "/bn"); return { conv: f, bn: e } } var i = pv(n, t), f = gd(n, t); return { extractConvParams: i, extractConvWithBatchNormParams: u, extractSeparableConvParams: f } } function toi(n, t, i, r) { var k = tf(n), ht = k.extractWeights, d = k.getRemainingWeights, g = [], y = noi(ht, g), p = y.extractConvParams, u = y.extractConvWithBatchNormParams, f = y.extractSeparableConvParams, w; if (t.withSeparableConvs) { var b = r[0], o = r[1], c = r[2], l = r[3], a = r[4], v = r[5], s = r[6], e = r[7], h = r[8], nt = t.isFirstLayerConv2d ? p(b, o, 3, "conv0") : f(b, o, "conv0"), tt = f(o, c, "conv1"), it = f(c, l, "conv2"), rt = f(l, a, "conv3"), ut = f(a, v, "conv4"), ft = f(v, s, "conv5"), et = e ? f(s, e, "conv6") : undefined, ot = h ? f(e, h, "conv7") : undefined, st = p(h || e || s, 5 * i, 1, "conv8"); w = { conv0: nt, conv1: tt, conv2: it, conv3: rt, conv4: ut, conv5: ft, conv6: et, conv7: ot, conv8: st } } else { var b = r[0], o = r[1], c = r[2], l = r[3], a = r[4], v = r[5], s = r[6], e = r[7], h = r[8], nt = u(b, o, "conv0"), tt = u(o, c, "conv1"), it = u(c, l, "conv2"), rt = u(l, a, "conv3"), ut = u(a, v, "conv4"), ft = u(v, s, "conv5"), et = u(s, e, "conv6"), ot = u(e, h, "conv7"), st = p(h, 5 * i, 1, "conv8"); w = { conv0: nt, conv1: tt, conv2: it, conv3: rt, conv4: ut, conv5: ft, conv6: et, conv7: ot, conv8: st } } if (d().length !== 0) throw new Error("weights remaing after extract: " + d().length); return { params: w, paramMappings: g } } function ioi(n, t) { function u(n) { var t = i(n + "/sub", 1), r = i(n + "/truediv", 1); return { sub: t, truediv: r } } function r(n) { var t = i(n + "/filters", 4), r = i(n + "/bias", 1); return { filters: t, bias: r } } function f(n) { var t = r(n + "/conv"), i = u(n + "/bn"); return { conv: t, bn: i } } var i = df(n, t), e = ng(i); return { extractConvParams: r, extractConvWithBatchNormParams: f, extractSeparableConvParams: e } } function roi(n, t) { var u = [], f = ioi(n, u), e = f.extractConvParams, i = f.extractConvWithBatchNormParams, r = f.extractSeparableConvParams, o, s; return t.withSeparableConvs ? (s = t.filterSizes && t.filterSizes.length || 9, o = { conv0: t.isFirstLayerConv2d ? e("conv0") : r("conv0"), conv1: r("conv1"), conv2: r("conv2"), conv3: r("conv3"), conv4: r("conv4"), conv5: r("conv5"), conv6: s > 7 ? r("conv6") : undefined, conv7: s > 8 ? r("conv7") : undefined, conv8: e("conv8") }) : o = { conv0: i("conv0"), conv1: i("conv1"), conv2: i("conv2"), conv3: i("conv3"), conv4: i("conv4"), conv5: i("conv5"), conv6: i("conv6"), conv7: i("conv7"), conv8: e("conv8") }, nf(n, u), { params: o, paramMappings: u } } function uoi(n, t) { t === void 0 && (t = !0); var i = new vg(t); return i.extractWeights(n), i } function ny(n, t, i, r, u) { return u === void 0 && (u = function (n) { return n.alignedRect }), a(this, void 0, void 0, function () { var e, o, f, s, h; return v(this, function (c) { switch (c.label) { case 0: return (e = n.map(function (n) { return bv(n) ? u(n) : n.detection }), f = r, f) ? [3, 5] : (t instanceof et) ? [4, av(t, e)] : [3, 2]; case 1: return s = c.sent(), [3, 4]; case 2: return [4, lv(t, e)]; case 3: s = c.sent(); c.label = 4; case 4: f = s; c.label = 5; case 5: return o = f, [4, i(o)]; case 6: return h = c.sent(), o.forEach(function (n) { return n instanceof et && n.dispose() }), [2, h] } }) }) } function pg(n, t, i, r, u) { return a(this, void 0, void 0, function () { var f = this; return v(this, function () { return [2, ny([n], t, function (n) { return a(f, void 0, void 0, function () { return v(this, function () { return [2, i(n[0])] }) }) }, r, u)] }) }) } function foi(n) { return c(function () { return bi(bt(n, 3).reverse(), 3) }) } function eoi(n, t) { function u(i, r) { var u = vt(n(i)); return t.push({ paramPath: r }), u } function f(n, t, i) { i === void 0 && (i = !1); var f = r(n[0], n[1], 3, t + "/conv1"), e = u(n[1], t + "/prelu1_alpha"), o = r(n[1], n[2], 3, t + "/conv2"), s = u(n[2], t + "/prelu2_alpha"), h = r(n[2], n[3], i ? 2 : 3, t + "/conv3"), c = u(n[3], t + "/prelu3_alpha"); return { conv1: f, prelu1_alpha: e, conv2: o, prelu2_alpha: s, conv3: h, prelu3_alpha: c } } function e() { var n = f([3, 10, 16, 32], "pnet"), t = r(32, 2, 1, "pnet/conv4_1"), i = r(32, 4, 1, "pnet/conv4_2"); return ci(ci({}, n), { conv4_1: t, conv4_2: i }) } function o() { var n = f([3, 28, 48, 64], "rnet", !0), t = i(576, 128, "rnet/fc1"), r = u(128, "rnet/prelu4_alpha"), e = i(128, 2, "rnet/fc2_1"), o = i(128, 4, "rnet/fc2_2"); return ci(ci({}, n), { fc1: t, prelu4_alpha: r, fc2_1: e, fc2_2: o }) } function s() { var n = f([3, 32, 64, 64], "onet"), t = r(64, 128, 2, "onet/conv4"), e = u(128, "onet/prelu4_alpha"), o = i(1152, 256, "onet/fc1"), s = u(256, "onet/prelu5_alpha"), h = i(256, 2, "onet/fc2_1"), c = i(256, 4, "onet/fc2_2"), l = i(256, 10, "onet/fc2_3"); return ci(ci({}, n), { conv4: t, prelu4_alpha: e, fc1: o, prelu5_alpha: s, fc2_1: h, fc2_2: c, fc2_3: l }) } var r = pv(n, t), i = kd(n, t); return { extractPNetParams: e, extractRNetParams: o, extractONetParams: s } } function ooi(n) { var i = tf(n), f = i.extractWeights, r = i.getRemainingWeights, u = [], t = eoi(f, u), e = t.extractPNetParams, o = t.extractRNetParams, s = t.extractONetParams, h = e(), c = o(), l = s(); if (r().length !== 0) throw new Error("weights remaing after extract: " + r().length); return { params: { pnet: h, rnet: c, onet: l }, paramMappings: u } } function soi(n, t) { function r(n) { var t = f(n + "/weights", 4, n + "/filters"), i = f(n + "/bias", 1); return { filters: t, bias: i } } function i(n) { var t = f(n + "/weights", 2), i = f(n + "/bias", 1); return { weights: t, bias: i } } function u(n) { return f(n, 1) } function e(n) { var t = r(n + "/conv1"), i = u(n + "/prelu1_alpha"), f = r(n + "/conv2"), e = u(n + "/prelu2_alpha"), o = r(n + "/conv3"), s = u(n + "/prelu3_alpha"); return { conv1: t, prelu1_alpha: i, conv2: f, prelu2_alpha: e, conv3: o, prelu3_alpha: s } } function o() { var n = e("pnet"), t = r("pnet/conv4_1"), i = r("pnet/conv4_2"); return ci(ci({}, n), { conv4_1: t, conv4_2: i }) } function s() { var n = e("rnet"), t = i("rnet/fc1"), r = u("rnet/prelu4_alpha"), f = i("rnet/fc2_1"), o = i("rnet/fc2_2"); return ci(ci({}, n), { fc1: t, prelu4_alpha: r, fc2_1: f, fc2_2: o }) } function h() { var n = e("onet"), t = r("onet/conv4"), f = u("onet/prelu4_alpha"), o = i("onet/fc1"), s = u("onet/prelu5_alpha"), h = i("onet/fc2_1"), c = i("onet/fc2_2"), l = i("onet/fc2_3"); return ci(ci({}, n), { conv4: t, prelu4_alpha: f, fc1: o, prelu5_alpha: s, fc2_1: h, fc2_2: c, fc2_3: l }) } var f = df(n, t); return { extractPNetParams: o, extractRNetParams: s, extractONetParams: h } } function hoi(n) { var t = [], i = soi(n, t), r = i.extractPNetParams, u = i.extractRNetParams, f = i.extractONetParams, e = r(), o = u(), s = f(); return nf(n, t), { params: { pnet: e, rnet: o, onet: s }, paramMappings: t } } function wg(n, t) { var i = t[0], r = t[1]; return { height: Math.floor(i * n), width: Math.floor(r * n) } } function coi(n, t, i) { for (var o = i[0], s = i[1], u = fc / n, f = [], r = Math.min(o, s) * u, e = 0; r >= 12;)f.push(u * Math.pow(t, e)), r = r * t, e += 1; return f } function owt(n) { return c(function () { return si(dt(n, h(127.5)), h(.0078125)) }) } function ts(n, t) { return c(function () { return nt(ct(n), si(t, fh(ct(fh(n))))) }) } function bg(n, t, i) { return i === void 0 && (i = !1), c(function () { var r = nu(n, t.conv1, "valid"); return r = ts(r, t.prelu1_alpha), r = gt(r, i ? [2, 2] : [3, 3], [2, 2], "same"), r = nu(r, t.conv2, "valid"), r = ts(r, t.prelu2_alpha), r = i ? r : gt(r, [3, 3], [2, 2], "valid"), r = nu(r, t.conv3, "valid"), ts(r, t.prelu3_alpha) }) } function loi(n, t) { return c(function () { var i = bg(n, t, !0), r = nu(i, t.conv4_1, "valid"), u = rr(lh(r, 3), 3), f = fu(dt(r, u), 3), e = nu(i, t.conv4_2, "valid"); return { prob: f, regions: e } }) } function aoi(n, t) { return c(function () { var i = wg(t, n.shape.slice(1)), r = i.height, u = i.width, f = sa.resizeBilinear(n, [r, u]), e = owt(f); return yu(e, [0, 2, 1, 3]) }) } function voi(n, t, i, r) { for (var u, e = [], o = n.arraySync(), f = 0; f < n.shape[0]; f++)for (u = 0; u < n.shape[1]; u++)o[f][u] >= r && e.push(new ut(u, f)); return e.map(function (n) { var u = new kh(Math.round((n.y * uc + 1) / i), Math.round((n.x * uc + 1) / i), Math.round((n.y * uc + fc) / i), Math.round((n.x * uc + fc) / i)), f = o[n.y][n.x], r = t.arraySync(), e = new ty(r[n.y][n.x][0], r[n.y][n.x][1], r[n.y][n.x][2], r[n.y][n.x][3]); return { cell: u, score: f, region: e } }) } function yoi(n, t, i, r, u) { var h, e; u.stage1 = []; var l = t.map(function (t) { return c(function () { var i = { scale: t }, o = aoi(n, t), s = Date.now(), u = loi(o, r), h = u.prob, c = u.regions, f, e; return i.pnet = Date.now() - s, f = bt(bt(h, 3)[1])[0], e = bt(c)[0], { scoresTensor: f, regionsTensor: e, scale: t, statsForScale: i } }) }), a = l.map(function (n) { var e = n.scoresTensor, o = n.regionsTensor, h = n.scale, t = n.statsForScale, r = voi(e, o, h, i), s, f; return (e.dispose(), o.dispose(), !r.length) ? (u.stage1.push(t), []) : (s = Date.now(), f = po(r.map(function (n) { return n.cell }), r.map(function (n) { return n.score }), .5), t.nms = Date.now() - s, t.numBoxes = f.length, u.stage1.push(t), f.map(function (n) { return r[n] })) }), f = a.reduce(function (n, t) { return n.concat(t) }, []), o = [], s = []; return f.length > 0 && (h = Date.now(), e = po(f.map(function (n) { return n.cell }), f.map(function (n) { return n.score }), .7), u.stage1_nms = Date.now() - h, s = e.map(function (n) { return f[n].score }), o = e.map(function (n) { return f[n] }).map(function (n) { var t = n.cell, i = n.region; return new kh(t.left + i.left * t.width, t.top + i.top * t.height, t.right + i.right * t.width, t.bottom + i.bottom * t.height).toSquare().round() })), { boxes: o, scores: s } } function swt(n, t, i) { var r = i.width, u = i.height; return a(this, void 0, void 0, function () { var f, e, i, o = this; return v(this, function (s) { switch (s.label) { case 0: return f = dr(n), [4, Promise.all(t.map(function (t) { return a(o, void 0, void 0, function () { var i, o, s, h, c, r, u, e; return v(this, function () { return i = t.padAtBorders(n.height, n.width), o = i.y, s = i.ey, h = i.x, c = i.ex, r = h - 1, u = o - 1, e = f.getImageData(r, u, c - r, s - u), [2, ti.isNodejs() ? cv(e) : createImageBitmap(e)] }) }) }))]; case 1: return e = s.sent(), i = [], e.forEach(function (n) { var s = gh({ width: r, height: u }), o = dr(s), f, e, t; for (o.drawImage(n, 0, 0, r, u), f = o.getImageData(0, 0, r, u).data, e = [], t = 0; t < f.length; t += 4)e.push(f[t + 2]), e.push(f[t + 1]), e.push(f[t]); i.push(e) }), [2, i.map(function (n) { return c(function () { var t = yu(yi(n, [1, r, u, 3]), [0, 2, 1, 3]).toFloat(); return owt(t) }) })] } }) }) } function poi(n, t) { return c(function () { var i = bg(n, t), f = or(i, [i.shape[0], t.fc1.weights.shape[0]]), e = eu(f, t.fc1), r = ts(e, t.prelu4_alpha), u = eu(r, t.fc2_1), o = rr(lh(u, 1), 1), s = fu(dt(u, o), 1), h = eu(r, t.fc2_2), c = bt(s, 1)[1]; return { scores: c, regions: h } }) } function woi(n, t, i, r, u) { return a(this, void 0, void 0, function () { var f, w, e, c, l, b, k, o, s, a, y, p, h, d; return v(this, function (v) { switch (v.label) { case 0: return f = Date.now(), [4, swt(n, t, { width: 24, height: 24 })]; case 1: return w = v.sent(), u.stage2_extractImagePatches = Date.now() - f, f = Date.now(), e = w.map(function (n) { var t = poi(n, r); return n.dispose(), t }), u.stage2_rnet = Date.now() - f, c = e.length > 1 ? wt(e.map(function (n) { return n.scores })) : e[0].scores, k = (b = Array).from, [4, c.data()]; case 2: return l = k.apply(b, [v.sent()]), c.dispose(), o = l.map(function (n, t) { return { score: n, idx: t } }).filter(function (n) { return n.score > i }).map(function (n) { return n.idx }), s = o.map(function (n) { return t[n] }), a = o.map(function (n) { return l[n] }), y = [], p = [], s.length > 0 && (f = Date.now(), h = po(s, a, .7), u.stage2_nms = Date.now() - f, d = h.map(function (n) { var t = e[o[n]].regions.arraySync(); return new ty(t[0][0], t[0][1], t[0][2], t[0][3]) }), p = h.map(function (n) { return a[n] }), y = h.map(function (n, t) { return s[n].calibrate(d[t]) })), e.forEach(function (n) { n.regions.dispose(); n.scores.dispose() }), [2, { boxes: y, scores: p }] } }) }) } function boi(n, t) { return c(function () { var i = bg(n, t); i = gt(i, [2, 2], [2, 2], "same"); i = nu(i, t.conv4, "valid"); i = ts(i, t.prelu4_alpha); var f = or(i, [i.shape[0], t.fc1.weights.shape[0]]), e = eu(f, t.fc1), r = ts(e, t.prelu5_alpha), u = eu(r, t.fc2_1), o = rr(lh(u, 1), 1), s = fu(dt(u, o), 1), h = eu(r, t.fc2_2), c = eu(r, t.fc2_3), l = bt(s, 1)[1]; return { scores: l, regions: h, points: c } }) } function koi(n, t, i, r, u) { return a(this, void 0, void 0, function () { var o, b, f, l, a, k, d, s, g, h, y, e, p, w, c; return v(this, function (v) { switch (v.label) { case 0: return o = Date.now(), [4, swt(n, t, { width: 48, height: 48 })]; case 1: return b = v.sent(), u.stage3_extractImagePatches = Date.now() - o, o = Date.now(), f = b.map(function (n) { var t = boi(n, r); return n.dispose(), t }), u.stage3_onet = Date.now() - o, l = f.length > 1 ? wt(f.map(function (n) { return n.scores })) : f[0].scores, d = (k = Array).from, [4, l.data()]; case 2: return a = d.apply(k, [v.sent()]), l.dispose(), s = a.map(function (n, t) { return { score: n, idx: t } }).filter(function (n) { return n.score > i }).map(function (n) { return n.idx }), g = s.map(function (n) { var t = f[n].regions.arraySync(); return new ty(t[0][0], t[0][1], t[0][2], t[0][3]) }), h = s.map(function (n, i) { return t[n].calibrate(g[i]) }), y = s.map(function (n) { return a[n] }), e = [], p = [], w = [], h.length > 0 && (o = Date.now(), c = po(h, y, .7, !1), u.stage3_nms = Date.now() - o, e = c.map(function (n) { return h[n] }), p = c.map(function (n) { return y[n] }), w = c.map(function (n, t) { return Array(5).fill(0).map(function (i, r) { var u = f[n].points.arraySync(); return new ut(u[0][r] * (e[t].width + 1) + e[t].left, u[0][r + 5] * (e[t].height + 1) + e[t].top) }) })), f.forEach(function (n) { n.regions.dispose(); n.scores.dispose(); n.points.dispose() }), [2, { boxes: e, scores: p, points: w }] } }) }) } function dsi(n, t) { return t === void 0 && (t = new gf), new wwt(n, t) } function uy(n, t) { return t === void 0 && (t = new gf), new ln(n, t) } function bwt(n, t) { return a(this, void 0, void 0, function () { return v(this, function (i) { switch (i.label) { case 0: return console.warn("allFacesSsdMobilenetv1 is deprecated and will be removed soon, use the high level api instead"), [4, uy(n, new gf(t ? { minConfidence: t } : {})).withFaceLandmarks().withFaceDescriptors()]; case 1: return [2, i.sent()] } }) }) } function gsi(n, t) { return t === void 0 && (t = {}), a(this, void 0, void 0, function () { return v(this, function (i) { switch (i.label) { case 0: return console.warn("allFacesTinyYolov2 is deprecated and will be removed soon, use the high level api instead"), [4, uy(n, new rc(t)).withFaceLandmarks().withFaceDescriptors()]; case 1: return [2, i.sent()] } }) }) } function nhi(n, t) { return t === void 0 && (t = {}), a(this, void 0, void 0, function () { return v(this, function (i) { switch (i.label) { case 0: return console.warn("allFacesMtcnn is deprecated and will be removed soon, use the high level api instead"), [4, uy(n, new tc(t)).withFaceLandmarks().withFaceDescriptors()]; case 1: return [2, i.sent()] } }) }) } function dwt(n, t) { if (n.length !== t.length) throw new Error("euclideanDistance: arr1.length !== arr2.length"); var i = Array.from(n), r = Array.from(t); return Math.sqrt(i.map(function (n, t) { return n - r[t] }).reduce(function (n, t) { return n + Math.pow(t, 2) }, 0)) } function thi(n) { var t = new kg; return t.extractWeights(n), t } function ihi(n) { var t = new dg; return t.extractWeights(n), t } function nbt(n, t) { var f = new ku(t.width, t.height), i = f.width, r = f.height, u, e; if (i <= 0 || r <= 0) throw new Error("resizeResults - invalid dimensions: " + JSON.stringify({ width: i, height: r })); return Array.isArray(n) ? n.map(function (n) { return nbt(n, { width: i, height: r }) }) : bv(n) ? (u = n.detection.forSize(i, r), e = n.unshiftedLandmarks.forSize(u.box.width, u.box.height), nc(ko(n, u), e)) : bo(n) ? ko(n, n.detection.forSize(i, r)) : n instanceof pe || n instanceof di ? n.forSize(i, r) : n } var an = function (n, t) { return (an = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (n, t) { n.__proto__ = t } || function (n, t) { for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i]) })(n, t) }, vn = function () { function n(n) { this.global = n; this.flags = {}; this.flagRegistry = {}; this.urlFlags = {}; this.populateURLFlags() } return n.prototype.setPlatform = function (n, t) { null != this.platform && console.warn("Platform " + this.platformName + " has already been set. Overwriting the platform with " + t + "."); this.platformName = n; this.platform = t }, n.prototype.registerFlag = function (n, t, i) { if (this.flagRegistry[n] = { evaluationFn: t, setHook: i }, null != this.urlFlags[n]) { var r = this.urlFlags[n]; console.warn("Setting feature override from URL " + n + ": " + r + "."); this.set(n, r) } }, n.prototype.get = function (n) { return n in this.flags ? this.flags[n] : (this.flags[n] = this.evaluateFlag(n), this.flags[n]) }, n.prototype.getNumber = function (n) { return this.get(n) }, n.prototype.getBool = function (n) { return this.get(n) }, n.prototype.getFlags = function () { return this.flags }, Object.defineProperty(n.prototype, "features", { get: function () { return this.flags }, enumerable: !0, configurable: !0 }), n.prototype.set = function (n, t) { if (null == this.flagRegistry[n]) throw new Error("Cannot set flag " + n + " as it has not been registered."); this.flags[n] = t; null != this.flagRegistry[n].setHook && this.flagRegistry[n].setHook(t) }, n.prototype.evaluateFlag = function (n) { if (null == this.flagRegistry[n]) throw new Error("Cannot evaluate flag '" + n + "': no evaluation function found."); return this.flagRegistry[n].evaluationFn() }, n.prototype.setFlags = function (n) { this.flags = Object.assign({}, n) }, n.prototype.reset = function () { this.flags = {}; this.urlFlags = {}; this.populateURLFlags() }, n.prototype.populateURLFlags = function () { var r = this, i, n, t; void 0 !== this.global && void 0 !== this.global.location && void 0 !== this.global.location.search && (t = (i = this.global.location.search, n = {}, i.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function () { for (var t = [], i = 1; i < arguments.length; i++)t[i - 1] = arguments[i]; return tbt(n, t[0], t[1]), t.join("=") }), n), "tfjsflags" in t && t.tfjsflags.split(",").forEach(function (n) { var t = n.split(":"), i = t[0], u = t[1]; r.urlFlags[i] = function (n, t) { if ("true" === (t = t.toLowerCase()) || "false" === t) return "true" === t; if ("" + +t === t) return +t; throw new Error("Could not parse value flag value " + t + " for flag " + n + "."); }(i, u) })) }, n }(), fy = null, be = new Map, is = new Map, ubt = Object.freeze({ shuffle: wn, clamp: ec, nearestLargerEven: cy, sum: bn, randUniform: function (n, t) { var i = Math.random(); return t * i + (1 - i) * n }, distSquared: function (n, t) { for (var u, r = 0, i = 0; i < n.length; i++)u = Number(n[i]) - Number(t[i]), r += u * u; return r }, assert: i, assertShapesMatch: rt, assertNonNull: ie, flatten: hu, sizeFromShape: w, isScalarShape: function (n) { return 0 === n.length }, arraysEqual: yt, isInt: lt, tanh: kn, sizeToSquarishShape: oc, createShuffledIndices: function (n) { for (var i = new Uint32Array(n), t = 0; t < n; ++t)i[t] = t; return wn(i), i }, rightPad: re, repeatedTry: ly, inferFromImplicitShape: dn, parseAxisParam: pt, squeezeShape: rf, getTypedArrayFromDType: ke, getArrayFromDType: rs, checkConversionForErrors: gn, isValidDtype: ntt, hasEncodingLoss: ttt, isTypedArray: ei, bytesPerElement: ay, bytesFromStringArray: itt, isString: uf, isBoolean: rtt, isNumber: utt, inferDtype: de, isFunction: ff, nearestDivisor: sc, computeStrides: cr, toTypedArray: vy, toNestedArray: yy, makeOnesTypedArray: py, makeZerosTypedArray: ge, now: lr, assertNonNegativeIntegerDimensions: wy, fetch: function (n, t) { return o().platform.fetch(n, t) }, encodeString: ftt, decodeString: us, locToIndex: by, indexToLoc: ett }), fbt = function () { function n(n, t) { this.backendTimer = n; this.logger = t; null == t && (this.logger = new ebt) } return n.prototype.profileKernel = function (n, t, i) { var r, u = this, f = this.backendTimer.time(function () { r = i() }); return r.forEach(function (i) { i.data().then(function (r) { !function (n, t, i) { var r, u; if ("float32" !== t) return !1; for (r = 0; r < n.length; r++)if (u = n[r], isNaN(u) || !isFinite(u)) return console.warn("Found " + u + " in the result of '" + i + "'"), !0 }(r, i.dtype, n); f.then(function (f) { var e = ""; null != f.getExtraProfileInfo && (e = f.getExtraProfileInfo()); u.logger.logKernelProfile(n, i, r, f.kernelMs, t, e) }) }) }), r }, n }(), ebt = function () { function n() { } return n.prototype.logKernelProfile = function (n, t, i, r, u, f) { var c = "number" == typeof r ? re(r + "ms", 9) : r.error, l = re(n, 25), a = t.rank, v = t.size, y = re(t.shape.toString(), 14), h = "", e, o, s; for (e in u) o = u[e].shape || t.shape, s = o.length, h += e + ": " + s + "D " + (s > 0 ? o : "") + " "; console.log("%c" + l + "\t%c" + c + "\t%c" + a + "D " + y + "\t%c" + v + "\t%c" + h + "\t%c" + f, "font-weight:bold", "color:red", "color:blue", "color: orange", "color: green", "color: steelblue") }, n }(), ott = 20, fs = 3, ky = 7, no = function () { function n(n, t, r) { var f = this, u; if ((this.dtype = t, this.shape = n.slice(), this.size = w(n), null != r) && (u = r.length, i(u === this.size, function () { return "Length of values '" + u + "' does not match the size inferred by the shape '" + f.size + "'." })), "complex64" === t) throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag)."); this.values = r || rs(t, this.size); this.strides = cr(n) } return n.prototype.set = function (n) { for (var u, f = this, t = [], r = 1; r < arguments.length; r++)t[r - 1] = arguments[r]; 0 === t.length && (t = [0]); i(t.length === this.rank, function () { return "The number of provided coordinates (" + t.length + ") must match the rank (" + f.rank + ")" }); u = this.locToIndex(t); this.values[u] = n }, n.prototype.get = function () { for (var u, s, f, i, n = [], t = 0; t < arguments.length; t++)n[t] = arguments[t]; 0 === n.length && (n = [0]); for (var e = 0, r = 0, o = n; r < o.length; r++) { if (u = o[r], u < 0 || u >= this.shape[e]) { s = "Requested out of range element at " + n + ".   Buffer shape=" + this.shape; throw new Error(s); } e++ } for (f = n[n.length - 1], i = 0; i < n.length - 1; ++i)f += this.strides[i] * n[i]; return this.values[f] }, n.prototype.locToIndex = function (n) { if (0 === this.rank) return 0; if (1 === this.rank) return n[0]; for (var i = n[n.length - 1], t = 0; t < n.length - 1; ++t)i += this.strides[t] * n[t]; return i }, n.prototype.indexToLoc = function (n) { if (0 === this.rank) return []; if (1 === this.rank) return [n]; for (var t = new Array(this.shape.length), i = 0; i < t.length - 1; ++i)t[i] = Math.floor(n / this.strides[i]), n -= t[i] * this.strides[i]; return t[t.length - 1] = n, t }, Object.defineProperty(n.prototype, "rank", { get: function () { return this.shape.length }, enumerable: !0, configurable: !0 }), n.prototype.toTensor = function () { return tu().makeTensor(this.values, this.shape, this.dtype) }, n }(), tu = null, e = null, htt = null, et = function () { function n(n, t, i, r) { this.kept = !1; this.isDisposedInternal = !1; this.shape = n.slice(); this.dtype = t || "float32"; this.size = w(n); this.strides = cr(n); this.dataId = i; this.id = r; this.rankType = this.rank < 5 ? this.rank.toString() : "higher" } return n.prototype.flatten = function () { return this.throwIfDisposed(), this.as1D() }, n.prototype.asScalar = function () { return this.throwIfDisposed(), i(1 === this.size, function () { return "The array must have only 1 element." }), this.reshape([]) }, n.prototype.as1D = function () { return this.throwIfDisposed(), this.reshape([this.size]) }, n.prototype.as2D = function (n, t) { return this.throwIfDisposed(), this.reshape([n, t]) }, n.prototype.as3D = function (n, t, i) { return this.throwIfDisposed(), this.reshape([n, t, i]) }, n.prototype.as4D = function (n, t, i, r) { return this.throwIfDisposed(), this.reshape([n, t, i, r]) }, n.prototype.as5D = function (n, t, i, r, u) { return this.throwIfDisposed(), this.reshape([n, t, i, r, u]) }, n.prototype.asType = function (n) { return this.throwIfDisposed(), e.cast(this, n) }, Object.defineProperty(n.prototype, "rank", { get: function () { return this.shape.length }, enumerable: !0, configurable: !0 }), n.prototype.buffer = function () { return y(this, void 0, void 0, function () { var n; return p(this, function (t) { switch (t.label) { case 0: return [4, this.data()]; case 1: return n = t.sent(), [2, e.buffer(this.shape, this.dtype, n)] } }) }) }, n.prototype.bufferSync = function () { return e.buffer(this.shape, this.dtype, this.dataSync()) }, n.prototype.array = function () { return y(this, void 0, void 0, function () { var n; return p(this, function (t) { switch (t.label) { case 0: return [4, this.data()]; case 1: return n = t.sent(), [2, yy(this.shape, n)] } }) }) }, n.prototype.arraySync = function () { return yy(this.shape, this.dataSync()) }, n.prototype.data = function () { return y(this, void 0, void 0, function () { var n, t; return p(this, function (i) { switch (i.label) { case 0: return this.throwIfDisposed(), n = tu().read(this.dataId), "string" !== this.dtype ? [3, 2] : [4, n]; case 1: t = i.sent(); try { return [2, t.map(function (n) { return us(n) })] } catch (n) { throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes()."); } i.label = 2; case 2: return [2, n] } }) }) }, n.prototype.dataSync = function () { this.throwIfDisposed(); var n = tu().readSync(this.dataId); if ("string" === this.dtype) try { return n.map(function (n) { return us(n) }) } catch (n) { throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes()."); } return n }, n.prototype.bytes = function () { return y(this, void 0, void 0, function () { var n; return p(this, function (t) { switch (t.label) { case 0: return this.throwIfDisposed(), [4, tu().read(this.dataId)]; case 1: return n = t.sent(), "string" === this.dtype ? [2, n] : [2, new Uint8Array(n.buffer)] } }) }) }, n.prototype.dispose = function () { this.isDisposed || (tu().disposeTensor(this), this.isDisposedInternal = !0) }, Object.defineProperty(n.prototype, "isDisposed", { get: function () { return this.isDisposedInternal }, enumerable: !0, configurable: !0 }), n.prototype.throwIfDisposed = function () { if (this.isDisposed) throw new Error("Tensor is disposed."); }, n.prototype.toFloat = function () { return this.asType("float32") }, n.prototype.toInt = function () { return this.asType("int32") }, n.prototype.toBool = function () { return this.asType("bool") }, n.prototype.print = function (n) { return void 0 === n && (n = !1), e.print(this, n) }, n.prototype.reshape = function (n) { return this.throwIfDisposed(), e.reshape(this, n) }, n.prototype.reshapeAs = function (n) { return this.throwIfDisposed(), this.reshape(n.shape) }, n.prototype.expandDims = function (n) { return void 0 === n && (n = 0), e.expandDims(this, n) }, n.prototype.cumsum = function (n, t, i) { return void 0 === n && (n = 0), void 0 === t && (t = !1), void 0 === i && (i = !1), e.cumsum(this, n, t, i) }, n.prototype.squeeze = function (n) { return this.throwIfDisposed(), e.squeeze(this, n) }, n.prototype.clone = function () { return this.throwIfDisposed(), e.clone(this) }, n.prototype.oneHot = function (n, t, i) { return this.throwIfDisposed(), e.oneHot(this, n, t, i) }, n.prototype.toString = function (n) { return void 0 === n && (n = !1), obt(this.dataSync(), this.shape, this.dtype, n) }, n.prototype.tile = function (n) { return this.throwIfDisposed(), e.tile(this, n) }, n.prototype.gather = function (n, t) { return void 0 === t && (t = 0), this.throwIfDisposed(), e.gather(this, n, t) }, n.prototype.matMul = function (n, t, i) { return void 0 === t && (t = !1), void 0 === i && (i = !1), this.throwIfDisposed(), e.matMul(this, n, t, i) }, n.prototype.dot = function (n) { return this.throwIfDisposed(), e.dot(this, n) }, n.prototype.norm = function (n, t, i) { return void 0 === n && (n = "euclidean"), void 0 === t && (t = null), void 0 === i && (i = !1), this.throwIfDisposed(), e.norm(this, n, t, i) }, n.prototype.slice = function (n, t) { return this.throwIfDisposed(), e.slice(this, n, t) }, n.prototype.reverse = function (n) { return this.throwIfDisposed(), e.reverse(this, n) }, n.prototype.concat = function (t, i) { return void 0 === i && (i = 0), this.throwIfDisposed(), t instanceof n && (t = [t]), e.concat([this].concat(t), i) }, n.prototype.split = function (n, t) { return void 0 === t && (t = 0), this.throwIfDisposed(), e.split(this, n, t) }, n.prototype.stack = function (n, t) { return void 0 === t && (t = 0), e.stack([this, n], t) }, n.prototype.unstack = function (n) { return void 0 === n && (n = 0), e.unstack(this, n) }, n.prototype.pad = function (n, t) { return void 0 === t && (t = 0), e.pad(this, n, t) }, n.prototype.batchNormalization = function (n, t, i, r, u) { return void 0 === i && (i = .001), htt("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"), this.batchNorm(n, t, u, r, i) }, n.prototype.batchNorm = function (n, t, i, r, u) { return void 0 === u && (u = .001), this.throwIfDisposed(), e.batchNorm(this, n, t, i, r, u) }, n.prototype.all = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.all(this, n, t) }, n.prototype.any = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.any(this, n, t) }, n.prototype.logSumExp = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.logSumExp(this, n, t) }, n.prototype.sum = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.sum(this, n, t) }, n.prototype.prod = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.prod(this, n, t) }, n.prototype.mean = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.mean(this, n, t) }, n.prototype.min = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.min(this, n, t) }, n.prototype.max = function (n, t) { return void 0 === n && (n = null), void 0 === t && (t = !1), this.throwIfDisposed(), e.max(this, n, t) }, n.prototype.argMin = function (n) { return void 0 === n && (n = null), this.throwIfDisposed(), e.argMin(this, n) }, n.prototype.argMax = function (n) { return void 0 === n && (n = null), this.throwIfDisposed(), e.argMax(this, n) }, n.prototype.cast = function (n) { return this.throwIfDisposed(), e.cast(this, n) }, n.prototype.add = function (n) { return this.throwIfDisposed(), e.add(this, n) }, n.prototype.addStrict = function (n) { return this.throwIfDisposed(), e.addStrict(this, n) }, n.prototype.atan2 = function (n) { return this.throwIfDisposed(), e.atan2(this, n) }, n.prototype.sub = function (n) { return this.throwIfDisposed(), e.sub(this, n) }, n.prototype.subStrict = function (n) { return this.throwIfDisposed(), e.subStrict(this, n) }, n.prototype.pow = function (n) { return this.throwIfDisposed(), e.pow(this, n) }, n.prototype.powStrict = function (n) { return this.throwIfDisposed(), e.powStrict(this, n) }, n.prototype.mul = function (n) { return this.throwIfDisposed(), e.mul(this, n) }, n.prototype.mulStrict = function (n) { return this.throwIfDisposed(), e.mulStrict(this, n) }, n.prototype.div = function (n) { return this.throwIfDisposed(), e.div(this, n) }, n.prototype.divNoNan = function (n) { return this.throwIfDisposed(), e.divNoNan(this, n) }, n.prototype.floorDiv = function (n) { return this.throwIfDisposed(), e.floorDiv(this, n) }, n.prototype.divStrict = function (n) { return this.throwIfDisposed(), e.divStrict(this, n) }, n.prototype.minimum = function (n) { return this.throwIfDisposed(), e.minimum(this, n) }, n.prototype.minimumStrict = function (n) { return this.throwIfDisposed(), e.minimumStrict(this, n) }, n.prototype.maximum = function (n) { return this.throwIfDisposed(), e.maximum(this, n) }, n.prototype.maximumStrict = function (n) { return this.throwIfDisposed(), e.maximumStrict(this, n) }, n.prototype.mod = function (n) { return this.throwIfDisposed(), e.mod(this, n) }, n.prototype.modStrict = function (n) { return this.throwIfDisposed(), e.modStrict(this, n) }, n.prototype.squaredDifferenceStrict = function (n) { return this.throwIfDisposed(), e.squaredDifferenceStrict(this, n) }, n.prototype.transpose = function (n) { return this.throwIfDisposed(), e.transpose(this, n) }, n.prototype.notEqual = function (n) { return this.throwIfDisposed(), e.notEqual(this, n) }, n.prototype.notEqualStrict = function (n) { return this.throwIfDisposed(), e.notEqualStrict(this, n) }, n.prototype.less = function (n) { return this.throwIfDisposed(), e.less(this, n) }, n.prototype.lessStrict = function (n) { return this.throwIfDisposed(), e.lessStrict(this, n) }, n.prototype.equal = function (n) { return this.throwIfDisposed(), e.equal(this, n) }, n.prototype.equalStrict = function (n) { return this.throwIfDisposed(), e.equalStrict(this, n) }, n.prototype.lessEqual = function (n) { return this.throwIfDisposed(), e.lessEqual(this, n) }, n.prototype.lessEqualStrict = function (n) { return this.throwIfDisposed(), e.lessEqualStrict(this, n) }, n.prototype.greater = function (n) { return this.throwIfDisposed(), e.greater(this, n) }, n.prototype.greaterStrict = function (n) { return this.throwIfDisposed(), e.greaterStrict(this, n) }, n.prototype.greaterEqual = function (n) { return this.throwIfDisposed(), e.greaterEqual(this, n) }, n.prototype.greaterEqualStrict = function (n) { return this.throwIfDisposed(), e.greaterEqualStrict(this, n) }, n.prototype.logicalAnd = function (n) { return this.throwIfDisposed(), e.logicalAnd(this, n) }, n.prototype.logicalOr = function (n) { return this.throwIfDisposed(), e.logicalOr(this, n) }, n.prototype.logicalNot = function () { return this.throwIfDisposed(), e.logicalNot(this) }, n.prototype.logicalXor = function (n) { return this.throwIfDisposed(), e.logicalXor(this, n) }, n.prototype.where = function (n, t) { return this.throwIfDisposed(), e.where(n, this, t) }, n.prototype.neg = function () { return this.throwIfDisposed(), e.neg(this) }, n.prototype.ceil = function () { return this.throwIfDisposed(), e.ceil(this) }, n.prototype.floor = function () { return this.throwIfDisposed(), e.floor(this) }, n.prototype.sign = function () { return this.throwIfDisposed(), e.sign(this) }, n.prototype.isNaN = function () { return this.throwIfDisposed(), e.isNaN(this) }, n.prototype.isInf = function () { return this.throwIfDisposed(), e.isInf(this) }, n.prototype.isFinite = function () { return this.throwIfDisposed(), e.isFinite(this) }, n.prototype.exp = function () { return this.throwIfDisposed(), e.exp(this) }, n.prototype.expm1 = function () { return this.throwIfDisposed(), e.expm1(this) }, n.prototype.log = function () { return this.throwIfDisposed(), e.log(this) }, n.prototype.log1p = function () { return this.throwIfDisposed(), e.log1p(this) }, n.prototype.sqrt = function () { return this.throwIfDisposed(), e.sqrt(this) }, n.prototype.rsqrt = function () { return this.throwIfDisposed(), e.rsqrt(this) }, n.prototype.square = function () { return this.throwIfDisposed(), e.square(this) }, n.prototype.reciprocal = function () { return this.throwIfDisposed(), e.reciprocal(this) }, n.prototype.abs = function () { return this.throwIfDisposed(), e.abs(this) }, n.prototype.clipByValue = function (n, t) { return this.throwIfDisposed(), e.clipByValue(this, n, t) }, n.prototype.relu = function () { return this.throwIfDisposed(), e.relu(this) }, n.prototype.relu6 = function () { return this.throwIfDisposed(), e.relu6(this) }, n.prototype.elu = function () { return this.throwIfDisposed(), e.elu(this) }, n.prototype.selu = function () { return this.throwIfDisposed(), e.selu(this) }, n.prototype.leakyRelu = function (n) { return void 0 === n && (n = .2), this.throwIfDisposed(), e.leakyRelu(this, n) }, n.prototype.prelu = function (n) { return this.throwIfDisposed(), e.prelu(this, n) }, n.prototype.sigmoid = function () { return this.throwIfDisposed(), e.sigmoid(this) }, n.prototype.logSigmoid = function () { return this.throwIfDisposed(), e.logSigmoid(this) }, n.prototype.softplus = function () { return this.throwIfDisposed(), e.softplus(this) }, n.prototype.zerosLike = function () { return this.throwIfDisposed(), e.zerosLike(this) }, n.prototype.onesLike = function () { return this.throwIfDisposed(), e.onesLike(this) }, n.prototype.sin = function () { return this.throwIfDisposed(), e.sin(this) }, n.prototype.cos = function () { return this.throwIfDisposed(), e.cos(this) }, n.prototype.tan = function () { return this.throwIfDisposed(), e.tan(this) }, n.prototype.asin = function () { return this.throwIfDisposed(), e.asin(this) }, n.prototype.acos = function () { return this.throwIfDisposed(), e.acos(this) }, n.prototype.atan = function () { return this.throwIfDisposed(), e.atan(this) }, n.prototype.sinh = function () { return this.throwIfDisposed(), e.sinh(this) }, n.prototype.cosh = function () { return this.throwIfDisposed(), e.cosh(this) }, n.prototype.tanh = function () { return this.throwIfDisposed(), e.tanh(this) }, n.prototype.asinh = function () { return this.throwIfDisposed(), e.asinh(this) }, n.prototype.acosh = function () { return this.throwIfDisposed(), e.acosh(this) }, n.prototype.atanh = function () { return this.throwIfDisposed(), e.atanh(this) }, n.prototype.erf = function () { return this.throwIfDisposed(), e.erf(this) }, n.prototype.round = function () { return this.throwIfDisposed(), e.round(this) }, n.prototype.step = function (n) { return void 0 === n && (n = 0), this.throwIfDisposed(), e.step(this, n) }, n.prototype.softmax = function (n) { return void 0 === n && (n = -1), this.throwIfDisposed(), e.softmax(this, n) }, n.prototype.logSoftmax = function (n) { return void 0 === n && (n = -1), this.throwIfDisposed(), e.logSoftmax(this, n) }, n.prototype.resizeBilinear = function (n, t) { return void 0 === t && (t = !1), this.throwIfDisposed(), e.image.resizeBilinear(this, n, t) }, n.prototype.resizeNearestNeighbor = function (n, t) { return void 0 === t && (t = !1), this.throwIfDisposed(), e.image.resizeNearestNeighbor(this, n, t) }, n.prototype.conv1d = function (n, t, i, r, u, f) { return void 0 === r && (r = "NWC"), void 0 === u && (u = 1), this.throwIfDisposed(), e.conv1d(this, n, t, i, r, u, f) }, n.prototype.conv2d = function (n, t, i, r, u, f) { return void 0 === r && (r = "NHWC"), void 0 === u && (u = [1, 1]), this.throwIfDisposed(), e.conv2d(this, n, t, i, r, u, f) }, n.prototype.conv2dTranspose = function (n, t, i, r, u) { return this.throwIfDisposed(), e.conv2dTranspose(this, n, t, i, r, u) }, n.prototype.depthwiseConv2D = function (n, t, i, r, u, f) { return void 0 === r && (r = "NHWC"), void 0 === u && (u = [1, 1]), this.throwIfDisposed(), e.depthwiseConv2d(this, n, t, i, r, u, f) }, n.prototype.separableConv2d = function (n, t, i, r, u, f) { return void 0 === u && (u = [1, 1]), void 0 === f && (f = "NHWC"), this.throwIfDisposed(), e.separableConv2d(this, n, t, i, r, u, f) }, n.prototype.avgPool = function (n, t, i, r) { return this.throwIfDisposed(), e.avgPool(this, n, t, i, r) }, n.prototype.maxPool = function (n, t, i, r) { return this.throwIfDisposed(), e.maxPool(this, n, t, i, r) }, n.prototype.localResponseNormalization = function (n, t, i, r) { return void 0 === n && (n = 5), void 0 === t && (t = 1), void 0 === i && (i = 1), void 0 === r && (r = .5), e.localResponseNormalization(this, n, t, i, r) }, n.prototype.pool = function (n, t, i, r, u) { return this.throwIfDisposed(), e.pool(this, n, t, i, r, u) }, n.prototype.variable = function (n, t, i) { return void 0 === n && (n = !0), this.throwIfDisposed(), tu().makeVariable(this, n, t, i) }, n.prototype.unsortedSegmentSum = function (n, t) { return this.throwIfDisposed(), e.unsortedSegmentSum(this, n, t) }, n.prototype.batchToSpaceND = function (n, t) { return this.throwIfDisposed(), e.batchToSpaceND(this, n, t) }, n.prototype.spaceToBatchND = function (n, t) { return this.throwIfDisposed(), e.spaceToBatchND(this, n, t) }, n.prototype.topk = function (n, t) { return void 0 === n && (n = 1), void 0 === t && (t = !0), this.throwIfDisposed(), e.topk(this, n, t) }, n.prototype.stridedSlice = function (n, t, i, r, u, f, o, s) { return void 0 === r && (r = 0), void 0 === u && (u = 0), void 0 === f && (f = 0), void 0 === o && (o = 0), void 0 === s && (s = 0), this.throwIfDisposed(), e.stridedSlice(this, n, t, i, r, u, f, o, s) }, n.prototype.depthToSpace = function (n, t) { return this.throwIfDisposed(), e.depthToSpace(this, n, t) }, n.prototype.fft = function () { return this.throwIfDisposed(), e.spectral.fft(this) }, n.prototype.ifft = function () { return this.throwIfDisposed(), e.spectral.ifft(this) }, n.prototype.rfft = function () { return this.throwIfDisposed(), e.spectral.rfft(this) }, n.prototype.irfft = function () { return this.throwIfDisposed(), e.spectral.irfft(this) }, n }(), dy, gy, np, tp, ip, ef, ctt, iu, ss, gi, nr, sf, cc, ptt, wtt, ac, vc, nit, nrt, b, cut, el, vut, but, gut, vw, vet, ww, hot, ib, evt, ha, hk, ho, ovt, svt, ca, ck, la, lk, hvt, ak, cvt, lvt, aa, vh, va, yf, wu, ae, pk, bvt, ve, wk, gvt, pa, tyt, bk, dk, ba, ka, da, ga, ph, nv, tv, syt, iv, ci, ku, ni, ti, gu, go, gr, dd, tg, ug, fg, wpt, kpt, dv, tc, rwt, gf, ic, yg, we, uc, fc, ty, kwt, gwt; Object.defineProperty(et, Symbol.hasInstance, { value: function (n) { return !!n && null != n.dataId && null != n.shape && null != n.dtype } }); ef = function (n) { function t(t, i, r, u) { var f = n.call(this, t.shape, t.dtype, t.dataId, u) || this; return f.trainable = i, f.name = r, f } return hr(t, n), t.prototype.assign = function (n) { if (n.dtype !== this.dtype) throw new Error("dtype of the new value (" + n.dtype + ") and previous value (" + this.dtype + ") must match"); if (!yt(n.shape, this.shape)) throw new Error("shape of the new value (" + n.shape + ") and previous value (" + this.shape + ") must match"); tu().disposeTensor(this); this.dataId = n.dataId; tu().incRef(this, null) }, t.prototype.dispose = function () { tu().disposeVariable(this); this.isDisposedInternal = !0 }, t }(et); Object.defineProperty(ef, Symbol.hasInstance, { value: function (n) { return n instanceof et && null != n.assign && n.assign instanceof Function } }), function (n) { n.R0 = "R0"; n.R1 = "R1"; n.R2 = "R2"; n.R3 = "R3"; n.R4 = "R4"; n.R5 = "R5"; n.R6 = "R6" }(dy || (dy = {})), function (n) { n.float32 = "float32"; n.int32 = "int32"; n.bool = "int32"; n.complex64 = "complex64" }(gy || (gy = {})), function (n) { n.float32 = "float32"; n.int32 = "int32"; n.bool = "bool"; n.complex64 = "complex64" }(np || (np = {})), function (n) { n.float32 = "float32"; n.int32 = "float32"; n.bool = "float32"; n.complex64 = "complex64" }(tp || (tp = {})), function (n) { n.float32 = "complex64"; n.int32 = "complex64"; n.bool = "complex64"; n.complex64 = "complex64" }(ip || (ip = {})); ctt = { float32: tp, int32: gy, bool: np, complex64: ip }; var up, sbt = Object.freeze({ makeTypesMatch: ht, assertTypesMatch: ltt, isTensorInList: function (n, t) { return t.some(function (t) { return t.id === n.id }) }, getTensorsInContainer: rp }), att = function () { function n() { this.registeredVariables = {}; this.nextTapeNodeId = 0; this.numBytes = 0; this.numTensors = 0; this.numStringTensors = 0; this.numDataBuffers = 0; this.gradientDepth = 0; this.kernelDepth = 0; this.scopeStack = []; this.numDataMovesStack = []; this.nextScopeId = 0; this.tensorInfo = new WeakMap; this.profiling = !1; this.activeProfile = { newBytes: 0, newTensors: 0, peakBytes: 0, kernels: [], result: null } } return n.prototype.dispose = function () { for (var n in this.registeredVariables) this.registeredVariables[n].dispose() }, n }(), hbt = function () { function n(n) { this.ENV = n; this.registry = {}; this.registryFactory = {}; this.pendingBackendInitId = 0; this.state = new att } return n.prototype.ready = function () { return y(this, void 0, void 0, function () { var t, n, i; return p(this, function (r) { switch (r.label) { case 0: if (null != this.pendingBackendInit) return [2, this.pendingBackendInit.then(function () { })]; if (null != this.backendInstance) return [2]; t = this.getSortedBackends(); n = 0; r.label = 1; case 1: return n < t.length ? (i = t[n], [4, this.initializeBackend(i).success]) : [3, 5]; case 2: return r.sent() ? [4, this.setBackend(i)] : [3, 4]; case 3: return r.sent(), [2]; case 4: return n++, [3, 1]; case 5: throw new Error("Could not initialize any backends, all backend initializations failed."); } }) }) }, Object.defineProperty(n.prototype, "backend", { get: function () { if (null != this.pendingBackendInit) throw new Error("Backend '" + this.backendName + "' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods"); if (null == this.backendInstance) { var n = this.initializeBackendsAndReturnBest(), t = n.name; if (n.asyncInit) throw new Error("The highest priority backend '" + t + "' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods"); this.setBackend(t) } return this.backendInstance }, enumerable: !0, configurable: !0 }), n.prototype.backendNames = function () { return Object.keys(this.registryFactory) }, n.prototype.findBackend = function (n) { return !(n in this.registry) && (!(n in this.registryFactory) || this.initializeBackend(n).asyncInit) ? null : this.registry[n] }, n.prototype.findBackendFactory = function (n) { return n in this.registryFactory ? this.registryFactory[n].factory : null }, n.prototype.registerBackend = function (n, t, i) { return void 0 === i && (i = 1), n in this.registryFactory ? (console.warn(n + " backend was already registered. Reusing existing backend factory."), !1) : (this.registryFactory[n] = { factory: t, priority: i }, !0) }, n.prototype.setBackend = function (n) { return y(this, void 0, void 0, function () { var t, i, r; return p(this, function (u) { switch (u.label) { case 0: if (null == this.registryFactory[n]) throw new Error("Backend name '" + n + "' not found in registry"); return this.backendName = n, null != this.registry[n] ? [3, 4] : (this.backendInstance = null, t = this.initializeBackend(n), i = t.success, t.asyncInit ? [4, i] : [3, 2]); case 1: return r = u.sent(), [3, 3]; case 2: r = i; u.label = 3; case 3: if (!r) return [2, !1]; u.label = 4; case 4: return this.backendInstance = this.registry[n], this.setupRegisteredKernels(), this.profiler = new fbt(this.backendInstance), [2, !0] } }) }) }, n.prototype.setupRegisteredKernels = function () { var n = this; oy(this.backendName).forEach(function (t) { null != t.setupFunc && t.setupFunc(n.backendInstance) }) }, n.prototype.disposeRegisteredKernels = function (n) { var t = this; oy(n).forEach(function (i) { null != i.disposeFunc && i.disposeFunc(t.registry[n]) }) }, n.prototype.initializeBackend = function (n) { var t = this, f = this.registryFactory[n], i, r, u; if (null == f) throw new Error("Cannot initialize backend " + n + ", no registration found."); try { return (i = f.factory(), Promise.resolve(i) === i) ? (r = ++this.pendingBackendInitId, u = i.then(function (i) { return !(r < t.pendingBackendInitId) && (t.registry[n] = i, t.pendingBackendInit = null, !0) }).catch(function (i) { return !(r < t.pendingBackendInitId) && (t.pendingBackendInit = null, console.warn("Initialization of backend " + n + " failed"), console.warn(i.stack || i.message), !1) }), this.pendingBackendInit = u, { success: u, asyncInit: !0 }) : (this.registry[n] = i, { success: !0, asyncInit: !1 }) } catch (t) { return console.warn("Initialization of backend " + n + " failed"), console.warn(t.stack || t.message), { success: !1, asyncInit: !1 } } }, n.prototype.removeBackend = function (n) { if (!(n in this.registryFactory)) throw new Error(n + " backend not found in registry"); this.backendName === n && null != this.pendingBackendInit && this.pendingBackendInitId++; n in this.registry && (this.disposeRegisteredKernels(n), this.registry[n].dispose(), delete this.registry[n]); delete this.registryFactory[n]; this.backendName === n && (this.pendingBackendInit = null, this.backendName = null, this.backendInstance = null) }, n.prototype.getSortedBackends = function () { var n = this; if (0 === Object.keys(this.registryFactory).length) throw new Error("No backend found in registry."); return Object.keys(this.registryFactory).sort(function (t, i) { return n.registryFactory[i].priority - n.registryFactory[t].priority }) }, n.prototype.initializeBackendsAndReturnBest = function () { for (var t = this.getSortedBackends(), n = 0; n < t.length; n++) { var i = t[n], r = this.initializeBackend(i), f = r.success, u = r.asyncInit; if (u || f) return { name: i, asyncInit: u } } throw new Error("Could not initialize any backends, all backend initializations failed."); }, n.prototype.moveData = function (n, t) { var i = this.state.tensorInfo.get(t), r = i.backend, u = this.readSync(t); r.disposeData(t); i.backend = n; n.move(t, u, i.shape, i.dtype); this.shouldCheckForMemLeaks() && this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1]++ }, n.prototype.tidy = function (n, t) { var i, r = this, u = null; if (null == t) { if ("function" != typeof n) throw new Error("Please provide a function to tidy()"); t = n } else { if ("string" != typeof n && !(n instanceof String)) throw new Error("When calling with two arguments, the first argument to tidy() must be a string"); if ("function" != typeof t) throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function"); u = n } return this.scopedRun(function () { return r.startScope(u) }, function () { return r.endScope(i) }, function () { return (i = t()) instanceof Promise && console.error("Cannot return a Promise inside of tidy."), i }) }, n.prototype.scopedRun = function (n, t, i) { n(); try { var r = i(); return t(), r } catch (n) { throw t(), n; } }, n.prototype.nextTensorId = function () { return n.nextTensorId++ }, n.prototype.nextVariableId = function () { return n.nextVariableId++ }, n.prototype.clone = function (n) { var t = this.makeTensorFromDataId(n.dataId, n.shape, n.dtype), i = { x: n }; return this.addTapeNode(this.state.activeScope.name, i, [t], function (n) { return { x: function () { return n.toFloat() } } }, []), t }, n.prototype.runKernel = function (n, t, i, r, u) { return this.runKernelFunc(null, t, null, n, i, r, u) }, n.prototype.shouldCheckForMemLeaks = function () { return this.ENV.getBool("IS_TEST") }, n.prototype.checkKernelForMemLeak = function (n, t, i) { var e = this.backend.numDataIds(), u = 0, f, r; if (i.forEach(function (n) { u += "complex64" === n.dtype ? 3 : 1 }), f = this.state.numDataMovesStack[this.state.numDataMovesStack.length - 1], r = e - t - u - f, r > 0) throw new Error("Backend '" + this.backendName + "' has an internal memory leak (" + r + " data ids) after running '" + n + "'"); }, n.prototype.runKernelFunc = function (n, t, i, r, u, f, e) { var h, o = this, c, l, s, v; void 0 === f && (f = []); void 0 === e && (e = []); c = []; l = this.isTapeOn(); null == r && (r = null != this.state.activeScope ? this.state.activeScope.name : ""); var a, y = function (n) { l && (c = n.map(function (n) { return o.keep(o.clone(n)) })) }, p = this.state.numBytes, w = this.state.numTensors; return this.shouldCheckForMemLeaks() && this.state.numDataMovesStack.push(0), v = ey(r, this.backendName), a = null != v ? function () { var c = o.backend.numDataIds(), n, i, h; return s = v.kernelFunc({ inputs: t, attrs: u, backend: o.backend }), n = Array.isArray(s) ? s : [s], o.shouldCheckForMemLeaks() && o.checkKernelForMemLeak(r, c, n), i = n.map(function (n) { var t = n.dataId, i = n.shape, r = n.dtype; return o.makeTensorFromDataId(t, i, r) }), h = i.filter(function (n, t) { return e[t] }), y((f || []).slice().concat(h)), i } : function () { var i = o.backend.numDataIds(), t; return s = o.tidy(function () { return n(o.backend, y) }), t = Array.isArray(s) ? s : [s], o.shouldCheckForMemLeaks() && o.checkKernelForMemLeak(r, i, t), t }, this.scopedRun(function () { return o.state.kernelDepth++ }, function () { return o.state.kernelDepth-- }, function () { h = o.ENV.getBool("DEBUG") ? o.profiler.profileKernel(r, t, function () { return a() }) : a() }), l && this.addTapeNode(r, t, h, i, c), this.state.profiling && this.state.activeProfile.kernels.push({ name: r, bytesAdded: this.state.numBytes - p, totalBytesSnapshot: this.state.numBytes, tensorsAdded: this.state.numTensors - w, totalTensorsSnapshot: this.state.numTensors, inputShapes: Object.keys(t).map(function (n) { return t[n].shape }), outputShapes: h.map(function (n) { return n.shape }) }), Array.isArray(s) ? h : h[0] }, n.prototype.makeTensor = function (n, t, i, r) { var u, f, e, o, s; if (null == n) throw new Error("Values passed to engine.makeTensor() are null"); return i = i || "float32", r = r || this.backend, u = n, "string" === i && uf(n[0]) && (u = n.map(function (n) { return ftt(n) })), f = r.write(u, t, i), e = new et(t, i, f, this.nextTensorId()), (this.incRef(e, r), "string" === i) && (o = this.state.tensorInfo.get(f), s = itt(u), this.state.numBytes += s - o.bytes, o.bytes = s), e }, n.prototype.makeTensorFromDataId = function (n, t, i, r) { var u = new et(t, i = i || "float32", n, this.nextTensorId()); return this.incRef(u, r), u }, n.prototype.makeVariable = function (n, t, i, r) { void 0 === t && (t = !0); i = i || this.nextVariableId().toString(); null != r && r !== n.dtype && (n = n.asType(r)); var u = new ef(n, t, i, this.nextTensorId()); if (null != this.state.registeredVariables[u.name]) throw new Error("Variable with name " + u.name + " was already registered"); return this.state.registeredVariables[u.name] = u, this.incRef(u, this.backend), u }, n.prototype.incRef = function (n, t) { var r = this.state.tensorInfo.has(n.dataId) ? this.state.tensorInfo.get(n.dataId).refCount : 0, i; (this.state.numTensors++, "string" === n.dtype && this.state.numStringTensors++, 0 === r) && (this.state.numDataBuffers++, i = 0, "complex64" !== n.dtype && "string" !== n.dtype && (i = n.size * ay(n.dtype)), this.state.tensorInfo.set(n.dataId, { backend: t || this.backend, dtype: n.dtype, shape: n.shape, bytes: i, refCount: 0 }), this.state.numBytes += i); this.state.tensorInfo.get(n.dataId).refCount++; n instanceof ef || this.track(n) }, n.prototype.disposeTensor = function (n) { if (this.state.tensorInfo.has(n.dataId)) { this.state.numTensors--; "string" === n.dtype && this.state.numStringTensors--; var t = this.state.tensorInfo.get(n.dataId); t.refCount <= 1 ? ("complex64" !== n.dtype && (this.state.numBytes -= t.bytes), this.state.numDataBuffers--, t.backend.disposeData(n.dataId), this.state.tensorInfo.delete(n.dataId)) : this.state.tensorInfo.get(n.dataId).refCount-- } }, n.prototype.disposeVariables = function () { var n, t; for (n in this.state.registeredVariables) t = this.state.registeredVariables[n], this.disposeVariable(t) }, n.prototype.disposeVariable = function (n) { this.disposeTensor(n); null != this.state.registeredVariables[n.name] && delete this.state.registeredVariables[n.name] }, n.prototype.memory = function () { var n = this.backend.memory(); return n.numTensors = this.state.numTensors, n.numDataBuffers = this.state.numDataBuffers, n.numBytes = this.state.numBytes, this.state.numStringTensors > 0 && (n.unreliable = !0, null == n.reasons && (n.reasons = []), n.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")), n }, n.prototype.profile = function (n) { return y(this, void 0, void 0, function () { var t, i; return p(this, function () { return this.state.profiling = !0, t = this.state.numBytes, i = this.state.numTensors, this.state.activeProfile.kernels = [], this.state.activeProfile.result = n(), this.state.profiling = !1, this.state.activeProfile.peakBytes = Math.max.apply(Math, this.state.activeProfile.kernels.map(function (n) { return n.totalBytesSnapshot })), this.state.activeProfile.newBytes = this.state.numBytes - t, this.state.activeProfile.newTensors = this.state.numTensors - i, [2, this.state.activeProfile] }) }) }, n.prototype.isTapeOn = function () { return this.state.gradientDepth > 0 && 0 === this.state.kernelDepth }, n.prototype.addTapeNode = function (n, t, i, r, u) { var o = this, f = { id: this.state.nextTapeNodeId++, kernelName: n, inputs: t, outputs: i, saved: u }, e = yn(n); null != e && (r = e.gradFunc); null != r && (f.gradient = function (n) { return n = n.map(function (n, t) { if (null == n) { var r = i[t], u = ge(r.size, r.dtype); return o.makeTensor(u, r.shape, r.dtype) } return n }), r(n.length > 1 ? n : n[0], u) }); this.state.activeTape.push(f) }, n.prototype.keep = function (n) { return n.kept = !0, n }, n.prototype.startTape = function () { 0 === this.state.gradientDepth && (this.state.activeTape = []); this.state.gradientDepth++ }, n.prototype.endTape = function () { this.state.gradientDepth-- }, n.prototype.startScope = function (n) { var t = { track: [], name: "unnamed scope", id: this.state.nextScopeId++ }; n && (t.name = n); this.state.scopeStack.push(t); this.state.activeScope = t }, n.prototype.endScope = function (n) { for (var t, u, f = this, r = rp(n), e = new Set(r.map(function (n) { return n.id })), i = 0; i < this.state.activeScope.track.length; i++)t = this.state.activeScope.track[i], t.kept || e.has(t.id) || t.dispose(); u = this.state.scopeStack.pop(); this.state.activeScope = 0 === this.state.scopeStack.length ? null : this.state.scopeStack[this.state.scopeStack.length - 1]; r.forEach(function (n) { n.kept || n.scopeId !== u.id || f.track(n) }) }, n.prototype.gradients = function (n, t, u, f) { var e = this, o, s; if (void 0 === f && (f = !1), i(t.length > 0, function () { return "gradients() received an empty list of xs." }), null != u && "float32" !== u.dtype) throw new Error("dy must have 'float32' dtype, but has '" + u.dtype + "'"); if (o = this.scopedRun(function () { return e.startTape() }, function () { return e.endTape() }, function () { return e.tidy("forward", n) }), i(o instanceof et, function () { return "The result y returned by f() must be a tensor." }), s = function (n, t, i) { for (var e, h, l, a, u, v, f, y, c, s = {}, p = {}, r = 0; r < t.length; r++)s[t[r].id] = !0; for (r = 0; r < n.length; r++) { e = (u = n[r]).inputs; for (f in e) { for (var b = e[f], w = !1, o = 0; o < t.length; o++)if (s[b.id]) { u.outputs.forEach(function (n) { return s[n.id] = !0 }); w = !0; p[u.id] = !0; break } if (w) break } } for (h = {}, h[i.id] = !0, l = {}, r = n.length - 1; r >= 0; r--)for (e = (u = n[r]).inputs, o = 0; o < u.outputs.length; o++)if (h[u.outputs[o].id]) { for (f in e) h[e[f].id] = !0, l[u.id] = !0; break } for (a = [], r = 0; r < n.length; r++)if (p[(u = n[r]).id] && l[u.id]) { v = {}; for (f in u.inputs) y = u.inputs[f], s[y.id] && (v[f] = y); c = Object.assign({}, u); c.inputs = v; c.outputs = u.outputs; a.push(c) } return a }(this.state.activeTape, t, o), !f && 0 === s.length && t.length > 0) throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y."); return this.tidy("backward", function () { var n, f, i = {}, h; return i[o.id] = null == u ? (n = o.shape, f = py(w(n), "float32"), r.makeTensor(f, n, "float32")) : u, function (n, t, i) { for (var u = function (r) { var u = t[r], e = [], f, o, s; if (u.outputs.forEach(function (t) { var i = n[t.id]; null != i ? e.push(i) : e.push(null) }), null == u.gradient) throw new Error("Cannot compute gradient: gradient function not found for " + u.kernelName + "."); f = u.gradient(e); o = function (t) { var r, e, o; if (!(t in f)) throw new Error("Cannot backprop through input " + t + ". Available gradients found: " + Object.keys(f) + "."); if (r = i(function () { return f[t]() }), "float32" !== r.dtype) throw new Error("Error in gradient for op " + u.kernelName + ". The gradient of input " + t + " must have 'float32' dtype, but has '" + r.dtype + "'"); if (e = u.inputs[t], !yt(r.shape, e.shape)) throw new Error("Error in gradient for op " + u.kernelName + ". The gradient of input '" + t + "' has shape '" + r.shape + "', which does not match the shape of the input '" + e.shape + "'"); null == n[e.id] ? n[e.id] = r : (o = n[e.id], n[e.id] = o.add(r), o.dispose()) }; for (s in u.inputs) o(s) }, r = t.length - 1; r >= 0; r--)u(r) }(i, s, function (n) { return e.tidy(n) }), h = t.map(function (n) { return i[n.id] }), 0 === e.state.gradientDepth && (e.state.activeTape.forEach(function (n) { for (var t = 0, i = n.saved; t < i.length; t++)i[t].dispose() }), e.state.activeTape = null), { value: o, grads: h } }) }, n.prototype.customGrad = function (n) { var t = this; return i(ff(n), function () { return "The f passed in customGrad(f) must be a function." }), function () { for (var f, e, r = [], u = 0; u < arguments.length; u++)r[u] = arguments[u]; return i(r.every(function (n) { return n instanceof et }), function () { return "The args passed in customGrad(f)(x1, x2,...) must all be tensors" }), e = {}, r.forEach(function (n, t) { e[t] = n }), t.runKernelFunc(function (t, u) { return i((f = n.apply(void 0, r.concat([u]))).value instanceof et, function () { return "The function f passed in customGrad(f) must return an object where `obj.value` is a tensor" }), i(ff(f.gradFunc), function () { return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function." }), f.value }, e, function (n, t) { var u = f.gradFunc(n, t), e = Array.isArray(u) ? u : [u], o; return i(e.length === r.length, function () { return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)." }), i(e.every(function (n) { return n instanceof et }), function () { return "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors." }), o = {}, e.forEach(function (n, t) { o[t] = function () { return n } }), o }) } }, n.prototype.readSync = function (n) { return this.state.tensorInfo.get(n).backend.readSync(n) }, n.prototype.read = function (n) { return this.state.tensorInfo.get(n).backend.read(n) }, n.prototype.time = function (n) { return y(this, void 0, void 0, function () { var t, i; return p(this, function (r) { switch (r.label) { case 0: return t = lr(), [4, this.backend.time(n)]; case 1: return (i = r.sent()).wallMs = lr() - t, [2, i] } }) }) }, n.prototype.track = function (n) { return null != this.state.activeScope && (n.scopeId = this.state.activeScope.id, this.state.activeScope.track.push(n)), n }, Object.defineProperty(n.prototype, "registeredVariables", { get: function () { return this.state.registeredVariables }, enumerable: !0, configurable: !0 }), n.prototype.reset = function () { for (var n in this.pendingBackendInitId++, this.state.dispose(), this.ENV.reset(), this.state = new att, this.registry) this.disposeRegisteredKernels(n), this.registry[n].dispose(), delete this.registry[n]; this.backendName = null; this.backendInstance = null; this.pendingBackendInit = null }, n.nextTensorId = 0, n.nextVariableId = 0, n }(), r = function () { var n = function () { if (null == up) { var n = void 0; if ("undefined" != typeof window) n = window; else if ("undefined" != typeof global) n = global; else if ("undefined" != typeof process) n = process; else { if ("undefined" == typeof self) throw new Error("Could not find a global object"); n = self } up = n } return up }(), t; return null == n._tfengine && (t = new vn(n), n._tfengine = new hbt(t)), function (n) { fy = n }(n._tfengine.ENV), tu = function () { return n._tfengine }, n._tfengine }(); iu = o(); iu.registerFlag("DEBUG", function () { return !1 }, function (n) { n && console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.") }); iu.registerFlag("IS_BROWSER", function () { return vtt() }); iu.registerFlag("IS_NODE", function () { return "undefined" != typeof process && void 0 !== process.versions && void 0 !== process.versions.node }); iu.registerFlag("IS_CHROME", function () { return "undefined" != typeof navigator && null != navigator && null != navigator.userAgent && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor) }); iu.registerFlag("PROD", function () { return !1 }); iu.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY", function () { return iu.getBool("DEBUG") }); iu.registerFlag("DEPRECATION_WARNINGS_ENABLED", function () { return !0 }); iu.registerFlag("IS_TEST", function () { return !1 }); sf = {}; cc = { alpha: !1, antialias: !1, premultipliedAlpha: !1, preserveDrawingBuffer: !1, depth: !1, stencil: !1, failIfMajorPerformanceCaveat: !0 }; !function (n) { n[n.DENSE = 0] = "DENSE"; n[n.SHARED_BATCH = 1] = "SHARED_BATCH" }(ss || (ss = {})), function (n) { n[n.RENDER = 0] = "RENDER"; n[n.UPLOAD = 1] = "UPLOAD"; n[n.PIXELS = 2] = "PIXELS"; n[n.DOWNLOAD = 3] = "DOWNLOAD" }(gi || (gi = {})), function (n) { n[n.UNPACKED_FLOAT16 = 0] = "UNPACKED_FLOAT16"; n[n.UNPACKED_FLOAT32 = 1] = "UNPACKED_FLOAT32"; n[n.PACKED_4X1_UNSIGNED_BYTE = 2] = "PACKED_4X1_UNSIGNED_BYTE"; n[n.PACKED_2X2_FLOAT32 = 3] = "PACKED_2X2_FLOAT32"; n[n.PACKED_2X2_FLOAT16 = 4] = "PACKED_2X2_FLOAT16" }(nr || (nr = {})); ptt = 596e-10; wtt = 65504; nit = /ERROR: [0-9]+:([0-9]+):/g; nrt = Object.freeze({ callAndCheck: l, canBeRepresented: btt, getWebGLErrorMessage: ktt, getExtensionOrThrow: ls, createVertexShader: dtt, createFragmentShader: gtt, createProgram: tit, linkProgram: iit, validateProgram: yc, createStaticVertexBuffer: rit, createStaticIndexBuffer: uit, getNumChannels: function () { return 2 === o().getNumber("WEBGL_VERSION") ? 1 : 4 }, createTexture: fit, validateTextureSize: eit, createFramebuffer: oit, bindVertexBufferToProgramAttribute: ep, bindTextureUnit: sit, unbindTextureUnit: function (n, t, i) { vit(n, i); l(n, t, function () { return n.activeTexture(n.TEXTURE0 + i) }); l(n, t, function () { return n.bindTexture(n.TEXTURE_2D, null) }) }, getProgramUniformLocationOrThrow: hit, getProgramUniformLocation: cit, bindTextureToProgramUniformSampler: lit, bindCanvasToFramebuffer: function (n, t) { l(n, t, function () { return n.bindFramebuffer(n.FRAMEBUFFER, null) }); l(n, t, function () { return n.viewport(0, 0, n.canvas.width, n.canvas.height) }); l(n, t, function () { return n.scissor(0, 0, n.canvas.width, n.canvas.height) }) }, bindColorTextureToFramebuffer: pc, unbindColorTextureFromFramebuffer: op, validateFramebuffer: as, getFramebufferErrorMessage: ait, getBatchDim: vs, getRowsCols: ys, getShapeAs3D: wc, getTextureShapeFromLogicalShape: yit, isReshapeFree: ps, getWebGLMaxTextureSize: pit, resetMaxTextureSize: function () { ac = null }, resetMaxTexturesInShader: function () { vc = null }, getMaxTexturesInShader: wit, getWebGLDisjointQueryTimerVersion: bit, hasExtension: tr, isWebGLVersionEnabled: sp, isCapableOfRenderingToFloatTexture: kit, isDownloadFloatTextureEnabled: dit, isWebGLFenceEnabled: git }); b = o(); b.registerFlag("HAS_WEBGL", function () { return b.getNumber("WEBGL_VERSION") > 0 }); b.registerFlag("WEBGL_VERSION", function () { return sp(2) ? 2 : sp(1) ? 1 : 0 }); b.registerFlag("WEBGL_BUFFER_SUPPORTED", function () { return 2 === b.get("WEBGL_VERSION") }); b.registerFlag("WEBGL_CPU_FORWARD", function () { return !0 }); b.registerFlag("WEBGL_FORCE_F16_TEXTURES", function () { return !1 }); b.registerFlag("WEBGL_PACK", function () { return b.getBool("HAS_WEBGL") }); b.registerFlag("WEBGL_PACK_NORMALIZATION", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_PACK_CLIP", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_PACK_DEPTHWISECONV", function () { return !1 }); b.registerFlag("WEBGL_PACK_BINARY_OPERATIONS", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_PACK_UNARY_OPERATIONS", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_PACK_REDUCE", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_LAZILY_UNPACK", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_CONV_IM2COL", function () { return b.getBool("WEBGL_PACK") }); b.registerFlag("WEBGL_MAX_TEXTURE_SIZE", function () { return pit(b.getNumber("WEBGL_VERSION")) }); b.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER", function () { return wit(b.getNumber("WEBGL_VERSION")) }); b.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION", function () { var n = b.getNumber("WEBGL_VERSION"); return 0 === n ? 0 : bit(n) }); b.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE", function () { return b.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") > 0 && (n = navigator.userAgent || navigator.vendor || window.opera, !(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0, 4)))); var n }); b.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE", function () { return kit(b.getNumber("WEBGL_VERSION")) }); b.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED", function () { return !b.getBool("WEBGL_FORCE_F16_TEXTURES") && b.getBool("WEBGL_RENDER_FLOAT32_CAPABLE") }); b.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED", function () { return dit(b.getNumber("WEBGL_VERSION")) }); b.registerFlag("WEBGL_FENCE_API_ENABLED", function () { return git(b.getNumber("WEBGL_VERSION")) }); b.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM", function () { return b.getBool("WEBGL_RENDER_FLOAT32_ENABLED") ? 4 : 0 }); htt = cp; var ui = u({ complex_: function (n, i) { var u = t(n, "real", "complex"), f = t(i, "imag", "complex"); return rt(u.shape, f.shape, "real and imag shapes, " + u.shape + " and " + f.shape + ", must match in call to tf.complex()."), r.runKernelFunc(function (n) { return n.complex(u, f) }, { $real: u, $imag: f }) } }), ir = u({ real_: function (n) { var i = t(n, "input", "real"); return r.runKernelFunc(function (n) { return n.real(i) }, { $input: i }) } }), yr = u({ imag_: function (n) { var i = t(n, "input", "imag"); return r.runKernelFunc(function (n) { return n.imag(i) }, { $input: i }) } }); var ap = u({ onesLike_: function (n) { var i = t(n, "x", "onesLike"), u, f; return "complex64" === i.dtype ? (u = ap(ir(i)), f = it(yr(i)), ui(u, f)) : r.runKernelFunc(function (n) { return n.onesLike(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), it = u({ zerosLike_: function (n) { var i = t(n, "x", "zerosLike"); return r.runKernelFunc(function (n) { return n.zerosLike(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), wt = u({ concat_: function (n, t) { var u, f, e, o, s; return (void 0 === t && (t = 0), i(n.length >= 1, function () { return "Pass at least one tensor to concat" }), u = ws(n, "tensors", "concat"), "complex64" === u[0].dtype && u.forEach(function (n) { if ("complex64" !== n.dtype) throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype " + n.dtype + ". "); }), t = pt(t, u[0].shape)[0], f = ue(u.map(function (n) { return n.shape }), t), 0 === w(f)) ? fi([], f) : 1 === (u = u.filter(function (n) { return n.size > 0 })).length ? u[0] : (e = u.map(function (n) { return n.shape }), urt(e, t), o = u, s = { axis: t }, r.runKernelFunc(function (n) { return n.concat(u, t) }, o, function (n) { var i = e.map(function (n) { return n[t] }); return nl(n, i, t).map(function (n) { return function () { return n } }) }, "Concat", s)) } }), hrt = u({ concat1d_: function (n) { return wt(n, 0) } }), crt = u({ concat2d_: function (n, t) { return wt(n, t) } }), lrt = u({ concat3d_: function (n, t) { return wt(n, t) } }), art = u({ concat4d_: function (n, t) { return wt(n, t) } }), nl = u({ split_: function (n, u, f) { void 0 === f && (f = 0); var o, e = t(n, "x", "split"); return f = pt(f, e.shape)[0], "number" == typeof u ? (i(e.shape[f] % u == 0, function () { return "Number of splits must evenly divide the axis." }), o = new Array(u).fill(e.shape[f] / u)) : (i(e.shape[f] === u.reduce(function (n, t) { return n + t }), function () { return "The sum of sizes must match the size of the axis dimension." }), o = u), r.runKernelFunc(function (n) { return n.split(e, o, f) }, { $x: e }, function (n) { return { $x: function () { return wt(n, f) } } }) } }); var ekt = ee(function (n) { !function (n, t, i) { function f(n) { var i, t = this, r = (i = 4022871197, function (n) { var r, t; for (n = n.toString(), r = 0; r < n.length; r++)t = .025196032824169379 * (i += n.charCodeAt(r)), t -= i = t >>> 0, i = (t *= i) >>> 0, i += 4294967296 * (t -= i); return 23283064365386963e-26 * (i >>> 0) }); t.next = function () { var n = 2091639 * t.s0 + 23283064365386963e-26 * t.c; return t.s0 = t.s1, t.s1 = t.s2, t.s2 = n - (t.c = 0 | n) }; t.c = 1; t.s0 = r(" "); t.s1 = r(" "); t.s2 = r(" "); t.s0 -= r(n); t.s0 < 0 && (t.s0 += 1); t.s1 -= r(n); t.s1 < 0 && (t.s1 += 1); t.s2 -= r(n); t.s2 < 0 && (t.s2 += 1); r = null } function u(n, t) { return t.c = n.c, t.s0 = n.s0, t.s1 = n.s1, t.s2 = n.s2, t } function r(n, t) { var r = new f(n), e = t && t.state, i = r.next; return i.int32 = function () { return 4294967296 * r.next() | 0 }, i.double = function () { return i() + 11102230246251565e-32 * (2097152 * i() | 0) }, i.quick = i, e && ("object" == typeof e && u(e, r), i.state = function () { return u(r, {}) }), i } t && t.exports ? t.exports = r : i && i.amd ? i(function () { return r }) : this.alea = r }(0, n, !1) }), okt = ee(function (n) { !function (n, t, i) { function f(n) { var t = this, r = "", i; for (t.x = 0, t.y = 0, t.z = 0, t.w = 0, t.next = function () { var n = t.x ^ t.x << 11; return t.x = t.y, t.y = t.z, t.z = t.w, t.w ^= t.w >>> 19 ^ n ^ n >>> 8 }, n === (0 | n) ? t.x = n : r += n, i = 0; i < r.length + 64; i++)t.x ^= 0 | r.charCodeAt(i), t.next() } function u(n, t) { return t.x = n.x, t.y = n.y, t.z = n.z, t.w = n.w, t } function r(n, t) { var i = new f(n), e = t && t.state, r = function () { return (i.next() >>> 0) / 4294967296 }; return r.double = function () { do var n = ((i.next() >>> 11) + (i.next() >>> 0) / 4294967296) / 2097152; while (0 === n); return n }, r.int32 = i.next, r.quick = r, e && ("object" == typeof e && u(e, i), r.state = function () { return u(i, {}) }), r } t && t.exports ? t.exports = r : i && i.amd ? i(function () { return r }) : this.xor128 = r }(0, n, !1) }), skt = ee(function (n) { !function (n, t, i) { function f(n) { var t = this, r = "", i; for (t.next = function () { var n = t.x ^ t.x >>> 2; return t.x = t.y, t.y = t.z, t.z = t.w, t.w = t.v, (t.d = t.d + 362437 | 0) + (t.v = t.v ^ t.v << 4 ^ n ^ n << 1) | 0 }, t.x = 0, t.y = 0, t.z = 0, t.w = 0, t.v = 0, n === (0 | n) ? t.x = n : r += n, i = 0; i < r.length + 64; i++)t.x ^= 0 | r.charCodeAt(i), i == r.length && (t.d = t.x << 10 ^ t.x >>> 4), t.next() } function u(n, t) { return t.x = n.x, t.y = n.y, t.z = n.z, t.w = n.w, t.v = n.v, t.d = n.d, t } function r(n, t) { var i = new f(n), e = t && t.state, r = function () { return (i.next() >>> 0) / 4294967296 }; return r.double = function () { do var n = ((i.next() >>> 11) + (i.next() >>> 0) / 4294967296) / 2097152; while (0 === n); return n }, r.int32 = i.next, r.quick = r, e && ("object" == typeof e && u(e, i), r.state = function () { return u(i, {}) }), r } t && t.exports ? t.exports = r : i && i.amd ? i(function () { return r }) : this.xorwow = r }(0, n, !1) }), hkt = ee(function (n) { !function (n, t, i) { function f(n) { var t = this; t.next = function () { var n, i, u = t.x, r = t.i; return n = u[r], i = (n ^= n >>> 7) ^ n << 24, i ^= (n = u[r + 1 & 7]) ^ n >>> 10, i ^= (n = u[r + 3 & 7]) ^ n >>> 3, i ^= (n = u[r + 4 & 7]) ^ n << 7, n = u[r + 7 & 7], i ^= (n ^= n << 13) ^ n << 9, u[r] = i, t.i = r + 1 & 7, i }, function (n, t) { var i, r = []; if (t === (0 | t)) r[0] = t; else for (t = "" + t, i = 0; i < t.length; ++i)r[7 & i] = r[7 & i] << 15 ^ t.charCodeAt(i) + r[i + 1 & 7] << 13; for (; r.length < 8;)r.push(0); for (i = 0; i < 8 && 0 === r[i]; ++i); for (8 == i ? r[7] = -1 : r[i], n.x = r, n.i = 0, i = 256; i > 0; --i)n.next() }(t, n) } function u(n, t) { return t.x = n.x.slice(), t.i = n.i, t } function r(n, t) { null == n && (n = +new Date); var i = new f(n), e = t && t.state, r = function () { return (i.next() >>> 0) / 4294967296 }; return r.double = function () { do var n = ((i.next() >>> 11) + (i.next() >>> 0) / 4294967296) / 2097152; while (0 === n); return n }, r.int32 = i.next, r.quick = r, e && (e.x && u(e, i), r.state = function () { return u(i, {}) }), r } t && t.exports ? t.exports = r : i && i.amd ? i(function () { return r }) : this.xorshift7 = r }(0, n, !1) }), ckt = ee(function (n) { !function (n, t, i) { function f(n) { var t = this; t.next = function () { var i, n, u = t.w, f = t.X, r = t.i; return t.w = u = u + 1640531527 | 0, n = f[r + 34 & 127], i = f[r = r + 1 & 127], n ^= n << 13, i ^= i << 17, n ^= n >>> 15, i ^= i >>> 12, n = f[r] = n ^ i, t.i = r, n + (u ^ u >>> 16) | 0 }, function (n, t) { var f, i, r, u, o, e = [], s = 128; for (t === (0 | t) ? (i = t, t = null) : (t += "\0", i = 0, s = Math.max(s, t.length)), r = 0, u = -32; u < s; ++u)t && (i ^= t.charCodeAt((u + 32) % t.length)), 0 === u && (o = i), i ^= i << 10, i ^= i >>> 15, i ^= i << 4, i ^= i >>> 13, u >= 0 && (o = o + 1640531527 | 0, r = 0 == (f = e[127 & u] ^= i + o) ? r + 1 : 0); for (r >= 128 && (e[127 & (t && t.length || 0)] = -1), r = 127, u = 512; u > 0; --u)i = e[r + 34 & 127], f = e[r = r + 1 & 127], i ^= i << 13, f ^= f << 17, i ^= i >>> 15, f ^= f >>> 12, e[r] = i ^ f; n.w = o; n.X = e; n.i = r }(t, n) } function u(n, t) { return t.i = n.i, t.w = n.w, t.X = n.X.slice(), t } function r(n, t) { null == n && (n = +new Date); var i = new f(n), e = t && t.state, r = function () { return (i.next() >>> 0) / 4294967296 }; return r.double = function () { do var n = ((i.next() >>> 11) + (i.next() >>> 0) / 4294967296) / 2097152; while (0 === n); return n }, r.int32 = i.next, r.quick = r, e && (e.X && u(e, i), r.state = function () { return u(i, {}) }), r } t && t.exports ? t.exports = r : i && i.amd ? i(function () { return r }) : this.xor4096 = r }(0, n, !1) }), lkt = ee(function (n) { !function (n, t, i) { function f(n) { var t = this, r = "", i; for (t.next = function () { var n = t.b, i = t.c, r = t.d, u = t.a; return n = n << 25 ^ n >>> 7 ^ i, i = i - r | 0, r = r << 24 ^ r >>> 8 ^ u, u = u - n | 0, t.b = n = n << 20 ^ n >>> 12 ^ i, t.c = i = i - r | 0, t.d = r << 16 ^ i >>> 16 ^ u, t.a = u - n | 0 }, t.a = 0, t.b = 0, t.c = -1640531527, t.d = 1367130551, n === Math.floor(n) ? (t.a = n / 4294967296 | 0, t.b = 0 | n) : r += n, i = 0; i < r.length + 20; i++)t.b ^= 0 | r.charCodeAt(i), t.next() } function u(n, t) { return t.a = n.a, t.b = n.b, t.c = n.c, t.d = n.d, t } function r(n, t) { var i = new f(n), e = t && t.state, r = function () { return (i.next() >>> 0) / 4294967296 }; return r.double = function () { do var n = ((i.next() >>> 11) + (i.next() >>> 0) / 4294967296) / 2097152; while (0 === n); return n }, r.int32 = i.next, r.quick = r, e && ("object" == typeof e && u(e, i), r.state = function () { return u(i, {}) }), r } t && t.exports ? t.exports = r : i && i.amd ? i(function () { return r }) : this.tychei = r }(0, n, !1) }), oe = ee(function (n) { !function (t, i) { function a(n, u, a) { var d = [], g = s(function n(t, i) { var u, r = [], f = typeof t; if (i && "object" == f) for (u in t) try { r.push(n(t[u], i - 1)) } catch (n) { } return r.length ? r : "string" == f ? t : t + "\0" }((u = 1 == u ? { entropy: !0 } : u || {}).entropy ? [n, e(t)] : null == n ? function () { var n, i, u; try { return o && (n = o.randomBytes) ? n = n(r) : (n = new Uint8Array(r), (f.crypto || f.msCrypto).getRandomValues(n)), e(n) } catch (n) { return i = f.navigator, u = i && i.plugins, [+new Date, f, u, f.screen, e(t)] } }() : n, 3), d), b = new w(d), k = function () { for (var n = b.g(h), i = y, t = 0; n < l;)n = (n + t) * r, i *= r, t = b.g(1); for (; n >= p;)n /= 2, i /= 2, t >>>= 1; return (n + t) / i }; return k.int32 = function () { return 0 | b.g(4) }, k.quick = function () { return b.g(4) / 4294967296 }, k.double = k, s(e(b.S), t), (u.pass || a || function (n, t, r, u) { return u && (u.S && v(u, b), n.state = function () { return v(b, {}) }), r ? (i[c] = n, t) : n })(k, g, "global" in u ? u.global : this == i, u.state) } function w(n) { var s, e = n.length, t = this, i = 0, o = t.i = t.j = 0, f = t.S = []; for (e || (n = [e++]); i < r;)f[i] = i++; for (i = 0; i < r; i++)f[i] = f[o = u & o + n[i % e] + (s = f[i])], f[o] = s; (t.g = function (n) { for (var o, s = 0, f = t.i, e = t.j, i = t.S; n--;)o = i[f = u & f + 1], s = s * r + i[u & (i[f] = i[e = u & e + o]) + (i[e] = o)]; return t.i = f, t.j = e, s })(r) } function v(n, t) { return t.i = n.i, t.j = n.j, t.S = n.S.slice(), t } function s(n, t) { for (var f, r = n + "", i = 0; i < r.length;)t[u & i] = u & (f ^= 19 * t[u & i]) + r.charCodeAt(i++); return e(t) } function e(n) { return String.fromCharCode.apply(0, n) } var o, f = this, r = 256, h = 6, c = "random", y = i.pow(r, h), l = i.pow(2, 52), p = 2 * l, u = r - 1; if (i["seed" + c] = a, s(i.random(), t), n.exports) { n.exports = a; try { o = require("crypto") } catch (n) { } } }([], Math) }); oe.alea = ekt; oe.xor128 = okt; oe.xorwow = skt; oe.xorshift7 = hkt; oe.xor4096 = ckt; oe.tychei = lkt; var tl = oe.alea, vp = function () { function n(n, t, i, r, u) { this.mean = n; this.stdDev = t; this.dtype = i; this.nextVal = NaN; this.truncated = r; this.truncated && (this.upper = this.mean + 2 * this.stdDev, this.lower = this.mean - 2 * this.stdDev); var f = u || Math.random(); this.random = tl(f.toString()) } return n.prototype.nextValue = function () { var o, t, i, r, e; if (!isNaN(this.nextVal)) return o = this.nextVal, this.nextVal = NaN, o; for (r = !1; !r;) { var u = void 0, f = void 0, n = void 0; do n = (u = 2 * this.random() - 1) * u + (f = 2 * this.random() - 1) * f; while (n >= 1 || 0 === n); e = Math.sqrt(-2 * Math.log(n) / n); t = this.mean + this.stdDev * u * e; i = this.mean + this.stdDev * f * e; this.truncated && !this.isValidTruncated(t) || (r = !0) } return this.truncated && !this.isValidTruncated(i) || (this.nextVal = this.convertValue(i)), this.convertValue(t) }, n.prototype.convertValue = function (n) { return null == this.dtype || "float32" === this.dtype ? n : Math.round(n) }, n.prototype.isValidTruncated = function (n) { return n <= this.upper && n >= this.lower }, n }(), akt = function () { function n(n, t, i, r) { this.alpha = n; this.beta = 1 / t; this.dtype = i; var u = r || Math.random(); this.randu = tl(u.toString()); this.randn = new vp(0, 1, i, !1, this.randu()); this.d = n < 1 ? n + 2 / 3 : n - 1 / 3; this.c = 1 / Math.sqrt(9 * this.d) } return n.prototype.nextValue = function () { for (var i, r, u, t, f, n; ;) { do t = this.randn.nextValue(), n = 1 + this.c * t; while (n <= 0); if (n *= n * n, r = 1 - .331 * (i = t * t) * i, u = .5 * i + this.d * (1 - n + Math.log(n)), (f = this.randu()) < r || Math.log(f) < u) break } return n = 1 / this.beta * this.d * n, this.alpha < 1 && (n *= Math.pow(this.randu(), 1 / this.alpha)), this.convertValue(n) }, n.prototype.convertValue = function (n) { return "float32" === this.dtype ? n : Math.round(n) }, n }(), vkt = function () { function n(n, t, i, r) { var u = this; if (void 0 === n && (n = 0), void 0 === t && (t = 1), this.canReturnFloat = function () { return null == u.dtype || "float32" === u.dtype }, this.min = n, this.range = t - n, this.dtype = i, null == r && (r = Math.random()), "number" == typeof r && (r = r.toString()), !this.canReturnFloat() && this.range <= 1) throw new Error("The difference between " + n + " - " + t + " <= 1 and dtype is not float"); this.random = tl(r) } return n.prototype.convertValue = function (n) { return this.canReturnFloat() ? n : Math.round(n) }, n.prototype.nextValue = function () { return this.convertValue(this.min + this.range * this.random()) }, n }(); var yp = u({ batchToSpaceND_: function (n, u, f) { var e = t(n, "x", "batchToSpaceND"), o = u.reduce(function (n, t) { return n * t }); return i(e.rank >= 1 + u.length, function () { return "input rank is " + e.rank + " but should be > than blockShape.length " + u.length }), i(f.length === u.length, function () { return "crops.length is " + f.length + " but should be equal to blockShape.length  " + u.length }), i(e.shape[0] % o == 0, function () { return "input tensor batch is " + e.shape[0] + " but is not divisible by the product of the elements of blockShape " + u.join(" * ") + " === " + o }), r.runKernelFunc(function (n) { return n.batchToSpaceND(e, u, f) }, { $x: e }, function (n) { return { $x: function () { return n.spaceToBatchND(u, f) } } }) } }), yrt = u({ broadcastTo_: function (n, i) { var u = t(n, "broadcastTo", "x"), h = u.shape, e, o, f, s; if (i.some(function (n) { return !(n > 0) || n % 1 != 0 })) throw new Error("broadcastTo(): Invalid broadcast shape [" + i + "]."); if (i.length < u.rank) throw new Error("broadcastTo(): shape.length=" + i.length + " < input.rank=" + u.rank + "."); if (i.length > u.rank) { for (e = u.shape.slice(); e.length < i.length;)e.unshift(1); u = u.reshape(e) } for (o = Array.from(i), f = i.length - 1; f >= 0; f--)if (u.shape[f] === i[f]) o[f] = 1; else if (1 !== u.shape[f]) throw new Error("broadcastTo(): [" + h + "] cannot be broadcast to [" + i + "]."); return s = o.map(function (n, t) { return n > 1 ? t : -1 }).filter(function (n) { return n >= 0 }), 0 === s.length ? u.clone() : r.runKernelFunc(function (n) { return n.tile(u, o) }, { input: u }, function (n) { return { input: function () { return n.sum(s, !0) } } }) } }), prt = u({ cast_: function (n, i) { var u = t(n, "x", "cast"), f; if (!ntt(i)) throw new Error("Failed to cast to unknown dtype " + i); if ("string" === i && "string" !== u.dtype || "string" !== i && "string" === u.dtype) throw new Error("Only strings can be casted to strings"); return f = { dtype: i }, r.runKernelFunc(function (n) { return n.cast(u, i) }, { x: u }, function (n) { return { x: function () { return n.clone() } } }, "Cast", f) } }), wrt = u({ clone_: function (n) { var i = t(n, "x", "clone", null); return r.runKernelFunc(function () { return r.makeTensorFromDataId(i.dataId, i.shape, i.dtype) }, { $x: i }, function (n) { return { $x: function () { return n.toFloat() } } }) } }), brt = u({ cumsum_: function (n, i, u, f) { var c, s; void 0 === i && (i = 0); void 0 === u && (u = !1); void 0 === f && (f = !1); var e = t(n, "x", "cumsum"), o = ar([i |= 0], e.rank), h = e; return null != o && (h = e.transpose(o)), c = vr(1, e.rank)[0], s = r.runKernelFunc(function (n) { return n.cumsum(h, c, u, f) }, { permutedX: h }, function (n) { return { permutedX: function () { return n.cumsum(i, u, !f) } } }), null != o && (s = s.transpose(o)), s } }), krt = u({ depthToSpace_: function (n, u, f) { void 0 === f && (f = "NHWC"); var e = t(n, "x", "depthToSpace"), o = "NHWC" === f ? e.shape[1] : e.shape[2], s = "NHWC" === f ? e.shape[2] : e.shape[3], h = "NHWC" === f ? e.shape[3] : e.shape[1]; return i(o * u >= 0, function () { return "Negative dimension size caused by overflow when multiplying\n      " + o + " and " + u + "  for depthToSpace with input shape\n      " + e.shape }), i(s * u >= 0, function () { return "Negative dimension size caused by overflow when multiplying\n      " + s + " and " + u + " for depthToSpace with input shape\n          " + e.shape }), i(h % (u * u) == 0, function () { return "Dimension size must be evenly divisible by " + u * u + " but is " + h + " for depthToSpace with input shape " + e.shape }), r.runKernelFunc(function (n) { return n.depthToSpace(e, u, f) }, { $x: e }) } }), rr = u({ expandDims_: function (n, r) { var u, f; return void 0 === r && (r = 0), u = t(n, "x", "expandDims", null), i(r <= u.rank, function () { return "Axis must be <= rank of the tensor" }), f = u.shape.slice(), r < 0 && (i(-(u.rank + 1) <= r, function () { return "Axis must be in the interval [" + -(u.rank + 1) + ", " + u.rank + "]" }), r = u.rank + r + 1), f.splice(r, 0, 1), or(u, f) } }), pp = u({ eye_: function (n, t, i, r) { var u; void 0 === r && (r = "float32"); null == t && (t = n); for (var e = k([n, t], r), o = n <= t ? n : t, f = 0; f < o; ++f)e.set(1, f, f); if (u = e.toTensor().as2D(n, t), null == i) return u; if (1 === i.length) return se(rr(u, 0), [i[0], 1, 1]); if (2 === i.length) return se(rr(rr(u, 0), 0), [i[0], i[1], 1, 1]); if (3 === i.length) return se(rr(rr(rr(u, 0), 0), 0), [i[0], i[1], i[2], 1, 1]); throw new Error("eye() currently supports only 1D and 2D batchShapes, but received " + i.length + "D."); } }), drt = u({ multinomial_: function (n, i, u, f) { var s, h; void 0 === f && (f = !1); var e = t(n, "logits", "multinomial"), c = e.size, o = e.rank; if (c < 2) throw new Error("Error in multinomial: you need at least 2 outcomes, but got " + c + "."); if (o > 2) throw new Error("Rank of probabilities must be 1 or 2, but is " + o); return u = u || Math.random(), s = 1 === o ? e.as2D(1, -1) : e, h = r.runKernelFunc(function (n) { return n.multinomial(s, f, i, u) }, { logits2D: s }), 1 === o ? h.as1D() : h } }), il = u({ oneHot_: function (n, i, u, f) { if (void 0 === u && (u = 1), void 0 === f && (f = 0), i < 2) throw new Error("Error in oneHot: depth must be >=2, but it is " + i); var e = t(n, "indices", "oneHot", "int32"), o = e.shape.concat([i]); return e = e.flatten(), r.runKernelFunc(function (n) { return n.oneHot(e, i, u, f) }, { $indices: e }, function () { return { $indices: function () { return ot(e.shape, "float32") } } }).reshape(o) } }), cf = u({ pad_: function (n, i, u) { var f, e; if (void 0 === u && (u = 0), f = t(n, "x", "pad"), 0 === f.rank) throw new Error("pad(scalar) is not defined. Pass non-scalar to pad"); return e = { paddings: i, constantValue: u }, r.runKernelFunc(function (n) { return n.pad(f, i, u) }, { x: f }, function (n) { var t = i.map(function (n) { return n[0] }); return { x: function () { return n.slice(t, f.shape) } } }, "PadV2", e) } }), grt = u({ pad1d_: function (n, t, r) { return void 0 === r && (r = 0), i(2 === t.length, function () { return "Invalid number of paddings. Must be length of 2." }), cf(n, [t], r) } }), nut = u({ pad2d_: function (n, t, r) { return void 0 === r && (r = 0), i(2 === t.length && 2 === t[0].length && 2 === t[1].length, function () { return "Invalid number of paddings. Must be length of 2 each." }), cf(n, t, r) } }), tut = u({ pad3d_: function (n, t, r) { return void 0 === r && (r = 0), i(3 === t.length && 2 === t[0].length && 2 === t[1].length && 2 === t[2].length, function () { return "Invalid number of paddings. Must be length of 2 each." }), cf(n, t, r) } }), iut = u({ pad4d_: function (n, t, r) { return void 0 === r && (r = 0), i(4 === t.length && 2 === t[0].length && 2 === t[1].length && 2 === t[2].length && 2 === t[3].length, function () { return "Invalid number of paddings. Must be length of 2 each." }), cf(n, t, r) } }), rut = u({ rand_: function (n, t, i) { var f = w(n), u = null, e; if (null == i || "float32" === i) u = new Float32Array(f); else if ("int32" === i) u = new Int32Array(f); else { if ("bool" !== i) throw new Error("Unknown data type " + i); u = new Uint8Array(f) } for (e = 0; e < f; e++)u[e] = t(); return r.makeTensor(u, n, i) } }), uut = u({ randomNormal_: function (n, t, i, r, u) { if (void 0 === t && (t = 0), void 0 === i && (i = 1), null != r && "bool" === r) throw new Error("Unsupported data type " + r); for (var o = new vp(t, i, r, !1, u), f = k(n, r), e = 0; e < f.values.length; e++)f.values[e] = o.nextValue(); return f.toTensor() } }), fut = u({ randomGamma_: function (n, t, i, r, u) { if (void 0 === i && (i = 1), void 0 === r && (r = "float32"), null == i && (i = 1), null == r && (r = "float32"), "float32" !== r && "int32" !== r) throw new Error("Unsupported data type " + r); for (var o = new akt(t, i, r, u), f = k(n, r), e = 0; e < f.values.length; e++)f.values[e] = o.nextValue(); return f.toTensor() } }), wp = u({ randomUniform_: function (n, t, i, r, u) { void 0 === t && (t = 0); void 0 === i && (i = 1); void 0 === r && (r = "float32"); for (var f = k(n, r), o = new vkt(t, i, null, u), e = 0; e < f.values.length; e++)f.values[e] = o.nextValue(); return f.toTensor() } }), or = u({ reshape_: function (n, u) { var f = t(n, "x", "reshape", null), e; return u = dn(u, f.size), i(f.size === w(u), function () { return "new shape and old shape must have the same number of elements." }), e = { shape: u }, r.runKernelFunc(function (n) { return n.reshape(f, u) }, { x: f }, function (n) { return { x: function () { return n.reshape(f.shape) } } }, "Reshape", e) } }), bp = u({ spaceToBatchND_: function (n, u, f) { var e = t(n, "x", "spaceToBatchND"); return i(e.rank >= 1 + u.length, function () { return "input rank " + e.rank + " should be > than [blockShape] " + u.length }), i(f.length === u.length, function () { return "paddings.shape[0] " + f.length + " must be equal to [blockShape] " + u.length }), i(e.shape.reduce(function (n, t, i) { return i > 0 && i <= u.length ? n && (t + f[i - 1][0] + f[i - 1][1]) % u[i - 1] == 0 : n }, !0), function () { return "input spatial dimensions " + e.shape.slice(1) + " with paddings " + f.toString() + " must be divisible by blockShapes " + u.toString() }), r.runKernelFunc(function (n) { return n.spaceToBatchND(e, u, f) }, { $x: e }, function (n) { return { $x: function () { return n.batchToSpaceND(u, f) } } }) } }), kp = u({ squeeze_: function (n, i) { var r = t(n, "x", "squeeze"); return or(r, rf(r.shape, i).newShape) } }), bi = u({ stack_: function (n, t) { var r, u; if (void 0 === t && (t = 0), r = ws(n, "tensors", "stack"), i(r.length >= 1, function () { return "Pass at least one tensor to tf.stack" }), 1 === r.length) return r[0].expandDims(t); var f = r[0].rank, e = r[0].shape, o = r[0].dtype; return i(t <= f, function () { return "Axis must be <= rank of the tensor" }), r.forEach(function (n) { rt(e, n.shape, "All tensors passed to stack must have matching shapes") }), r.forEach(function (n) { i(o === n.dtype, function () { return "All tensors passed to stack must have matching dtypes" }) }), u = r.map(function (n) { return n.expandDims(t) }), wt(u, t) } }), se = u({ tile_: function (n, u) { var f = t(n, "x", "tile", null), e, o; return i(f.rank === u.length, function () { return "Error in transpose: rank of input " + f.rank + " must match length of reps " + u + "." }), e = [f], o = { reps: u }, r.runKernelFunc(function (n, t) { var i = n.tile(f, u); return t([f]), i }, { x: f }, function (n, t) { var i = t[0]; return { x: function () { var f = it(i), t, r, e, o; if (1 === i.rank) for (t = 0; t < u[0]; ++t)f = f.add(n.slice([t * i.shape[0]], [i.shape[0]])); else if (2 === i.rank) for (t = 0; t < u[0]; ++t)for (r = 0; r < u[1]; ++r)f = f.add(n.slice([t * i.shape[0], r * i.shape[1]], [i.shape[0], i.shape[1]])); else if (3 === i.rank) for (t = 0; t < u[0]; ++t)for (r = 0; r < u[1]; ++r)for (e = 0; e < u[2]; ++e)f = f.add(n.slice([t * i.shape[0], r * i.shape[1], e * i.shape[2]], [i.shape[0], i.shape[1], i.shape[2]])); else { if (4 !== i.rank) throw new Error("Gradient for tile operation is not implemented for rank-" + i.rank + " tensors yet."); for (t = 0; t < u[0]; ++t)for (r = 0; r < u[1]; ++r)for (e = 0; e < u[2]; ++e)for (o = 0; o < u[3]; ++o)f = f.add(n.slice([t * i.shape[0], r * i.shape[1], e * i.shape[2], o * i.shape[3]], [i.shape[0], i.shape[1], i.shape[2], i.shape[3]])) } return f } } }, "Tile", o, e) } }), eut = u({ truncatedNormal_: function (n, t, i, r, u) { if (void 0 === t && (t = 0), void 0 === i && (i = 1), null != r && "bool" === r) throw new Error("Unsupported data type " + r); for (var o = new vp(t, i, r, !0, u), f = k(n, r), e = 0; e < f.values.length; e++)f.values[e] = o.nextValue(); return f.toTensor() } }), bt = u({ unstack_: function (n, u) { var f, e; return void 0 === u && (u = 0), u = u || 0, f = t(n, "x", "unstack"), i(u >= -f.shape.length && u < f.shape.length, function () { return "Axis = " + u + " is not in [-" + f.shape.length + ", " + f.shape.length + ")" }), u < 0 && (u += f.shape.length), e = { axis: u }, r.runKernelFunc(function (n) { return n.unstack(f, u) }, { x: f }, function (n) { return { x: function () { return bi(n, u) } } }, "Unpack", e) } }), out = function (n, r) { return y(this, void 0, void 0, function () { var f, e, o, v, c, s, l, a, u, h; return p(this, function (y) { switch (y.label) { case 0: return f = t(n, "x", "setdiff1d"), e = t(r, "y", "setdiff1d"), i(f.dtype === e.dtype, function () { return "x and y should have the same dtype, but got x (" + f.dtype + ") and y (" + e.dtype + ")." }), i(1 === f.rank, function () { return "x should be 1D tensor, but got x (" + f.shape + ")." }), i(1 === e.rank, function () { return "y should be 1D tensor, but got y (" + e.shape + ")." }), [4, f.data()]; case 1: return o = y.sent(), [4, e.data()]; case 2: for (v = y.sent(), c = new Set(v), s = 0, u = 0; u < o.length; u++)c.has(o[u]) || s++; for (l = new no([s], f.dtype), a = new no([s], "int32"), u = 0, h = 0; u < o.length; u++)c.has(o[u]) || (l.values[h] = o[u], a.values[h] = u, h++); return [2, [l.toTensor(), a.toTensor()]] } }) }) }; cut = Object.freeze({ prepareAndValidate: dp }); el = 30; vut = Object.freeze({ validateUpdateShape: lut, validateInput: aut, calculateShapes: ks }); but = Object.freeze({ assertParamsValid: yut, maskToAxes: gp, computeOutShape: sl, startForAxis: put, stopForAxis: wut, isSliceContinous: nw, computeFlatOffset: tw }); var fu = u({ softmax_: function (n, i) { void 0 === i && (i = -1); var u = t(n, "logits", "softmax", "float32"); if (-1 === i && (i = u.rank - 1), i !== u.rank - 1) throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank " + u.rank + " and dim was " + i); return r.runKernelFunc(function (n, t) { var r = n.softmax(u, i); return t([r]), r }, { logits: u }, function (n, t) { var r = t[0], u = n.mul(r); return { logits: function () { return u.sub(u.sum([i], !0).mul(r)) } } }, "Softmax", { dim: i }, [], [!0]) } }), dut = u({ logSoftmax_: function (n, i) { void 0 === i && (i = -1); var r = t(n, "logits", "logSoftmax"); if (-1 === i && (i = r.rank - 1), i !== r.rank - 1) throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank " + r.rank + " and axis was " + i); return ds(function (n, t) { var f = n.max(i, !0), r = n.sub(f), u = r.toFloat().sub(r.exp().sum(i, !0).log()); return t([u]), { value: u, gradFunc: function (n, t) { var r = t[0].exp(); return n.sub(n.sum(i, !0).mul(r)) } } })(r) } }), iw = function () { function n(n, t) { this.backend = n; this.dataMover = t; this.data = new WeakMap; this.dataIdsCount = 0 } return n.prototype.get = function (n) { return this.data.has(n) || this.dataMover.moveData(this.backend, n), this.data.get(n) }, n.prototype.set = function (n, t) { this.dataIdsCount++; this.data.set(n, t) }, n.prototype.has = function (n) { return this.data.has(n) }, n.prototype.delete = function (n) { return this.dataIdsCount--, this.data.delete(n) }, n.prototype.numDataIds = function () { return this.dataIdsCount }, n }(), rw = function () { function n() { } return n.prototype.time = function () { return f("time") }, n.prototype.read = function () { return f("read") }, n.prototype.readSync = function () { return f("readSync") }, n.prototype.numDataIds = function () { return f("numDataIds") }, n.prototype.disposeData = function () { return f("disposeData") }, n.prototype.write = function () { return f("write") }, n.prototype.move = function () { return f("move") }, n.prototype.memory = function () { return f("memory") }, n.prototype.floatPrecision = function () { return f("floatPrecision") }, n.prototype.epsilon = function () { return 32 === this.floatPrecision() ? 1e-7 : .0001 }, n.prototype.batchMatMul = function () { return f("batchMatMul") }, n.prototype.fusedBatchMatMul = function (n) { return n.a, n.b, n.transposeA, n.transposeB, n.bias, n.activation, n.preluActivationWeights, f("fusedBatchMatMul") }, n.prototype.slice = function () { return f("slice") }, n.prototype.stridedSlice = function () { return f("stridedSlice") }, n.prototype.unstack = function () { return f("unstack") }, n.prototype.reverse = function () { return f("reverse") }, n.prototype.concat = function () { return f("concat") }, n.prototype.neg = function () { return f("neg") }, n.prototype.add = function () { return f("add") }, n.prototype.addN = function () { return f("addN") }, n.prototype.subtract = function () { return f("subtract") }, n.prototype.multiply = function () { return f("multiply") }, n.prototype.realDivide = function () { return f("realDivide") }, n.prototype.floorDiv = function () { return f("floorDiv") }, n.prototype.sum = function () { return f("sum") }, n.prototype.prod = function () { return f("prod") }, n.prototype.unsortedSegmentSum = function () { return f("unsortedSegmentSum") }, n.prototype.argMin = function () { return f("argMin") }, n.prototype.argMax = function () { return f("argMax") }, n.prototype.equal = function () { return f("equal") }, n.prototype.notEqual = function () { return f("notEqual") }, n.prototype.less = function () { return f("less") }, n.prototype.lessEqual = function () { return f("lessEqual") }, n.prototype.greater = function () { return f("greater") }, n.prototype.greaterEqual = function () { return f("greaterEqual") }, n.prototype.logicalNot = function () { return f("logicalNot") }, n.prototype.logicalAnd = function () { return f("logicalAnd") }, n.prototype.logicalOr = function () { return f("logicalOr") }, n.prototype.where = function () { return f("where") }, n.prototype.select = function () { return f("select") }, n.prototype.topk = function () { return f("topk") }, n.prototype.min = function () { return f("min") }, n.prototype.minimum = function () { return f("minimum") }, n.prototype.mod = function () { return f("mod") }, n.prototype.max = function () { return f("max") }, n.prototype.maximum = function () { return f("maximum") }, n.prototype.all = function () { return f("all") }, n.prototype.any = function () { return f("any") }, n.prototype.squaredDifference = function () { return f("squaredDifference") }, n.prototype.ceil = function () { return f("ceil") }, n.prototype.floor = function () { return f("floor") }, n.prototype.round = function () { return f("round") }, n.prototype.sign = function () { return f("sign") }, n.prototype.isNaN = function () { return f("isNaN") }, n.prototype.isInf = function () { return f("isInf") }, n.prototype.isFinite = function () { return f("isFinite") }, n.prototype.pow = function () { return f("pow") }, n.prototype.exp = function () { return f("exp") }, n.prototype.expm1 = function () { return f("expm1") }, n.prototype.softmax = function () { return f("softmax") }, n.prototype.log = function () { return f("log") }, n.prototype.log1p = function () { return f("log1p") }, n.prototype.sqrt = function () { return f("sqrt") }, n.prototype.rsqrt = function () { return f("rsqrt") }, n.prototype.square = function () { return f("square") }, n.prototype.reciprocal = function () { return f("reciprocal") }, n.prototype.relu = function () { return f("relu") }, n.prototype.relu6 = function () { return f("relu6") }, n.prototype.prelu = function () { return f("prelu") }, n.prototype.elu = function () { return f("elu") }, n.prototype.eluDer = function () { return f("eluDer") }, n.prototype.selu = function () { return f("selu") }, n.prototype.int = function () { return f("int") }, n.prototype.clip = function () { return f("clip") }, n.prototype.abs = function () { return f("abs") }, n.prototype.complexAbs = function () { return f("complexAbs") }, n.prototype.sigmoid = function () { return f("sigmoid") }, n.prototype.softplus = function () { return f("softplus") }, n.prototype.sin = function () { return f("sin") }, n.prototype.cos = function () { return f("cos") }, n.prototype.tan = function () { return f("tan") }, n.prototype.asin = function () { return f("asin") }, n.prototype.acos = function () { return f("acos") }, n.prototype.atan = function () { return f("atan") }, n.prototype.atan2 = function () { return f("atan2") }, n.prototype.sinh = function () { return f("sinh") }, n.prototype.cosh = function () { return f("cosh") }, n.prototype.tanh = function () { return f("tanh") }, n.prototype.asinh = function () { return f("asinh") }, n.prototype.acosh = function () { return f("acosh") }, n.prototype.atanh = function () { return f("atanh") }, n.prototype.erf = function () { return f("erf") }, n.prototype.step = function () { return f("step") }, n.prototype.fusedConv2d = function (n) { return n.input, n.filter, n.convInfo, n.bias, n.activation, n.preluActivationWeights, f("fusedConv2d") }, n.prototype.conv2d = function () { return f("conv2d") }, n.prototype.conv2dDerInput = function () { return f("conv2dDerInput") }, n.prototype.conv2dDerFilter = function () { return f("conv2dDerFilter") }, n.prototype.fusedDepthwiseConv2D = function (n) { return n.input, n.filter, n.convInfo, n.bias, n.activation, n.preluActivationWeights, f("fusedDepthwiseConv2D") }, n.prototype.depthwiseConv2D = function () { return f("depthwiseConv2D") }, n.prototype.depthwiseConv2DDerInput = function () { return f("depthwiseConv2DDerInput") }, n.prototype.depthwiseConv2DDerFilter = function () { return f("depthwiseConv2DDerFilter") }, n.prototype.conv3d = function () { return f("conv3d") }, n.prototype.conv3dDerInput = function () { return f("conv3dDerInput") }, n.prototype.conv3dDerFilter = function () { return f("conv3dDerFilter") }, n.prototype.maxPool = function () { return f("maxPool") }, n.prototype.maxPoolBackprop = function () { return f("maxPoolBackprop") }, n.prototype.avgPool = function () { return f("avgPool") }, n.prototype.avgPoolBackprop = function () { return f("avgPoolBackprop") }, n.prototype.avgPool3d = function () { return f("avgPool3d") }, n.prototype.avgPool3dBackprop = function () { return f("avgPool3dBackprop") }, n.prototype.maxPool3d = function () { return f("maxPool3d") }, n.prototype.maxPool3dBackprop = function () { return f("maxPool3dBackprop") }, n.prototype.reshape = function () { return f("reshape") }, n.prototype.cast = function () { return f("cast") }, n.prototype.tile = function () { return f("tile") }, n.prototype.pad = function () { return f("pad") }, n.prototype.transpose = function () { return f("transpose") }, n.prototype.gather = function () { return f("gather") }, n.prototype.gatherND = function () { return f("gatherND") }, n.prototype.scatterND = function () { return f("scatterND") }, n.prototype.batchToSpaceND = function () { return f("batchToSpaceND") }, n.prototype.spaceToBatchND = function () { return f("spaceToBatchND") }, n.prototype.resizeBilinear = function () { return f("resizeBilinear") }, n.prototype.resizeBilinearBackprop = function () { return f("resizeBilinearBackprop") }, n.prototype.resizeNearestNeighbor = function () { return f("resizeNearestNeighbor") }, n.prototype.resizeNearestNeighborBackprop = function () { return f("resizeNearestNeighborBackprop") }, n.prototype.batchNormalization = function () { return f("batchNormalization") }, n.prototype.localResponseNormalization4D = function () { return f("localResponseNormalization4D") }, n.prototype.LRNGrad = function () { return f("LRNGrad") }, n.prototype.multinomial = function () { return f("multinomial") }, n.prototype.oneHot = function () { return f("oneHot") }, n.prototype.cumsum = function () { return f("cumsum") }, n.prototype.nonMaxSuppression = function () { return f("nonMaxSuppression") }, n.prototype.fft = function () { return f("fft") }, n.prototype.ifft = function () { return f("ifft") }, n.prototype.complex = function () { return f("complex") }, n.prototype.real = function () { return f("real") }, n.prototype.imag = function () { return f("imag") }, n.prototype.cropAndResize = function () { return f("cropAndResize") }, n.prototype.depthToSpace = function () { return f("depthToSpace") }, n.prototype.split = function () { return f("split") }, n.prototype.sparseToDense = function () { return f("sparseToDense") }, n.prototype.diag = function () { return f("diag") }, n.prototype.fill = function () { return f("fill") }, n.prototype.onesLike = function () { return f("onesLike") }, n.prototype.zerosLike = function () { return f("zerosLike") }, n.prototype.linspace = function () { return f("linspace") }, n.prototype.dispose = function () { return f("dispose") }, n }(); gut = Object.freeze({ castTensor: ew, reshapeTensor: al, linspaceImpl: ow, upcastType: ri, axesAreInnerMostDims: lp, combineLocations: rrt, computeOutAndReduceShapes: oi, expandShapeToKeepDim: vi, assertAxesAreInnerMostDims: wi, getAxesPermutation: ar, getUndoAxesPermutation: dc, getInnerMostAxes: vr, getBroadcastDims: au, getReductionAxes: kt, assertAndGetBroadcastShape: tt, assertParamsConsistent: urt, computeOutShape: ue, computePool2DInfo: to, computePool3DInfo: gs, computeConv2DInfo: lf, computeConv3DInfo: nh, computeDefaultPad: uw, tupleValuesAreOne: he, eitherStridesOrDilationsAreOne: pi, convertConv2DDataFormat: ll, PARALLELIZE_THRESHOLD: el, computeOptimalWindowSize: ol }); var rdt = function (n, t) { var i, r; this.outputShape = []; this.outputShape = n; this.variableNames = t.map(function (n, t) { return "T" + t }); i = []; this.variableNames.forEach(function (n) { i.push("float v" + n + " = get" + n + "AtOutCoords();") }); r = this.variableNames.map(function (n) { return "v" + n }).join(" + "); this.userCode = "\n      void main() {\n        " + i.join("\n        ") + "\n\n        float result = " + r + ";\n        setOutput(result);\n      }\n    " }, udt = function (n, t) { var i, r; this.outputShape = []; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = n; this.variableNames = t.map(function (n, t) { return "T" + t }); i = []; this.variableNames.forEach(function (n) { i.push("vec4 v" + n + " = get" + n + "AtOutCoords();") }); r = this.variableNames.map(function (n) { return "v" + n }).join(" + "); this.userCode = "\n      void main() {\n        " + i.join("\n        ") + "\n\n        vec4 result = " + r + ";\n        setOutput(result);\n      }\n    " }, fdt = function (n, t, i) { var u, f; this.variableNames = ["A"]; var r = n.windowSize, e = n.batchSize, o = n.inSize, s = Math.ceil(o / r); i || this.variableNames.push("bestIndicesA"); this.outputShape = [e, s]; u = "max" === t ? ">" : "<"; f = i ? "inOffset + i;" : "round(getBestIndicesA(batch, inOffset + i));"; this.userCode = "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * " + r + ";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < " + r + "; i++) {\n          int inIdx = " + f + ";\n          float candidate = getA(batch, inIdx);\n          if (candidate " + u + " bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    " }; vw = "\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"; var odt = "\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n", sdt = "\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n", hdt = "\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n", cdt = "\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n"; var ldt = function (n, t, r, u) { var p, l, o; this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !0; i(n.length > 2, function () { return "Packed arg" + (r.charAt(0).toUpperCase() + r.slice(1)) + " supports only inputs with rank above 2." }); p = n[n.length - 1]; l = Math.ceil(p / t); this.outputShape = n.slice(0, -1); l > 1 && this.outputShape.push(l); u || this.variableNames.push("bestIndicesA"); var v, s, y = this.outputShape, f = y.length, c = st(f), e = ki("coords", f); 1 === l ? (o = st(s = f + 1), v = "\n        " + o + " sourceLocR = " + o + "(" + e.join() + ", 0);\n        ++" + e[f - 1] + ";\n        " + o + " sourceLocG = " + o + "(" + e.join() + ", 0);\n        ++" + e[f - 2] + ";\n        " + o + " sourceLocA = " + o + "(" + e.join() + ", 0);\n        --" + e[f - 1] + ";\n        " + o + " sourceLocB = " + o + "(" + e.join() + ", 0);\n        --" + e[f - 2] + ";") : (s = f, v = "\n        " + c + " sourceLocR = coords;\n        ++" + e[f - 1] + ";\n        " + c + " sourceLocG = coords;\n        ++" + e[f - 2] + ";\n        " + c + " sourceLocA = coords;\n        --" + e[f - 1] + ";\n        " + c + " sourceLocB = coords;\n        --" + e[f - 2] + ";"); var h = ["x", "y", "z", "w", "u", "v"].slice(0, s), a = "." + h[s - 1], w = h.map(function (n) { return "int " + n }), b = ki("sourceLocR", s - 1).concat("inIdx.r"), k = ki("sourceLocG", s - 1).concat("inIdx.g"), d = ki("sourceLocB", s - 1).concat("inIdx.b"), g = ki("sourceLocA", s - 1).concat("inIdx.a"), tt = "max" === r ? "greaterThan" : "lessThan", it = u ? "" : "\n          inIdx = round(vec4(getBestIndicesAChannel(" + b.join() + "),\n                             getBestIndicesAChannel(" + k.join() + "),\n                             getBestIndicesAChannel(" + d.join() + "),\n                             getBestIndicesAChannel(" + g.join() + ")));", nt = "vec4(\n            getAChannel(" + b.join() + "),\n            hasNextCol ? getAChannel(" + k.join() + ") : 0.,\n            hasNextRow ? getAChannel(" + d.join() + ") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(" + g.join() + ") : 0.)", rt = u ? "" : "\n      float getBestIndicesAChannel(" + w.join() + ") {\n        return getChannel(getBestIndicesA(" + h.join() + "),\n                                          vec2(" + h.slice(-2).join() + "));\n      }"; this.userCode = "\n      float getAChannel(" + w.join() + ") {\n        return getChannel(getA(" + h.join() + "),\n                               vec2(" + h.slice(-2).join() + "));\n      }\n      " + rt + "\n      void main() {\n        " + c + " coords = getOutputCoords();\n        bool hasNextCol = " + e[f - 1] + " < " + (y[f - 1] - 1) + ";\n        bool hasNextRow = " + e[f - 2] + " < " + (y[f - 2] - 1) + ";\n        " + v + "\n        ivec4 srcIdx = ivec4(sourceLocR" + a + ", sourceLocG" + a + ",\n          sourceLocB" + a + ", sourceLocA" + a + ") * " + t + ";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = " + nt + ";\n\n        for (int i = 0; i < " + t + "; i++) {\n          inIdx = srcIdx;\n          " + it + "\n          vec4 candidate = " + nt + ";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(" + tt + "(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    " }, adt = function (n) { this.variableNames = ["dy"]; this.outputShape = n.inShape; var r = n.filterHeight, u = n.filterWidth, f = n.strideHeight, e = n.strideWidth, o = n.dilationHeight, s = n.dilationWidth, t = n.effectiveFilterHeight, i = n.effectiveFilterWidth, h = t - 1 - n.padInfo.top, c = i - 1 - n.padInfo.left, l = 1 / (r * u); this.userCode = "\n      const ivec2 pads = ivec2(" + h + ", " + c + ");\n      const float avgMultiplier = float(" + l + ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " + t + ";\n            wR += " + o + ") {\n          float dyR = float(dyRCorner + wR) / " + f + ".0;\n\n          if (dyR < 0.0 || dyR >= " + n.outHeight + ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < " + i + ";\n            wC+= " + s + ") {\n            float dyC = float(dyCCorner + wC) / " + e + ".0;\n\n            if (dyC < 0.0 || dyC >= " + n.outWidth + ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, vdt = function (n) { this.variableNames = ["dy"]; this.outputShape = n.inShape; var u = n.filterDepth, f = n.filterHeight, e = n.filterWidth, o = n.strideDepth, s = n.strideHeight, h = n.strideWidth, c = n.dilationDepth, l = n.dilationHeight, a = n.dilationWidth, t = n.effectiveFilterDepth, i = n.effectiveFilterHeight, r = n.effectiveFilterWidth, v = t - 1 - n.padInfo.front, y = i - 1 - n.padInfo.top, p = r - 1 - n.padInfo.left, w = 1 / (u * f * e); this.userCode = "\n      const ivec3 pads = ivec3(" + v + ", " + y + ", " + p + ");\n      const float avgMultiplier = float(" + w + ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < " + t + ";\n            wD += " + c + ") {\n          float dyD = float(dyDCorner + wD) / " + o + ".0;\n\n          if (dyD < 0.0 || dyD >= " + n.outDepth + ".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < " + i + ";\n              wR += " + l + ") {\n            float dyR = float(dyRCorner + wR) / " + s + ".0;\n\n            if (dyR < 0.0 || dyR >= " + n.outHeight + ".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < " + r + ";\n                wC += " + a + ") {\n              float dyC = float(dyCCorner + wC) / " + h + ".0;\n\n              if (dyC < 0.0 || dyC >= " + n.outWidth + ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, ydt = function (n, t, i, r, u, f) { var e, o; this.outputShape = []; this.variableNames = ["x", "mean", "variance"]; tt(n, t); tt(n, i); e = "0.0"; null != r && (tt(n, r), this.variableNames.push("offset"), e = "getOffsetAtOutCoords()"); o = "1.0"; null != u && (tt(n, u), this.variableNames.push("scale"), o = "getScaleAtOutCoords()"); this.outputShape = n; this.userCode = "\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = " + e + ";\n        float scale = " + o + ";\n        float inv = scale * inversesqrt(variance + float(" + f + "));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    " }, pdt = function (n, t, i, r, u, f) { var e, o; this.packedInputs = !0; this.packedOutput = !0; this.variableNames = ["x", "mean", "variance"]; tt(n, t); tt(n, i); e = "vec4(0.0)"; null != r && (tt(n, r), this.variableNames.push("offset"), e = "getOffsetAtOutCoords()"); o = "vec4(1.0)"; null != u && (tt(n, u), this.variableNames.push("scale"), o = "getScaleAtOutCoords()"); this.outputShape = n; this.userCode = "\n      void main() {\n        vec4 offset = " + e + ";\n        vec4 scale = " + o + ";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(" + f + "));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    " }, wdt = "return areal * breal - aimag * bimag;", bdt = "return areal * bimag + aimag * breal;", sft = function (n, t, i) { this.variableNames = ["AReal", "AImag", "BReal", "BImag"]; this.outputShape = tt(t, i); this.userCode = "\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        " + n + "\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    " }, yw = "return a + b;", pw = "return a - b;", hft = "return a * b;", cft = "return (a < 0.) ? b * a : a;", at = function (n, t, i) { this.variableNames = ["A", "B"]; this.outputShape = tt(t, i); this.userCode = "\n      float binaryOperation(float a, float b) {\n        " + n + "\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    " }, lft = "\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n", vu = function (n, t, i, r) { var u, f, e; void 0 === r && (r = !1); this.variableNames = ["A", "B"]; this.supportsBroadcasting = !0; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = tt(t, i); u = this.outputShape.length; f = ""; r && (0 === u || 1 === w(this.outputShape) ? f = "\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        " : (f = "\n          " + st(u) + " coords = getOutputCoords();\n        ", 1 === u) ? f += "\n            result.y = (coords + 1) >= " + this.outputShape[0] + " ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          " : (e = ki("coords", u), f += "\n            bool nextRowOutOfBounds =\n              (" + e[u - 2] + " + 1) >= " + this.outputShape[u - 2] + ";\n            bool nextColOutOfBounds =\n              (" + e[u - 1] + " + 1) >= " + this.outputShape[u - 1] + ";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")); this.userCode = "\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        " + n + "\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        " + f + "\n\n        setOutput(result);\n      }\n    " }, kdt = function () { function n(n) { this.variableNames = ["A"]; this.outputShape = n; this.userCode = "\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    " } return n.prototype.getCustomSetupFunc = function (n, t) { var i = this; return function (r, u) { null == i.minLoc && (i.minLoc = r.getUniformLocationNoThrow(u, "minVal"), i.maxLoc = r.getUniformLocationNoThrow(u, "maxVal")); r.gl.uniform1f(i.minLoc, n); r.gl.uniform1f(i.maxLoc, t) } }, n }(), ddt = function () { function n(n) { this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = n; this.userCode = "\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    " } return n.prototype.getCustomSetupFunc = function (n, t) { var i = this; return function (r, u) { null == i.minLoc && (i.minLoc = r.getUniformLocationNoThrow(u, "minVal"), i.maxLoc = r.getUniformLocationNoThrow(u, "maxVal")); r.gl.uniform1f(i.minLoc, n); r.gl.uniform1f(i.maxLoc, t) } }, n }(), gdt = function (n) { this.variableNames = ["real", "imag"]; this.outputShape = n; this.userCode = "\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    " }, ngt = function (n) { var t, i, r, u, f, e; for (this.outputShape = [], this.outputShape = ue(n, 1), this.variableNames = n.map(function (n, t) { return "T" + t }), t = new Array(n.length - 1), t[0] = n[0][1], i = 1; i < t.length; i++)t[i] = t[i - 1] + n[i][1]; for (r = ["if (yC < " + t[0] + ") setOutput(getT0(yR, yC));"], i = 1; i < t.length; i++)u = t[i - 1], r.push("else if (yC < " + t[i] + ") setOutput(getT" + i + "(yR, yC-" + u + "));"); f = t.length; e = t[t.length - 1]; r.push("else setOutput(getT" + f + "(yR, yC-" + e + "));"); this.userCode = "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        " + r.join("\n        ") + "\n      }\n    " }, tgt = function (n, t) { var u, f, l, v, a; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = []; this.outputShape = ue(n, t); var s = this.outputShape, i = s.length, y = st(i), r = ki("coords", i), o = ["x", "y", "z", "w", "u", "v"].slice(0, i); for (this.variableNames = n.map(function (n, t) { return "T" + t }), u = new Array(n.length - 1), u[0] = n[0][t], f = 1; f < u.length; f++)u[f] = u[f - 1] + n[f][t]; var e = o[t], h = o.slice(-2), p = o.join(), c = "if (" + e + " < " + u[0] + ") {\n        return getChannel(\n            getT0(" + p + "), vec2(" + h.join() + "));\n        }"; for (f = 1; f < u.length; f++)l = u[f - 1], c += "\n        if (" + e + " < " + u[f] + "  && " + e + " >= " + u[f - 1] + ") {\n          return getChannel(\n            getT" + f + "(" + vl(o, e, l) + "),\n            vec2(" + vl(h, e, l) + "));\n        }"; v = u.length; a = u[u.length - 1]; c += "\n        return getChannel(\n          getT" + v + "(" + vl(o, e, a) + "),\n          vec2(" + vl(h, e, a) + "));"; this.userCode = "\n      float getValue(" + o.map(function (n) { return "int " + n }) + ") {\n        " + c + "\n      }\n\n      void main() {\n        " + y + " coords = getOutputCoords();\n        vec4 result = vec4(getValue(" + r + "), 0., 0., 0.);\n\n        " + r[i - 1] + " = " + r[i - 1] + " + 1;\n        if (" + r[i - 1] + " < " + s[i - 1] + ") {\n          result.g = getValue(" + r + ");\n        }\n\n        " + r[i - 2] + " = " + r[i - 2] + " + 1;\n        if (" + r[i - 2] + " < " + s[i - 2] + ") {\n          result.a = getValue(" + r + ");\n        }\n\n        " + r[i - 1] + " = " + r[i - 1] + " - 1;\n        if (" + r[i - 2] + " < " + s[i - 2] + " &&\n            " + r[i - 1] + " < " + s[i - 1] + ") {\n          result.b = getValue(" + r + ");\n        }\n        setOutput(result);\n      }\n    " }; var igt = function (n) { this.variableNames = ["x", "dy"]; this.outputShape = n.filterShape; var t = n.strideHeight, i = n.strideWidth, r = n.padInfo.top, u = n.padInfo.left, f = "channelsLast" === n.dataFormat; this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < " + n.batchSize + "; b++) {\n          for (int yR = 0; yR < " + n.outHeight + "; yR++) {\n            int xR = wR + yR * " + t + " - " + r + ";\n\n            if (xR < 0 || xR >= " + n.inHeight + ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < " + n.outWidth + "; yC++) {\n              int xC = wC + yC * " + i + " - " + u + ";\n\n              if (xC < 0 || xC >= " + n.inWidth + ") {\n                continue;\n              }\n\n              if (" + f + ") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, rgt = function (n) { this.variableNames = ["dy", "W"]; this.outputShape = n.inShape; var i = n.filterHeight, r = n.filterWidth, u = n.strideHeight, f = n.strideWidth, t = "channelsLast" === n.dataFormat, e = i - 1 - n.padInfo.top, o = r - 1 - n.padInfo.left, s = t ? 1 : 2, h = t ? 2 : 3, c = t ? 3 : 1; this.userCode = "\n      const ivec2 pads = ivec2(" + e + ", " + o + ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[" + c + "];\n\n        ivec2 dyCorner = ivec2(coords[" + s + "], coords[" + h + "]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " + i + "; wR++) {\n          float dyR = float(dyRCorner + wR) / " + u + ".0;\n\n          if (dyR < 0.0 || dyR >= " + n.outHeight + ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = " + i + " - 1 - wR;\n\n          for (int wC = 0; wC < " + r + "; wC++) {\n            float dyC = float(dyCCorner + wC) / " + f + ".0;\n\n            if (dyC < 0.0 || dyC >= " + n.outWidth + ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = " + r + " - 1 - wC;\n\n            for (int d2 = 0; d2 < " + n.outChannels + "; d2++) {\n\n              if (" + t + ") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, ugt = function (n) { this.variableNames = ["x", "dy"]; this.outputShape = n.filterShape; var t = n.strideDepth, i = n.strideHeight, r = n.strideWidth, u = n.padInfo.front, f = n.padInfo.top, e = n.padInfo.left; this.userCode = "\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < " + n.batchSize + "; b++) {\n          for (int yF = 0; yF < " + n.outDepth + "; yF++) {\n            int xF = wF + yF * " + t + " - " + u + ";\n\n            if (xF < 0 || xF >= " + n.inDepth + ") {\n              continue;\n            }\n\n            for (int yR = 0; yR < " + n.outHeight + "; yR++) {\n              int xR = wR + yR * " + i + " - " + f + ";\n\n              if (xR < 0 || xR >= " + n.inHeight + ") {\n                continue;\n              }\n\n              for (int yC = 0; yC < " + n.outWidth + "; yC++) {\n                int xC = wC + yC * " + r + " - " + e + ";\n\n                if (xC < 0 || xC >= " + n.inWidth + ") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, fgt = function (n) { this.variableNames = ["dy", "W"]; this.outputShape = n.inShape; var t = n.filterDepth, i = n.filterHeight, r = n.filterWidth, u = n.strideDepth, f = n.strideHeight, e = n.strideWidth, o = t - 1 - n.padInfo.front, s = i - 1 - n.padInfo.top, h = r - 1 - n.padInfo.left; this.userCode = "\n      const ivec3 pads = ivec3(" + o + ", " + s + ", " + h + ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < " + t + "; wF++) {\n          float dyF = float(dyFCorner + wF) / " + u + ".0;\n\n          if (dyF < 0.0 || dyF >= " + n.outDepth + ".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = " + t + " - 1 - wF;\n\n          for (int wR = 0; wR < " + i + "; wR++) {\n            float dyR = float(dyRCorner + wR) / " + f + ".0;\n\n            if (dyR < 0.0 || dyR >= " + n.outHeight + ".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = " + i + " - 1 - wR;\n\n            for (int wC = 0; wC < " + r + "; wC++) {\n              float dyC = float(dyCCorner + wC) / " + e + ".0;\n\n              if (dyC < 0.0 || dyC >= " + n.outWidth + ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = " + r + " - 1 - wC;\n\n              for (int d2 = 0; d2 < " + n.outChannels + "; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, egt = function (n) { this.variableNames = ["x", "dy"]; this.outputShape = n.filterShape; var t = n.strideHeight, i = n.strideWidth, r = n.padInfo.top, u = n.padInfo.left, f = n.outChannels / n.inChannels; this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * " + f + " + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < " + n.batchSize + "; b++) {\n          for (int yR = 0; yR < " + n.outHeight + "; yR++) {\n            int xR = wR + yR * " + t + " - " + r + ";\n\n            if (xR < 0 || xR >= " + n.inHeight + ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < " + n.outWidth + "; yC++) {\n              int xC = wC + yC * " + i + " - " + u + ";\n\n              if (xC < 0 || xC >= " + n.inWidth + ") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, ogt = function (n) { this.variableNames = ["dy", "W"]; this.outputShape = n.inShape; var t = n.filterHeight, i = n.filterWidth, u = n.strideHeight, f = n.strideWidth, e = t - 1 - n.padInfo.top, o = i - 1 - n.padInfo.left, r = n.outChannels / n.inChannels; this.userCode = "\n      const ivec2 pads = ivec2(" + e + ", " + o + ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < " + t + "; wR++) {\n          float dyR = float(dyRCorner + wR) / " + u + ".0;\n\n          if (dyR < 0.0 || dyR >= " + n.outHeight + ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = " + t + " - 1 - wR;\n\n          for (int wC = 0; wC < " + i + "; wC++) {\n            float dyC = float(dyCCorner + wC) / " + f + ".0;\n\n            if (dyC < 0.0 || dyC >= " + n.outWidth + ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = " + i + " - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < " + r + "; dm++) {\n              int d2 = d1 * " + r + " + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, aft = function (n, t, i, r) { var h; void 0 === t && (t = !1); void 0 === i && (i = null); void 0 === r && (r = !1); this.variableNames = ["x", "W"]; this.outputShape = n.outShape; var c = n.padInfo.top, l = n.padInfo.left, a = n.strideHeight, v = n.strideWidth, y = n.dilationHeight, p = n.dilationWidth, w = n.filterHeight, b = n.filterWidth, u = 4 * Math.floor(n.inChannels / 4), e = n.inChannels % 4, f = "channelsLast" === n.dataFormat, k = f ? 1 : 2, d = f ? 2 : 3, g = f ? 3 : 1, o = "", s = ""; i && (o = r ? "float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          " + i + "\n        }" : "\n          float activation(float x) {\n            " + i + "\n          }\n        ", s = "result = activation(result);"); h = t ? "result += getBiasAtOutCoords();" : ""; t && this.variableNames.push("bias"); r && this.variableNames.push("preluActivationWeights"); this.userCode = "\n      " + o + "\n\n      const ivec2 strides = ivec2(" + a + ", " + v + ");\n      const ivec2 pads = ivec2(" + c + ", " + l + ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[" + g + "];\n\n        ivec2 xRCCorner =\n            ivec2(coords[" + k + "], coords[" + d + "]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " + w + "; wR++) {\n          int xR = xRCorner + wR * " + y + ";\n\n          if (xR < 0 || xR >= " + n.inHeight + ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " + b + "; wC++) {\n            int xC = xCCorner + wC * " + p + ";\n\n            if (xC < 0 || xC >= " + n.inWidth + ") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < " + u + "; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (" + f + ") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (" + (1 === e) + ") {\n\n              if (" + f + ") {\n                dotProd +=\n                    getX(batch, xR, xC, " + u + ") *\n                    getW(wR, wC, " + u + ", d2);\n              } else {\n                dotProd +=\n                    getX(batch, " + u + ", xR, xC) *\n                    getW(wR, wC, " + u + ", d2);\n              }\n\n            } else if (" + (2 === e) + ") {\n              vec2 wValues = vec2(\n                getW(wR, wC, " + u + ", d2),\n                getW(wR, wC, " + u + " + 1, d2)\n              );\n\n              if (" + f + ") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, " + u + "),\n                  getX(batch, xR, xC, " + u + " + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, " + u + ", xR, xC),\n                  getX(batch, " + u + " + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (" + (3 === e) + ") {\n              vec3 wValues = vec3(\n                getW(wR, wC, " + u + ", d2),\n                getW(wR, wC, " + u + " + 1, d2),\n                getW(wR, wC, " + u + " + 2, d2)\n              );\n\n              if (" + f + ") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, " + u + "),\n                  getX(batch, xR, xC, " + u + " + 1),\n                  getX(batch, xR, xC, " + u + " + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, " + u + ", xR, xC),\n                  getX(batch, " + u + " + 1, xR, xC),\n                  getX(batch, " + u + " + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        " + h + "\n        " + s + "\n        setOutput(result);\n      }\n    " }, sgt = function (n) { this.variableNames = ["x", "W"]; this.outputShape = n.outShape; var r = n.padInfo.front, u = n.padInfo.top, f = n.padInfo.left, e = n.strideDepth, o = n.strideHeight, s = n.strideWidth, h = n.dilationDepth, c = n.dilationHeight, l = n.dilationWidth, a = n.filterDepth, v = n.filterHeight, y = n.filterWidth, t = 4 * Math.floor(n.inChannels / 4), i = n.inChannels % 4; this.userCode = "\n      const ivec3 strides = ivec3(" + e + ", " + o + ", " + s + ");\n      const ivec3 pads = ivec3(" + r + ", " + u + ", " + f + ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < " + a + "; wF++) {\n          int xF = xFCorner + wF * " + h + ";\n\n          if (xF < 0 || xF >= " + n.inDepth + ") {\n            continue;\n          }\n\n          for (int wR = 0; wR < " + v + "; wR++) {\n            int xR = xRCorner + wR * " + c + ";\n\n            if (xR < 0 || xR >= " + n.inHeight + ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < " + y + "; wC++) {\n              int xC = xCCorner + wC * " + l + ";\n\n              if (xC < 0 || xC >= " + n.inWidth + ") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < " + t + "; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (" + (1 === i) + ") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, " + t + ") *\n                  getW(wF, wR, wC, " + t + ", d2);\n              } else if (" + (2 === i) + ") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, " + t + "),\n                  getX(batch, xF, xR, xC, " + t + " + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, " + t + ", d2),\n                  getW(wF, wR, wC, " + t + " + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (" + (3 === i) + ") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, " + t + "),\n                  getX(batch, xF, xR, xC, " + t + " + 1),\n                  getX(batch, xF, xR, xC, " + t + " + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, " + t + ", d2),\n                  getW(wF, wR, wC, " + t + " + 1, d2),\n                  getW(wF, wR, wC, " + t + " + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, vft = function (n, t, i, r) { var o; void 0 === t && (t = !1); void 0 === i && (i = null); void 0 === r && (r = !1); this.variableNames = ["x", "W"]; this.outputShape = n.outShape; var s = n.inHeight, h = n.inWidth, c = n.padInfo.top, l = n.padInfo.left, a = n.strideHeight, v = n.strideWidth, y = n.dilationHeight, p = n.dilationWidth, w = n.filterHeight, b = n.filterWidth, u = n.outChannels / n.inChannels, f = "", e = ""; i && (f = r ? "float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          " + i + "\n        }" : "\n          float activation(float x) {\n            " + i + "\n          }\n        ", e = "result = activation(result);"); o = t ? "result += getBiasAtOutCoords();" : ""; t && this.variableNames.push("bias"); r && this.variableNames.push("preluActivationWeights"); this.userCode = "\n      " + f + "\n\n      const ivec2 strides = ivec2(" + a + ", " + v + ");\n      const ivec2 pads = ivec2(" + c + ", " + l + ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / " + u + ";\n        int q = d2 - d1 * " + u + ";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < " + w + "; wR++) {\n          int xR = xRCorner + wR * " + y + ";\n\n          if (xR < 0 || xR >= " + s + ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " + b + "; wC++) {\n            int xC = xCCorner + wC * " + p + ";\n\n            if (xC < 0 || xC >= " + h + ") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        " + o + "\n        " + e + "\n        setOutput(result);\n      }\n    " }, yft = function (n, t, i, r) { var u, v, p, w, b, k; void 0 === t && (t = !1); void 0 === i && (i = null); void 0 === r && (r = !1); this.variableNames = ["x", "W"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = n.outShape; for (var h = n.inHeight, o = n.inWidth, d = n.padInfo.top, c = n.padInfo.left, g = n.strideHeight, a = n.strideWidth, nt = n.dilationHeight, l = n.dilationWidth, y = n.filterHeight, s = n.filterWidth, tt = s, e = "int xR; int xC; int xCOffset;", f = 0; f < y; f++)for (u = 0; u < s; u++)e += "\n          vec4 xTexelR" + f + "C" + 2 * u + " = vec4(0.);\n          vec4 wR" + f + "C" + u + " = vec4(0.);\n          vec4 xR" + f + "C" + u + " = vec4(0.);"; for (f = 0; f < y; f++)for (v = 0; v < tt; v++)(e += "\n          xR = xRCorner + " + f * nt + ";\n          xC = xCCorner + " + (u = 2 * v) * l + ";\n        ", 1 === a) ? u < s && (e += c % 2 == 1 ? "\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < " + h + " && xCOffset >= 0 && xCOffset < " + o + ") {\n                  xTexelR" + f + "C" + u + " = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= " + o + ") {\n                    xTexelR" + f + "C" + u + ".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR" + f + "C" + u + " = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < " + h + " && xCOffset >= 0 && xCOffset < " + o + ") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= " + o + ") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR" + f + "C" + u + " = vec4(previous.zw, xTexelR" + f + "C" + u + ".xy);\n                } else {\n                  xR" + f + "C" + u + " = vec4(0, 0, xTexelR" + f + "C" + u + ".xy);\n                }\n              " : "\n                if(xR >= 0 && xR < " + h + " && xC >= 0 && xC < " + o + ") {\n                  xTexelR" + f + "C" + u + " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR" + f + "C" + u + " = vec4(0.);\n                }\n\n                xR" + f + "C" + u + " = xTexelR" + f + "C" + u + ";\n              ", u + 1 < s) && (p = c % 2 == 0 ? cy(l) : l, l % 2 == 0 && c % 2 == 1 || l % 2 != 0 && c % 2 != 1 ? (e += "\n                  xCOffset = xC + " + c % 2 + " + " + p + ";\n\n                  if(xR >= 0 && xR < " + h + " &&\n                    xCOffset >= 0 && xCOffset < " + o + ") {\n                    xTexelR" + f + "C" + (u + 2) + " = getX(batch, xR, xCOffset, d1);\n                  }\n                ", l > 1 && (e += "\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < " + h + " &&\n                      xCOffset >= 0 && xCOffset < " + o + ") {\n                      xTexelR" + f + "C" + u + " = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR" + f + "C" + u + " = vec4(0.);\n                    }\n                  "), e += "\n                  xR" + f + "C" + (u + 1) + " = vec4(\n                    xTexelR" + f + "C" + u + ".zw, xTexelR" + f + "C" + (u + 2) + ".xy);\n                ") : e += "\n                  xCOffset = xC + " + p + ";\n\n                  if(xR >= 0 && xR < " + h + " &&\n                    xCOffset >= 0 && xCOffset < " + o + ") {\n                    xTexelR" + f + "C" + (u + 2) + " = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR" + f + "C" + (u + 1) + " = xTexelR" + f + "C" + (u + 2) + ";\n                ") : u < s && (e += "\n              if(xR >= 0 && xR < " + h + ") {\n            ", c % 2 == 1 ? (e += "\n                xCOffset = xC + 1 - " + a + ";\n                if(xCOffset >= 0 && xCOffset < " + o + ") {\n                  xTexelR" + f + "C" + u + " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" + f + "C" + u + " = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < " + o + ") {\n                  xTexelR" + f + "C" + (u + 2) + " = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR" + f + "C" + (u + 2) + " = vec4(0.);\n                }\n\n                xR" + f + "C" + u + " = vec4(\n                  xTexelR" + f + "C" + u + ".zw, xTexelR" + f + "C" + (u + 2) + ".zw);\n              ", u + 1 < s && (e += "\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + " + a + ";\n                  if(xCOffset >= 0 && xCOffset < " + o + ") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR" + f + "C" + (u + 1) + " = vec4(xTexelR" + f + "C" + (u + 2) + ".xy, final.xy);\n                ")) : (e += "\n                if(xC >= 0 && xC < " + o + ") {\n                  xTexelR" + f + "C" + u + " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR" + f + "C" + u + " = vec4(0.);\n                }\n\n                xCOffset = xC + " + a + ";\n                if(xCOffset >= 0 && xCOffset < " + o + ") {\n                  xTexelR" + f + "C" + (u + 2) + " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" + f + "C" + (u + 2) + " = vec4(0.);\n                }\n\n                xR" + f + "C" + u + " = vec4(\n                  xTexelR" + f + "C" + u + ".xy, xTexelR" + f + "C" + (u + 2) + ".xy);\n              ", u + 1 < s && (e += "\n                  xR" + f + "C" + (u + 1) + " = vec4(\n                    xTexelR" + f + "C" + u + ".zw, xTexelR" + f + "C" + (u + 2) + ".zw);\n                ")), e += "}"), u < s && (e += "\n            vec4 wTexelR" + f + "C" + u + " = getW(" + f + ", " + u + ", d1, q);\n            wR" + f + "C" + u + " = vec4(wTexelR" + f + "C" + u + ".xz, wTexelR" + f + "C" + u + ".xz);\n          ", u + 1 < s && (e += "\n              vec4 wTexelR" + f + "C" + (u + 1) + " = getW(" + f + ", " + (u + 1) + ", d1, q);\n              wR" + f + "C" + (u + 1) + " =\n                vec4(wTexelR" + f + "C" + (u + 1) + ".xz, wTexelR" + f + "C" + (u + 1) + ".xz);")); for (f = 0; f < y; f++)for (u = 0; u < s; u++)e += "dotProd += xR" + f + "C" + u + " * wR" + f + "C" + u + ";"; w = ""; b = ""; i && (w = r ? "vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          " + i + "\n        }" : "vec4 activation(vec4 x) {\n          " + i + "\n        }", b = "result = activation(result);"); k = t ? "result += getBiasAtOutCoords();" : ""; t && this.variableNames.push("bias"); r && this.variableNames.push("preluActivationWeights"); this.userCode = "\n      " + w + "\n\n      const ivec2 strides = ivec2(" + g + ", " + a + ");\n      const ivec2 pads = ivec2(" + d + ", " + c + ");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        " + e + "\n\n        vec4 result = dotProd;\n        " + k + "\n        " + b + "\n        setOutput(result);\n      }\n    " }, hgt = function (n, t, i, r, u) { this.variableNames = ["Image", "Boxes", "BoxInd"]; this.outputShape = []; var y = n[0], l = n[1], a = n[2], p = n[3], w = t[0], f = i[0], e = i[1]; this.outputShape = [w, f, e, p]; var b = "bilinear" === r ? 1 : 0, v = [l - 1 + ".0", a - 1 + ".0"], o = v[0], s = v[1], h = f > 1 ? ["" + (l - 1) / (f - 1), "(y2-y1) * height_ratio", "y1*" + o + " + float(y)*(height_scale)"] : ["0.0", "0.0", "0.5 * (y1+y2) * " + o], k = h[0], d = h[1], g = h[2], c = e > 1 ? ["" + (a - 1) / (e - 1), "(x2-x1) * width_ratio", "x1*" + s + " + float(x)*(width_scale)"] : ["0.0", "0.0", "0.5 * (x1+x2) * " + s], nt = c[0], tt = c[1], it = c[2]; this.userCode = "\n      const float height_ratio = float(" + k + ");\n      const float width_ratio = float(" + nt + ");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= " + y + ") {\n          return;\n        }\n\n        float height_scale = " + d + ";\n        float width_scale = " + tt + ";\n\n        float in_y = " + g + ";\n        if( in_y < 0.0 || in_y > " + o + " ) {\n          setOutput(float(" + u + "));\n          return;\n        }\n        float in_x = " + it + ";\n        if( in_x < 0.0 || in_x > " + s + " ) {\n          setOutput(float(" + u + "));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(" + b + " == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    " }, cgt = function (n, t, i) { this.variableNames = ["x"]; this.outputShape = n; var r = n.length, u = n[n.length - 1], f = i ? "<" : ">"; this.userCode = "\n      int getIndex(int i) {\n        " + (i ? "return " + u + " -i - 1;" : "return i;") + "\n      }\n\n      void main() {\n        " + st(r) + " coords = getOutputCoords();\n        int end = " + pft(r, "coords") + ";\n        float val = 0.0;\n        for (int i = " + u + " - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx " + f + " end) {\n            continue;\n          }\n          if (idx == end && " + t + ") {\n            continue;\n          }\n          " + pft(r, "coords") + " = idx;\n          val += getX(" + function (n, t) { if (1 === n) return "" + t; if (2 === n) return t + ".x, " + t + ".y"; if (3 === n) return t + ".x, " + t + ".y, " + t + ".z"; if (4 === n) return t + ".x, " + t + ".y, " + t + ".z, " + t + ".w"; throw Error("Cumulative sum for rank " + n + " is not yet supported"); }(r, "coords") + ");\n        }\n        setOutput(val);\n      }\n    " }; var lgt = function (n) { this.variableNames = ["A"]; this.packedInputs = !1; this.packedOutput = !0; this.outPackingScheme = ss.DENSE; var t = hs(n), i = li(); this.outputShape = n; this.userCode = "\n      ivec3 outCoordsFromFlatIndex(int index) {\n        " + ce(["r", "c", "d"], n) + "\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(" + t[0] + ", " + t[1] + "));\n        int index = 4 * (resTexRC.x * " + t[1] + " + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        " + i.output + " = result;\n      }\n    " }, agt = function (n) { this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !0; this.outPackingScheme = ss.DENSE; var t = hs(n), i = li(); this.outputShape = n; this.userCode = "\n      ivec3 outCoordsFromFlatIndex(int index) {\n        " + ce(["r", "c", "d"], n) + "\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(" + t[0] + ", " + t[1] + "));\n        int index = 4 * (resTexRC.x * " + t[1] + " + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        " + i.output + " = result;\n      }\n    " }, vgt = function () { function n(n, t, i) { this.variableNames = ["x"]; this.outputShape = []; this.outputShape = n; this.blockSize = t; this.dataFormat = i; this.userCode = "\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = " + this.getHeightCoordString() + ";\n      int w = " + this.getWidthCoordString() + ";\n      int d = " + this.getDepthCoordString() + ";\n\n      int in_h = h / " + t + ";\n      int offset_h = imod(h, " + t + ");\n      int in_w = w / " + t + ";\n      int offset_w = imod(w, " + t + ");\n      int offset_d = (offset_h * " + t + " + offset_w) *\n        " + this.getOutputDepthSize() + ";\n      int in_d = d + offset_d;\n\n      float result = " + this.getInputSamplingString() + ";\n      setOutput(result);\n    }\n  " } return n.prototype.getHeightCoordString = function () { return "NHWC" === this.dataFormat ? "coords[1]" : "coords[2]" }, n.prototype.getWidthCoordString = function () { return "NHWC" === this.dataFormat ? "coords[2]" : "coords[3]" }, n.prototype.getDepthCoordString = function () { return "NHWC" === this.dataFormat ? "coords[3]" : "coords[1]" }, n.prototype.getOutputDepthSize = function () { return "NHWC" === this.dataFormat ? this.outputShape[3] : this.outputShape[1] }, n.prototype.getInputSamplingString = function () { return "NHWC" === this.dataFormat ? "getX(b, in_h, in_w, in_d)" : "getX(b, in_d, in_h, in_w)" }, n }(), ygt = function (n) { this.variableNames = ["X"]; this.outputShape = [n, n]; this.userCode = "\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    " }, pgt = function (n) { this.variableNames = ["A"]; this.outTexUsage = gi.DOWNLOAD; var t = li(); this.outputShape = n; this.userCode = "\n      " + vw + "\n\n      void main() {\n        float x = getAAtOutCoords();\n        " + t.output + " = encode_float(x);\n      }\n    " }, wgt = function (n) { this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !1; this.outTexUsage = gi.DOWNLOAD; var t = li(); this.outputShape = n; this.userCode = "\n      " + vw + "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        " + t.output + " = encode_float(x);\n      }\n    " }, bgt = function (n, t, i) { var u; void 0 === i && (i = !1); this.variableNames = ["A"]; var f = li(), e = t[0], r = t[1]; this.outputShape = n; u = "result"; i && (u = "floor(result * 255. + 0.5)"); this.userCode = "\n      " + aw(n) + "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / " + r + ";\n        int c = imod(flatIndex, " + r + ");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(" + r + ".0, " + e + ".0);\n        vec4 values = " + f.texture2D + "(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        " + f.output + " = vec4(" + u + ", 0., 0., 0.);\n      }\n    " }, kgt = function (n, t, i) { var o, s, r, u, f; void 0 === i && (i = !1); this.variableNames = ["A"]; this.packedInputs = !1; this.packedOutput = !0; var h = li(), c = t[0], e = t[1]; for (this.outputShape = n, o = "", s = "result", i && (s = "floor(result * 255. + 0.5)"), r = 0; r <= 1; r++)for (u = 0; u <= 1; u++)f = 2 * r + u, o += "\n          localCoords = coords;\n          if(localCoords[2] + " + u + " < " + n[2] + ") {\n            localCoords[2] += " + u + ";\n            if(localCoords[1] + " + r + " < " + n[1] + ") {\n              localCoords[1] += " + r + ";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / " + e + ";\n              c = imod(flatIndex, " + e + ");\n              uv = (vec2(c, r) + halfCR) / vec2(" + e + ".0, " + c + ".0);\n              values = " + h.texture2D + "(A, uv);\n\n              if(offset == 0) {\n                result[" + f + "] = values[0];\n              } else if(offset == 1) {\n                result[" + f + "] = values[1];\n              } else if(offset == 2) {\n                result[" + f + "] = values[2];\n              } else {\n                result[" + f + "] = values[3];\n              }\n            }\n          }\n        "; this.userCode = "\n      " + aw(n) + "\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        " + o + "\n\n        " + h.output + " = " + s + ";\n      }\n    " }, dgt = "return real * expR - imag * expI;", ggt = "return real * expI + imag * expR;", wft = function (n, t, i) { var r, u, f; this.variableNames = ["real", "imag"]; r = t[1]; this.outputShape = t; u = i ? "2.0 * " + Math.PI : "-2.0 * " + Math.PI; f = i ? r + ".0" : "1.0"; this.userCode = "\n      const float exponentMultiplier = " + u + ";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        " + n + "\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(" + r + ");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < " + r + "; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / " + f + ";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    " }, nnt = function () { function n(n) { this.outputShape = []; this.variableNames = ["x"]; this.outputShape = n; this.userCode = "\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    " } return n.prototype.getCustomSetupFunc = function (n) { var t = this; return function (i, r) { null == t.valueLoc && (t.valueLoc = i.getUniformLocationNoThrow(r, "value")); i.gl.uniform1f(t.valueLoc, n) } }, n }(), tnt = function (n, t, i) { var r, u, f; this.variableNames = ["A", "indices"]; r = n.slice(); r[i] = t; this.outputShape = r; this.rank = r.length; u = st(this.rank); f = function (n, t) { var r = n.length; if (r > 4) throw Error("Gather for rank " + r + " is not yet supported"); if (1 === r) return "int(getIndices(resRC))"; for (var f = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"], u = [], i = 0; i < n.length; i++)i === t ? u.push("int(getIndices(" + f[i] + "))") : u.push("" + f[i]); return u.join() }(n, i); this.userCode = "\n      void main() {\n        " + u + " resRC = getOutputCoords();\n        setOutput(getA(" + f + "));\n      }\n    " }, int = function (n, t, i) { this.sliceDim = n; this.strides = t; this.variableNames = ["x", "indices"]; this.outputShape = i; var r = st(t.length), u = st(i.length), f = this.sliceDim > 1 ? "strides[j]" : "strides"; this.userCode = "\n        " + r + " strides = " + r + "(" + this.strides + ");\n         void main() {\n          " + u + " coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < " + this.sliceDim + "; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * " + f + ";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      " }; vet = Object.freeze({ createVertexShader: bft, createVertexBuffer: kft, createIndexBuffer: dft, createFloat32MatrixTexture: gft, createFloat16MatrixTexture: net, createUnsignedBytesMatrixTexture: tet, createPackedMatrixTexture: iet, createFloat16PackedMatrixTexture: ret, bindVertexProgramAttributeStreams: uet, uploadDenseMatrixToTexture: fet, uploadPixelDataToTexture: eet, createBufferFromOutputTexture: oet, downloadFloat32MatrixFromBuffer: set, downloadByteEncodedFloatMatrixFromOutputTexture: het, downloadPackedMatrixFromBuffer: cet, downloadMatrixFromPackedOutputTexture: aet }); ww = function () { function n(n) { var i, t; if (this.outputTexture = null, this.program = null, this.disposed = !1, this.vertexAttrsAreBound = !1, this.itemsToPoll = [], i = o().getNumber("WEBGL_VERSION"), null != n ? (this.gl = n, ytt(i, n)) : this.gl = ru(i), t = "WEBGL_color_buffer_float", 1 === o().getNumber("WEBGL_VERSION")) { if (this.textureFloatExtension = ls(this.gl, this.debug, "OES_texture_float"), tr(this.gl, "OES_texture_half_float")) this.textureHalfFloatExtension = ls(this.gl, this.debug, "OES_texture_half_float"); else if (o().get("WEBGL_FORCE_F16_TEXTURES")) throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true."); if (this.colorBufferFloatExtension = this.gl.getExtension(t), tr(this.gl, "EXT_color_buffer_half_float")) this.colorBufferHalfFloatExtension = ls(this.gl, this.debug, "EXT_color_buffer_half_float"); else if (o().get("WEBGL_FORCE_F16_TEXTURES")) throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true."); } else if (t = "EXT_color_buffer_float", tr(this.gl, t)) this.colorBufferFloatExtension = this.gl.getExtension(t); else { if (!tr(this.gl, "EXT_color_buffer_half_float")) throw new Error("GL context does not support color renderable floats"); this.colorBufferHalfFloatExtension = this.gl.getExtension("EXT_color_buffer_half_float") } this.vertexBuffer = kft(this.gl, this.debug); this.indexBuffer = dft(this.gl, this.debug); this.framebuffer = oit(this.gl, this.debug); this.textureConfig = fp(this.gl, this.textureHalfFloatExtension) } return Object.defineProperty(n.prototype, "debug", { get: function () { return o().getBool("DEBUG") }, enumerable: !0, configurable: !0 }), n.prototype.dispose = function () { var t = this, n; this.disposed || (null != this.program && console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."), null != this.outputTexture && console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing."), n = this.gl, l(n, this.debug, function () { return n.finish() }), l(n, this.debug, function () { return n.bindFramebuffer(n.FRAMEBUFFER, null) }), l(n, this.debug, function () { return n.deleteFramebuffer(t.framebuffer) }), l(n, this.debug, function () { return n.bindBuffer(n.ARRAY_BUFFER, null) }), l(n, this.debug, function () { return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER, null) }), l(n, this.debug, function () { return n.deleteBuffer(t.indexBuffer) }), this.disposed = !0) }, n.prototype.createFloat32MatrixTexture = function (n, t) { return this.throwIfDisposed(), gft(this.gl, this.debug, n, t, this.textureConfig) }, n.prototype.createFloat16MatrixTexture = function (n, t) { return this.throwIfDisposed(), net(this.gl, this.debug, n, t, this.textureConfig) }, n.prototype.createUnsignedBytesMatrixTexture = function (n, t) { return this.throwIfDisposed(), tet(this.gl, this.debug, n, t, this.textureConfig) }, n.prototype.uploadPixelDataToTexture = function (n, t) { this.throwIfDisposed(); eet(this.gl, this.debug, n, t) }, n.prototype.uploadDenseMatrixToTexture = function (n, t, i, r) { this.throwIfDisposed(); fet(this.gl, this.debug, n, t, i, r, this.textureConfig) }, n.prototype.createFloat16PackedMatrixTexture = function (n, t) { return this.throwIfDisposed(), ret(this.gl, this.debug, n, t, this.textureConfig) }, n.prototype.createPackedMatrixTexture = function (n, t) { return this.throwIfDisposed(), iet(this.gl, this.debug, n, t, this.textureConfig) }, n.prototype.deleteMatrixTexture = function (n) { var t = this; this.throwIfDisposed(); this.outputTexture === n && (op(this.gl, this.debug, this.framebuffer), this.outputTexture = null); l(this.gl, this.debug, function () { return t.gl.deleteTexture(n) }) }, n.prototype.downloadByteEncodedFloatMatrixFromOutputTexture = function (n, t, i) { var r = this; return this.downloadMatrixDriver(n, function () { return het(r.gl, r.debug, t, i, r.textureConfig) }) }, n.prototype.downloadPackedMatrixFromBuffer = function (n, t, i, r, u, f) { return cet(this.gl, n, 0, 0, 0, u, f, this.textureConfig) }, n.prototype.downloadFloat32MatrixFromBuffer = function (n, t) { return set(this.gl, n, t) }, n.prototype.createBufferFromTexture = function (n, t, i) { this.bindTextureToFrameBuffer(n); var r = oet(this.gl, this.debug, t, i, this.textureConfig); return this.unbindTextureToFrameBuffer(), r }, n.prototype.createAndWaitForFence = function () { var n = this.createFence(this.gl); return this.pollFence(n) }, n.prototype.createFence = function (n) { var i, r, f = this, t, u; return o().getBool("WEBGL_FENCE_API_ENABLED") ? (t = n, u = t.fenceSync(t.SYNC_GPU_COMMANDS_COMPLETE, 0), n.flush(), r = function () { var n = t.clientWaitSync(u, 0, 0); return n === t.ALREADY_SIGNALED || n === t.CONDITION_SATISFIED }, i = u) : o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") > 0 ? (i = this.beginQuery(), this.endQuery(), r = function () { return f.isQueryAvailable(i, o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")) }) : r = function () { return !0 }, { query: i, isFencePassed: r } }, n.prototype.downloadMatrixFromPackedTexture = function (n, t, i) { var r = this; return this.downloadMatrixDriver(n, function () { return aet(r.gl, r.debug, t, i) }) }, n.prototype.createProgram = function (n) { this.throwIfDisposed(); var t = this.gl, r = gtt(t, this.debug, n), u = bft(t, this.debug), i = tit(t, this.debug); return l(t, this.debug, function () { return t.attachShader(i, u) }), l(t, this.debug, function () { return t.attachShader(i, r) }), iit(t, this.debug, i), this.debug && yc(t, this.debug, i), this.vertexAttrsAreBound || (this.setProgram(i), this.vertexAttrsAreBound = uet(t, this.debug, this.program, this.vertexBuffer)), i }, n.prototype.deleteProgram = function (n) { var t = this; this.throwIfDisposed(); n === this.program && (this.program = null); null != n && l(this.gl, this.debug, function () { return t.gl.deleteProgram(n) }) }, n.prototype.setProgram = function (n) { var t = this; this.throwIfDisposed(); this.program = n; null != this.program && this.debug && yc(this.gl, this.debug, this.program); l(this.gl, this.debug, function () { return t.gl.useProgram(n) }) }, n.prototype.getUniformLocation = function (n, t, i) { return void 0 === i && (i = !0), this.throwIfDisposed(), i ? hit(this.gl, this.debug, n, t) : cit(this.gl, n, t) }, n.prototype.getAttributeLocation = function (n, t) { var i = this; return this.throwIfDisposed(), l(this.gl, this.debug, function () { return i.gl.getAttribLocation(n, t) }) }, n.prototype.getUniformLocationNoThrow = function (n, t) { return this.throwIfDisposed(), this.gl.getUniformLocation(n, t) }, n.prototype.setInputMatrixTexture = function (n, t, i) { this.throwIfDisposed(); this.throwIfNoProgram(); lit(this.gl, this.debug, this.program, n, t, i) }, n.prototype.setOutputMatrixTexture = function (n, t, i) { this.setOutputMatrixTextureDriver(n, i, t) }, n.prototype.setOutputPackedMatrixTexture = function (n, t, i) { this.throwIfDisposed(); var r = cs(t, i), u = r[0], f = r[1]; this.setOutputMatrixTextureDriver(n, u, f) }, n.prototype.setOutputMatrixWriteRegion = function (n, t, i, r) { this.setOutputMatrixWriteRegionDriver(i, n, r, t) }, n.prototype.setOutputPackedMatrixWriteRegion = function () { throw new Error("setOutputPackedMatrixWriteRegion not implemented."); }, n.prototype.debugValidate = function () { null != this.program && yc(this.gl, this.debug, this.program); as(this.gl) }, n.prototype.executeProgram = function () { this.throwIfDisposed(); this.throwIfNoProgram(); var n = this.gl; this.debug && this.debugValidate(); l(n, this.debug, function () { return n.drawElements(n.TRIANGLES, 6, n.UNSIGNED_SHORT, 0) }) }, n.prototype.blockUntilAllProgramsCompleted = function () { var n = this; this.throwIfDisposed(); l(this.gl, this.debug, function () { return n.gl.finish() }) }, n.prototype.getQueryTimerExtension = function () { return null == this.disjointQueryTimerExtension && (this.disjointQueryTimerExtension = ls(this.gl, this.debug, 2 === o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") ? "EXT_disjoint_timer_query_webgl2" : "EXT_disjoint_timer_query")), this.disjointQueryTimerExtension }, n.prototype.getQueryTimerExtensionWebGL2 = function () { return this.getQueryTimerExtension() }, n.prototype.getQueryTimerExtensionWebGL1 = function () { return this.getQueryTimerExtension() }, n.prototype.beginQuery = function () { var n, t; if (2 === o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")) { var i = this.gl, u = this.getQueryTimerExtensionWebGL2(), r = i.createQuery(); return i.beginQuery(u.TIME_ELAPSED_EXT, r), r } return n = this.getQueryTimerExtensionWebGL1(), t = n.createQueryEXT(), n.beginQueryEXT(n.TIME_ELAPSED_EXT, t), t }, n.prototype.endQuery = function () { var n, t, i; 2 !== o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") ? (n = this.getQueryTimerExtensionWebGL1(), n.endQueryEXT(n.TIME_ELAPSED_EXT)) : (t = this.gl, i = this.getQueryTimerExtensionWebGL2(), t.endQuery(i.TIME_ELAPSED_EXT)) }, n.prototype.waitForQueryAndGetTime = function (n) { return y(this, void 0, void 0, function () { var t = this; return p(this, function (i) { switch (i.label) { case 0: return [4, ly(function () { return t.disposed || t.isQueryAvailable(n, o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")) })]; case 1: return i.sent(), [2, this.getQueryTime(n, o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))] } }) }) }, n.prototype.getQueryTime = function (n, t) { var i, r; return 0 === t ? null : 2 === t ? (i = this.gl, i.getQueryParameter(n, i.QUERY_RESULT) / 1e6) : (r = this.getQueryTimerExtensionWebGL1(), r.getQueryObjectEXT(n, r.QUERY_RESULT_EXT) / 1e6) }, n.prototype.isQueryAvailable = function (n, t) { if (0 === t) return !0; if (2 === t) { var u = this.gl, i = this.getQueryTimerExtensionWebGL2(), r = u.getQueryParameter(n, u.QUERY_RESULT_AVAILABLE); return null == this.disjoint && (this.disjoint = this.gl.getParameter(i.GPU_DISJOINT_EXT)), r && !this.disjoint } return r = (i = this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(n, i.QUERY_RESULT_AVAILABLE_EXT), null == this.disjoint && (this.disjoint = this.gl.getParameter(i.GPU_DISJOINT_EXT)), r && !this.disjoint }, n.prototype.pollFence = function (n) { var t = this; return new Promise(function (i) { t.addItemToPoll(function () { return n.isFencePassed() }, function () { return i() }) }) }, n.prototype.pollItems = function () { for (var t = function (n) { for (var t = 0; t < n.length; ++t)if (!n[t]()) break; return t - 1 }(this.itemsToPoll.map(function (n) { return n.isDoneFn })), n = 0; n <= t; ++n)this.itemsToPoll[n].resolveFn(); this.itemsToPoll = this.itemsToPoll.slice(t + 1) }, n.prototype.addItemToPoll = function (n, t) { var i = this; this.itemsToPoll.push({ isDoneFn: n, resolveFn: t }); this.itemsToPoll.length > 1 || ly(function () { return i.pollItems(), 0 === i.itemsToPoll.length }) }, n.prototype.bindTextureToFrameBuffer = function (n) { this.throwIfDisposed(); pc(this.gl, this.debug, n, this.framebuffer); this.debug && as(this.gl) }, n.prototype.unbindTextureToFrameBuffer = function () { null != this.outputTexture ? (pc(this.gl, this.debug, this.outputTexture, this.framebuffer), this.debug && as(this.gl)) : op(this.gl, this.debug, this.framebuffer) }, n.prototype.downloadMatrixDriver = function (n, t) { this.bindTextureToFrameBuffer(n); var i = t(); return this.unbindTextureToFrameBuffer(), i }, n.prototype.setOutputMatrixTextureDriver = function (n, t, i) { this.throwIfDisposed(); var r = this.gl; pc(r, this.debug, n, this.framebuffer); this.debug && as(r); this.outputTexture = n; l(r, this.debug, function () { return r.viewport(0, 0, t, i) }); l(r, this.debug, function () { return r.scissor(0, 0, t, i) }) }, n.prototype.setOutputMatrixWriteRegionDriver = function (n, t, i, r) { var u = this; this.throwIfDisposed(); l(this.gl, this.debug, function () { return u.gl.scissor(n, t, i, r) }) }, n.prototype.throwIfDisposed = function () { if (this.disposed) throw new Error("Attempted to use disposed GPGPUContext."); }, n.prototype.throwIfNoProgram = function () { if (null == this.program) throw new Error("No GPU program is currently set."); }, n }(); var rnt = function (n, t, i) { var r; this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = n; for (var l = i.filterWidth, f = i.inChannels, a = i.strideWidth, v = i.strideHeight, o = i.padInfo, s = i.outWidth, y = i.dilationWidth, p = i.dilationHeight, w = i.dataFormat, b = o.left, k = o.top, h = f * l, d = li(), e = "channelsLast" === w, g = e ? 0 : 1, nt = e ? 1 : 2, c = "", u = 0; u <= 1; u++)for (r = 0; r <= 1; r++)c += "\n          blockIndex = rc.y + " + r + ";\n          pos = rc.x + " + u + ";\n\n          if(blockIndex < " + n[1] + " && pos < " + n[0] + ") {\n            offsetY = int(blockIndex / (" + s + ")) * " + v + " - " + k + ";\n            d0 = offsetY + " + p + " * (pos / " + h + ");\n\n            if(d0 < " + t[g] + " && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), " + s + ".) * " + a + ". - " + b + ".);\n              d1 = offsetX + " + y + " * (int(mod(float(pos), " + h + ".) / " + f + ".));\n\n              if(d1 < " + t[nt] + " && d1 >= 0) {\n\n                ch = int(mod(float(pos), " + f + ".));\n\n                if (" + e + ") {\n                  innerDims = vec2(d1, ch);\n                  result[" + (2 * u + r) + "] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[" + (2 * u + r) + "] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        "; this.userCode = "\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        " + c + "\n\n        " + d.output + " = result;\n      }\n    " }, unt = function (n, t, i, r, u) { var o, e, s, f; this.variableNames = ["x"]; this.outputShape = []; e = t; s = n[3] - 1; this.outputShape = n; f = "float(" + i + ") + float(" + r + ") * sum"; o = .5 === u ? "inversesqrt(" + f + ")" : 1 === u ? "1.0/(" + f + ")" : "exp(log(" + f + ") * float(-" + u + "));"; this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -" + e + "; j <= " + e + "; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  " + s + ") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * " + o + ";\n        setOutput(val);\n      }\n    " }, fnt = function (n, t, i, r, u) { this.variableNames = ["inputImage", "outputImage", "dy"]; this.outputShape = []; this.outputShape = n; this.depth = n[3]; this.depthRadius = t; this.bias = i; this.alpha = r; this.beta = u; this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < " + this.depth + "; ++d) {\n          int depthBegin = int(max(0.0, float(d - " + t + ")));\n          int depthEnd = int(min(float(" + this.depth + "),\n              float(d + " + t + " + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = " + this.depth + ";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(" + r + ") * norm + float(" + i + ");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(" + r + ")\n                * float(" + u + ")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * " + u + ");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    " }, ent = function (n, t, i, r, u) { var o, f, s, e; this.variableNames = ["x"]; this.outputShape = []; this.packedInputs = !0; this.packedOutput = !0; f = t; s = n[3] - 1; this.outputShape = n; e = "float(" + i + ") + float(" + r + ") * sum"; o = .5 === u ? "inversesqrt(" + e + ")" : 1 === u ? "1.0/(" + e + ")" : "exp(log(" + e + ") * float(-" + u + "));"; this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < " + this.outputShape[3] + ";\n        bool hasNextRow = c < " + this.outputShape[2] + ";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - " + f + ";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - " + f + "; j <= " + f + "; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(" + s + "));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * " + o + ";\n        setOutput(result);\n      }\n    " }, ont = function (n) { this.variableNames = ["dy", "maxPos"]; this.outputShape = n.inShape; var r = n.strideHeight, u = n.strideWidth, f = n.dilationHeight, i = n.effectiveFilterHeight, t = n.effectiveFilterWidth, e = i - 1 - n.padInfo.top, o = t - 1 - n.padInfo.left, s = i * t - 1; this.userCode = "\n      const ivec2 pads = ivec2(" + e + ", " + o + ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " + i + ";\n          wR += " + f + ") {\n          float dyR = float(dyRCorner + wR) / " + r + ".0;\n\n          if (dyR < 0.0 || dyR >= " + n.outHeight + ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < " + t + "; wC++) {\n            float dyC = float(dyCCorner + wC) / " + u + ".0;\n\n            if (dyC < 0.0 || dyC >= " + n.outWidth + ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = " + s + " - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * " + t + " + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, snt = function (n) { this.variableNames = ["dy", "maxPos"]; this.outputShape = n.inShape; var u = n.strideDepth, f = n.strideHeight, e = n.strideWidth, o = n.dilationDepth, s = n.dilationHeight, h = n.dilationWidth, r = n.effectiveFilterDepth, i = n.effectiveFilterHeight, t = n.effectiveFilterWidth, c = r - 1 - n.padInfo.front, l = i - 1 - n.padInfo.top, a = t - 1 - n.padInfo.left, v = r * i * t - 1; this.userCode = "\n      const ivec3 pads = ivec3(" + c + ", " + l + ", " + a + ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < " + r + ";\n           wD += " + o + ") {\n          float dyD = float(dyDCorner + wD) / " + u + ".0;\n\n          if (dyD < 0.0 || dyD >= " + n.outDepth + ".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < " + i + ";\n              wR += " + s + ") {\n            float dyR = float(dyRCorner + wR) / " + f + ".0;\n\n            if (dyR < 0.0 || dyR >= " + n.outHeight + ".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < " + t + ";\n                wC += " + h + ") {\n              float dyC = float(dyCCorner + wC) / " + e + ".0;\n\n              if (dyC < 0.0 || dyC >= " + n.outWidth + ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = " + v + " -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * " + i + " * " + t + " +\n                  wR * " + t + " + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    " }, bw = function (n, t, i, r, u, f, e) { var a; void 0 === i && (i = !1); void 0 === r && (r = !1); void 0 === u && (u = !1); void 0 === f && (f = null); void 0 === e && (e = !1); this.variableNames = ["matrixA", "matrixB"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = t; var v = i ? n[1] : n[2], o = Math.ceil(v / 2), y = i ? "i * 2, rc.y" : "rc.y, i * 2", p = r ? "rc.z, i * 2" : "i * 2, rc.z", s = i ? ["a.xxyy", "a.zzww"] : ["a.xxzz", "a.yyww"], h = r ? ["b.xzxz", "b.ywyw"] : ["b.xyxy", "b.zwzw"], c = "", l = ""; f && (c = e ? "vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          " + f + "\n        }" : "vec4 activation(vec4 x) {\n          " + f + "\n        }", l = "result = activation(result);"); a = u ? "result += getBiasAtOutCoords();" : ""; u && this.variableNames.push("bias"); e && this.variableNames.push("preluActivationWeights"); this.userCode = "\n      " + c + "\n\n      const float sharedDimension = " + o + ".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < " + o + "; i++) {\n          vec4 a = getMatrixA(rc.x, " + y + ");\n          vec4 b = getMatrixB(rc.x, " + p + ");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (" + s[0] + " * " + h[0] + ");\n          result += (" + s[1] + " * " + h[1] + ");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        " + a + "\n\n        " + l + "\n\n        setOutput(result);\n      }\n    " }, hnt = function () { function n(n, t, i) { this.variableNames = ["probs"]; this.outputShape = [n, i]; this.userCode = "\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < " + (t - 1) + "; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(" + (t - 1) + "));\n      }\n    " } return n.prototype.getCustomSetupFunc = function (n) { var t = this; return function (i, r) { null == t.seedLoc && (t.seedLoc = i.getUniformLocation(r, "seed")); i.gl.uniform1f(t.seedLoc, n) } }, n }(), cnt = function (n, t, i, r) { this.variableNames = ["indices"]; this.outputShape = [n, t]; this.userCode = "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(" + r + "), float(" + i + "),\n                      float(index == coords.y)));\n      }\n    " }, lnt = function (n) { var t; if (this.variableNames = ["A"], this.packedInputs = !1, this.packedOutput = !0, this.outputShape = n, t = n.length, 0 === t) this.userCode = "\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      "; else { var i = ki("rc", t), r = st(t), u = function (n, t, i) { if (1 === n) return "rc > " + t[0]; for (var u = "", r = n - 2; r < n; r++)u += i[r] + " >= " + t[r], r < n - 1 && (u += "||"); return u }(t, n, i), f = function (n, t, i, r) { if (1 === n) return ""; var u = r.slice(-2); return "\n    int r = " + u[0] + ";\n    int c = " + u[1] + ";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= " + t + ";\n    bool rEdge = rp1 >= " + i + ";\n  " }(t, n[n.length - 1], n[n.length - 2], i), e = function (n, t) { var r = n.length, i = function (n, t) { for (var r, u, f, e = [], i = 0; i <= 1; i++)for (r = 0; r <= 1; r++) { for (u = (0 === i ? "r" : "rp1") + ", " + (0 === r ? "c" : "cp1"), f = 2; f < n; f++)u = t[t.length - 1 - f] + "," + u; e.push(u) } return e }(r, t); return 1 === r ? "getA(rc),\n            rc + 1 >= " + n[0] + " ? 0. : getA(rc + 1),\n            0, 0" : "getA(" + i[0] + "),\n          cEdge ? 0. : getA(" + i[1] + "),\n          rEdge ? 0. : getA(" + i[2] + "),\n          rEdge || cEdge ? 0. : getA(" + i[3] + ")" }(n, i); this.userCode = "\n        void main() {\n          " + r + " rc = getOutputCoords();\n\n          if(" + u + ") {\n            setOutput(vec4(0));\n          } else {\n            " + f + "\n\n            setOutput(vec4(" + e + "));\n          }\n        }\n      " } }, ant = function (n, t, i) { this.variableNames = ["x"]; this.outputShape = t.map(function (t, i) { return t[0] + n[i] + t[1] }); var u = n.length, r = st(u), f = t.map(function (n) { return n[0] }).join(","), e = t.map(function (t, i) { return t[0] + n[i] }).join(","), o = ["coords[0]", "coords[1]", "coords[2]", "coords[3]"].slice(0, u); this.userCode = 1 !== u ? "\n      " + r + " start = " + r + "(" + f + ");\n      " + r + " end = " + r + "(" + e + ");\n\n      void main() {\n        " + r + " outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(" + i + "));\n        } else {\n          " + r + " coords = outC - start;\n          setOutput(getX(" + o + "));\n        }\n      }\n    " : "\n        int start = " + f + ";\n        int end = " + e + ";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(" + i + "));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      " }, vnt = function (n, t, i) { this.variableNames = ["x"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = t.map(function (t, i) { return t[0] + n[i] + t[1] }); for (var r = n.length, u = st(r), c = t.map(function (n) { return n[0] }).join(","), l = t.map(function (t, i) { return t[0] + n[i] }).join(","), f = ki("rc", r), s = ki("source", r), h = f[r - 1] + " < " + this.outputShape[r - 1], a = 1 === r ? "source" : "vec2(" + s.slice(-2).join() + ")", v = [u + " rc = outputLoc;", f[r - 1] + " += 1;\n       if(" + h + ") {\n      ", 1 === r ? "" : "}\n       rc = outputLoc;\n       " + f[r - 2] + " += 1;\n       if(" + f[r - 2] + " < " + this.outputShape[r - 2] + ") {", 1 === r ? "" : "  " + f[r - 1] + " += 1;\n         if(" + h + ") {"], y = 1 === r ? "rc < start || rc >= end" : "any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))", o = "", e = 0, p = 1 === r ? 2 : 4; e < p; e++)o += "\n        " + v[e] + "\n        if (" + y + ") {\n          result[" + e + "] = float(" + i + ");\n        } else {\n          " + u + " source = rc - start;\n          result[" + e + "] = getChannel(getX(" + s.join() + "), " + a + ");\n        }\n      "; o += 1 === r ? "} " : "}}"; this.userCode = "\n      const " + u + " start = " + u + "(" + c + ");\n      const " + u + " end = " + u + "(" + l + ");\n\n      void main() {\n        " + u + " outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        " + o + "\n        setOutput(result);\n      }\n    " }, kw = function (n, t, i) { var e, u, o; if (this.variableNames = ["x"], "avg" === t && i) throw new Error("Cannot compute positions for average pool."); var h = n.filterWidth, c = n.strideHeight, l = n.strideWidth, a = n.dilationHeight, r = n.dilationWidth, v = n.effectiveFilterHeight, y = n.effectiveFilterWidth, p = n.padInfo.top, w = n.padInfo.left; if (this.outputShape = n.outShape, e = "avg" === t, u = "0.0", e || (u = "-1.0 / 1e-20"), i) this.userCode = "\n        const ivec2 strides = ivec2(" + c + ", " + l + ");\n        const ivec2 pads = ivec2(" + p + ", " + w + ");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < " + v + ";\n              wR += " + a + ") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= " + n.inHeight + ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < " + y + ";\n                wC += " + r + ") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= " + n.inWidth + ") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = wR * " + y + " + wC;\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "; else { o = t + "(" + t + "(" + t + "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])"; "avg" === t && (o = "avgValue / count"); var b = 4 * Math.floor(h / 4), s = h % 4, f = "\n      if (" + e + ") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    "; this.userCode = "\n      const ivec2 strides = ivec2(" + c + ", " + l + ");\n      const ivec2 pads = ivec2(" + p + ", " + w + ");\n      const float initializationValue = " + u + ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= " + n.inWidth + ") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(" + u + ");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < " + v + ";\n            wR += " + a + ") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= " + n.inHeight + ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " + b + "; wC += 4) {\n            int xC = xCCorner + wC * " + r + ";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " + r + ", d),\n              getValue(batch, xR, xC + 2 * " + r + ", d),\n              getValue(batch, xR, xC + 3 * " + r + ", d)\n            );\n\n            " + f + "\n          }\n\n          int xC = xCCorner + " + b + ";\n          if (" + (1 === s) + ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            " + f + "\n          } else if (" + (2 === s) + ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " + r + ", d),\n              initializationValue,\n              initializationValue\n            );\n\n            " + f + "\n          } else if (" + (3 === s) + ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " + r + ", d),\n              getValue(batch, xR, xC + 2 * " + r + ", d),\n              initializationValue\n            );\n\n            " + f + "\n          }\n        }\n        setOutput(" + o + ");\n      }\n    " } }, dw = function (n, t, i) { var s, u, h; if (this.variableNames = ["x"], "avg" === t && i) throw new Error("Cannot compute positions for average pool."); var l = n.filterWidth, a = n.strideDepth, v = n.strideHeight, y = n.strideWidth, p = n.dilationDepth, w = n.dilationHeight, r = n.dilationWidth, b = n.effectiveFilterDepth, e = n.effectiveFilterHeight, o = n.effectiveFilterWidth, k = n.padInfo.front, d = n.padInfo.top, g = n.padInfo.left; if (this.outputShape = n.outShape, s = "avg" === t, u = "0.0", s || (u = "-1.0 / 1e-20"), i) this.userCode = "\n        const ivec3 strides =\n            ivec3(" + a + ", " + v + ", " + y + ");\n        const ivec3 pads = ivec3(" + k + ", " + d + ", " + g + ");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < " + b + ";\n              wD += " + p + ") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= " + n.inDepth + ") {\n              continue;\n            }\n\n            for (int wR = 0; wR < " + e + ";\n                wR += " + w + ") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= " + n.inHeight + ") {\n                continue;\n              }\n\n              for (int wC = 0; wC < " + o + ";\n                  wC += " + r + ") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= " + n.inWidth + ") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition =\n                      wD * " + e + " * " + o + " +\n                      wR * " + o + " + wC;;\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "; else { h = t + "(" + t + "(" + t + "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])"; "avg" === t && (h = "avgValue / count"); var nt = 4 * Math.floor(l / 4), c = l % 4, f = "\n      if (" + s + ") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    "; this.userCode = "\n      const ivec3 strides =\n        ivec3(" + a + ", " + v + ", " + y + ");\n      const ivec3 pads = ivec3(" + k + ", " + d + ", " + g + ");\n      const float initializationValue = " + u + ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= " + n.inWidth + ") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(" + u + ");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < " + b + ";\n            wD += " + p + ") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= " + n.inDepth + ") {\n            continue;\n          }\n\n          for (int wR = 0; wR < " + e + ";\n            wR += " + w + ") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= " + n.inHeight + ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < " + nt + "; wC += 4) {\n              int xC = xCCorner + wC * " + r + ";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + " + r + ", ch),\n                getValue(batch, xD, xR, xC + 2 * " + r + ", ch),\n                getValue(batch, xD, xR, xC + 3 * " + r + ", ch)\n              );\n\n              " + f + "\n            }\n\n            int xC = xCCorner + " + nt + ";\n            if (" + (1 === c) + ") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              " + f + "\n            } else if (" + (2 === c) + ") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + " + r + ", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              " + f + "\n            } else if (" + (3 === c) + ") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + " + r + ", ch),\n                getValue(batch, xD, xR, xC + 2 * " + r + ", ch),\n                initializationValue\n              );\n\n              " + f + "\n            }\n          }\n          setOutput(" + h + ");\n        }\n      }\n    " } }, ynt = function (n, t) { var r, o, u, c; this.variableNames = ["x"]; var e = n.windowSize, a = n.batchSize, s = n.inSize, v = Math.ceil(s / e); this.outputShape = [a, v]; r = "0.0"; o = ""; "prod" === t ? r = "1.0" : "min" === t ? (r = "1.0 / 1e-20", o = "min") : "max" === t && (r = "-1.0 / 1e-20", o = "max"); u = t + "(" + t + "(" + t + "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])"; "sum" === t ? u = "sumValue" : "prod" === t ? u = "prodValue" : "all" === t ? u = "allValue" : "any" === t && (u = "anyValue"); var l = 4 * Math.floor(e / 4), h = e % 4, f = "\n      if (" + ("sum" === t) + ") {\n        sumValue += dot(values, ones);\n      } else if (" + ("prod" === t) + ") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = " + o + "(values, minMaxValue);\n      }\n    ", i = "vec4"; "all" === t ? (r = "1.0", f = "\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ", i = "bvec4") : "any" === t && (r = "0.0", f = "\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ", i = "bvec4"); c = ""; s % e > 0 && (c = "\n        if (inIdx < 0 || inIdx >= " + s + ") {\n          return initializationValue;\n        }\n      "); this.userCode = "\n      const float initializationValue = " + r + ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        " + c + "\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * " + e + ";\n\n        vec4 minMaxValue = vec4(" + r + ");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < " + l + "; i += 4) {\n          int inIdx = inOffset + i;\n          " + i + " values = " + i + "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          " + f + "\n        }\n\n        int inIdx = inOffset + " + l + ";\n        if (" + (1 === h) + ") {\n          " + i + " values = " + i + "(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          " + f + "\n        } else if (" + (2 === h) + ") {\n          " + i + " values = " + i + "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          " + f + "\n        } else if (" + (3 === h) + ") {\n          " + i + " values = " + i + "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          " + f + "\n        }\n        setOutput(" + u + ");\n      }\n    " }, pnt = function (n, t) { var u, i, r; for (this.variableNames = ["A"], this.packedInputs = !0, this.packedOutput = !0, this.outputShape = n, u = "", i = 0; i < 4; i++)r = "thisRC = rc;", i % 2 == 1 && (r += "thisRC.z += 1;"), i > 1 && (r += "thisRC.y += 1;"), u += "\n        " + r + "\n        " + (i > 0 ? "if(thisRC.y < rows && thisRC.z < cols){" : "") + "\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[" + i + "] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        " + (i > 0 ? "}" : "") + "\n      "; this.userCode = "\n      \n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      " + ce(["r", "c", "d"], t) + "\n      return ivec3(r, c, d);\n    }\n  \n      " + aw(n) + "\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = " + n[1] + ";\n        int cols = " + n[2] + ";\n\n        " + u + "\n\n        setOutput(result);\n      }\n    " }, wnt = function (n, t, i) { this.variableNames = ["dy"]; this.outputShape = []; this.outputShape = t.shape; var o = t.shape, f = o[1], e = o[2], s = n.shape, r = s[1], u = s[2], h = [i && r > 1 ? f - 1 : f, i && u > 1 ? e - 1 : e], c = [i && r > 1 ? r - 1 : r, i && u > 1 ? u - 1 : u], l = h[0] / c[0], a = h[1] / c[1], v = 1 / l, y = 1 / a, p = 2 * Math.ceil(v) + 2, w = 2 * Math.ceil(y) + 2; this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(" + l + ");\n        const float widthScale = float(" + a + ");\n\n        const float invHeightScale = float(" + v + ");\n        const float invWidthScale = float(" + y + ");\n\n        const int winHeight = int(" + p + ");\n        const int winWidth = int(" + w + ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= " + r + ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= " + u + ") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), " + (f - 1) + ".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), " + (e - 1) + ".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    " }, bnt = function (n, t, i, r) { var e, o; this.variableNames = ["A"]; this.outputShape = []; var s = n[0], u = n[1], f = n[2], h = n[3]; this.outputShape = [s, t, i, h]; e = [r && t > 1 ? u - 1 : u, r && i > 1 ? f - 1 : f]; o = [r && t > 1 ? t - 1 : t, r && i > 1 ? i - 1 : i]; this.userCode = "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          " + e[0] / o[0] + ",\n          " + e[1] / o[1] + ");\n      const vec2 inputShapeRC = vec2(" + u + ".0, " + f + ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    " }, knt = function (n, t, i, r) { var f, e; this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = []; var h = n[0], o = n[1], u = n[2], s = n[3]; this.outputShape = [h, t, i, s]; f = [r && t > 1 ? o - 1 : o, r && i > 1 ? u - 1 : u]; e = [r && t > 1 ? t - 1 : t, r && i > 1 ? i - 1 : i]; this.userCode = "\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          " + f[0] / e[0] + ",\n          " + f[1] / e[1] + ",\n          " + f[1] / e[1] + ");\n      const vec3 inputShapeRC = vec3(" + o + ".0, " + u + ".0,\n                                     " + u + ".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < " + (s - 1) + ";\n        bool hasNextRow = coords.z < " + (i - 1) + ";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    " }, dnt = function (n, t, i) { this.variableNames = ["dy"]; this.outputShape = []; this.outputShape = t.shape; var h = t.shape, o = h[1], s = h[2], c = n.shape, r = c[1], u = c[2], f = [i && r > 1 ? o - 1 : o, i && u > 1 ? s - 1 : s], e = [i && r > 1 ? r - 1 : r, i && u > 1 ? u - 1 : u], l = f[0] / e[0], a = f[1] / e[1], v = 1 / l, y = 1 / a, p = 2 * Math.ceil(v) + 2, w = 2 * Math.ceil(y) + 2; this.userCode = "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(" + l + ");\n        const float widthScale = float(" + a + ");\n\n        const float invHeightScale = float(" + v + ");\n        const float invWidthScale = float(" + y + ");\n\n        const int winHeight = int(" + p + ");\n        const int winWidth = int(" + w + ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= " + r + ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= " + u + ") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(" + f[0] + ") *\n                (float(dyR) / float(" + e[0] + "));\n\n            float sourceFracCol =\n                float(" + f[1] + ") *\n                  (float(dyC) / float(" + e[1] + "));\n\n            int sourceNearestRow = int(min(\n                float(int(" + o + ") - 1),\n                " + i + " ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(" + s + ") - 1),\n                " + i + " ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    " }, gnt = function (n, t, i, r) { this.variableNames = ["A"]; this.outputShape = []; var s = n[0], u = n[1], f = n[2], h = n[3]; this.outputShape = [s, t, i, h]; var e = [r && t > 1 ? u - 1 : u, r && i > 1 ? f - 1 : f], o = [r && t > 1 ? t - 1 : t, r && i > 1 ? i - 1 : i], c = r ? "0.5" : "0.0"; this.userCode = "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          " + e[0] / o[0] + ",\n          " + e[1] / o[1] + ");\n      const vec2 inputShapeRC = vec2(" + u + ".0, " + f + ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + " + c + ")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    " }, nti = function (n, t) { var i, r, u; if (this.variableNames = ["x"], i = n.length, i > 4) throw new Error("WebGL backend: Reverse of rank-" + i + " tensor is not yet supported"); (this.outputShape = n, 1 !== i) ? (r = n.map(function (i, r) { return function (i) { return -1 !== t.indexOf(i) && 1 !== n[i] ? n[i] + " - coords[" + i + "] - 1" : "coords[" + i + "]" }(r) }).join(","), u = st(i), this.userCode = "\n      void main() {\n        " + u + " coords = getOutputCoords();\n        setOutput(getX(" + r + "));\n      }\n    ") : this.userCode = "\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(" + n[0] + " - coord - 1));\n        }\n      " }, tti = function (n, t) { function u(i) { var r = n.map(function (r, u) { return function (i, r) { return -1 !== t.indexOf(i) && 1 !== n[i] ? n[i] + " - " + r[i] + " - 1" : "" + r[i] }(u, i) }); return "getChannel(getX(" + r.join(",") + "), vec2(" + r.slice(-2).join(",") + "))" } var i; if (this.variableNames = ["x"], this.packedInputs = !0, this.packedOutput = !0, i = n.length, i > 4) throw new Error("WebGL backend: Reverse of rank-" + i + " tensor is not yet supported"); this.outputShape = n; var r = ki("rc", i), f = r[i - 1] + " + 1 < " + this.outputShape[i - 1], e = r[i - 2] + " + 1 < " + this.outputShape[i - 2], o = st(i); this.userCode = 1 === i ? "\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(" + n[0] + " - rc - 1),\n            " + n[0] + " - rc - 1);\n          if(" + f + "){\n              result.g = getChannel(getX(" + n[0] + " - (rc  + 1) - 1),\n                " + n[0] + " - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      " : "\n        void main() {\n          " + o + " rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = " + function (n) { return u(n) }(r.slice()) + ";\n          if(" + f + "){\n            result.g = " + function (n) { return n[i - 1] = "(" + n[i - 1] + " + 1)", u(n) }(r.slice()) + ";\n          }\n          if(" + e + ") {\n            result.b = " + function (n) { return n[i - 2] = "(" + n[i - 2] + " + 1)", u(n) }(r.slice()) + ";\n            if(" + f + ") {\n              result.a = " + function (n) { return n[i - 1] = "(" + n[i - 1] + " + 1)", n[i - 2] = "(" + n[i - 2] + " + 1)", u(n) }(r.slice()) + ";\n            }\n          }\n          setOutput(result);\n        }\n    " }, pet = function (n, t, i, r, u, f) { var h, e, c, l; this.variableNames = ["updates", "indices", "defaultValue"]; this.outputShape = f; var s = st(u.length), a = st(f.length), o = ""; 1 === i ? o = "i" : 2 === i && (o = "i, j"); h = "getIndices(" + o + ")"; e = ""; 1 === r ? e = "i" : 2 === r && (e = "i, coords[1]"); c = "getUpdates(" + e + ")"; l = t > 1 ? "strides[j]" : "strides"; this.userCode = "\n        " + s + " strides = " + s + "(" + u + ");\n\n        void main() {\n          " + a + " coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < " + n + "; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < " + t + "; j++) {\n              int index = round(" + h + ");\n              flattenedIndex += index * " + l + ";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += " + c + ";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      " }, iti = function (n) { var e; this.variableNames = ["x", "segmentIds"]; var t = n.windowSize, h = n.batchSize, i = n.inSize, u = n.numSegments, c = u * Math.ceil(i / t); this.outputShape = [h, c]; var o = 4 * Math.floor(t / 4), f = t % 4, r = "\n        sumValue += dot(values, segFilter);\n    ", s = ""; i % t > 0 && (s = "\n        if (inIdx < 0 || inIdx >= " + i + ") {\n          return initializationValue;\n        }\n      "); e = ""; i % t > 0 && (e = "\n        if (inIdx < 0 || inIdx >= " + i + ") {\n          return -1.0;\n        }\n      "); this.userCode = "\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        " + s + "\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        " + e + "\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          " + u + ")) * float(" + t + "));\n        int currentSeg = int(mod(float(outIdx), float(" + u + ")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < " + o + "; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          " + r + "\n        }\n\n        int inIdx = inOffset + " + o + ";\n        if (" + (1 === f) + ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          " + r + "\n        } else if (" + (2 === f) + ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          " + r + "\n        } else if (" + (3 === f) + ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          " + r + "\n        }\n        setOutput(sumValue);\n      }\n    " }, rti = function (n, t, i) { var f, u, h; if (this.variableNames = ["c", "a", "b"], this.outputShape = t, i > 4) throw Error("Where for rank " + i + " is not yet supported"); if (1 === i) u = "resRC", f = "resRC"; else { for (var e = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"], o = [], s = [], r = 0; r < t.length; r++)s.push("" + e[r]), r < n && o.push("" + e[r]); f = o.join(); u = s.join() } h = st(i); this.userCode = "\n      void main() {\n        " + h + " resRC = getOutputCoords();\n        float cVal = getC(" + f + ");\n        if (cVal >= 1.0) {\n          setOutput(getA(" + u + "));\n        } else {\n          setOutput(getB(" + u + "));\n        }\n      }\n    " }, uti = function () { function n(n) { this.variableNames = ["source"]; this.outputShape = n; this.rank = n.length; var t, i = st(this.rank), r = "uniform int start[" + this.rank + "];", u = function (n) { if (1 === n) return "sourceLoc"; if (n <= 6) return gw.slice(0, n).map(function (n) { return "sourceLoc." + n }).join(","); throw Error("Slicing for rank " + n + " is not yet supported"); }(this.rank); t = "\n        " + i + " sourceLoc;\n        " + i + " coords = getOutputCoords();\n        " + n.map(function (n, t) { return "sourceLoc." + gw[t] + " = start[" + t + "] + coords." + gw[t] + ";" }).join("\n") + "\n      "; this.userCode = "\n      " + r + "\n      void main() {\n        " + t + "\n        setOutput(getSource(" + u + "));\n      }\n    " } return n.prototype.getCustomSetupFunc = function (n) { var t = this; if (n.length !== this.rank) throw Error("The rank (" + this.rank + ") of the program must match the length of start (" + n.length + ")"); return function (i, r) { null == t.startLoc && (t.startLoc = i.getUniformLocationNoThrow(r, "start"), null == t.startLoc) || i.gl.uniform1iv(t.startLoc, n) } }, n }(), gw = ["x", "y", "z", "w", "u", "v"], fti = function () { function n(n) { this.variableNames = ["source"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = n; this.rank = n.length; var u = st(this.rank), i = ki("coords", this.rank), t = ki("sourceLoc", this.rank), f = 1 === this.rank ? "sourceLoc" : "vec2(" + t.slice(-2).join() + ")", r = "getChannel(getSource(" + t.join() + "), " + f + ")", e = "\n      result.x = " + r + ";\n      if (++" + i[this.rank - 1] + " < " + n[this.rank - 1] + ") {\n        ++" + t[this.rank - 1] + ";\n        result.y = " + r + ";\n        --" + t[this.rank - 1] + ";\n      }\n    ", o = 1 === this.rank ? "" : "\n      --" + i[this.rank - 1] + ";\n      if (++" + i[this.rank - 2] + " < " + n[this.rank - 2] + ") {\n        ++" + t[this.rank - 2] + ";\n        result.z = " + r + ";\n        if (++" + i[this.rank - 1] + " < " + n[this.rank - 1] + ") {\n          ++" + t[this.rank - 1] + ";\n          result.w = " + r + ";\n        }\n      }\n    ", s = this.rank <= 4 ? "sourceLoc = coords +\n            " + u + "(" + n.map(function (n, t) { return "start[" + t + "]" }).join() + ");" : n.map(function (n, r) { return t[r] + " = " + i[r] + " + start[" + r + "];" }).join("\n"); this.userCode = "\n      uniform int start[" + this.rank + "];\n      void main() {\n        " + u + " coords = getOutputCoords();\n        " + u + " sourceLoc;\n        " + s + "\n        vec4 result = vec4(0.);\n        " + e + "\n        " + o + "\n        setOutput(result);\n      }\n    " } return n.prototype.getCustomSetupFunc = function (n) { var t = this; if (n.length !== this.rank) throw Error("The rank (" + this.rank + ") of the program must match the length of start (" + n.length + ")"); return function (i, r) { null == t.startLoc && (t.startLoc = i.getUniformLocationNoThrow(r, "start"), null == t.startLoc) || i.gl.uniform1iv(t.startLoc, n) } }, n }(), eti = function (n, t, i) { var f; this.variableNames = ["x"]; this.outputShape = i; var e = i.length, r = st(i.length), o = st(i.length), u = ""; 1 === e ? u = "coords * strides + begin" : (f = 0, u = i.map(function (n, t) { return f++, 1 === i.length ? "coords * strides[" + t + "] + begin[" + t + "]" : "coords[" + (f - 1) + "] * strides[" + t + "] + begin[" + t + "]" }).join(",")); this.userCode = "\n      " + r + " begin = " + r + "(" + n + ");\n      " + r + " strides = " + r + "(" + t + ");\n\n      void main() {\n        " + o + " coords = getOutputCoords();\n        setOutput(getX(" + u + "));\n      }\n    " }, oti = function () { function n(n) { this.gpgpu = n; this.numUsedTextures = 0; this.numFreeTextures = 0; this.freeTextures = {}; this.logEnabled = !1; this.usedTextures = {} } return n.prototype.acquireTexture = function (n, t, i) { var u, f = wet(t, i), r = bet(n, f, i), e; return (r in this.freeTextures || (this.freeTextures[r] = []), r in this.usedTextures || (this.usedTextures[r] = []), this.freeTextures[r].length > 0) ? (this.numFreeTextures--, this.numUsedTextures++, this.log(), e = this.freeTextures[r].shift(), this.usedTextures[r].push(e), e) : (this.numUsedTextures++, this.log(), f === nr.PACKED_2X2_FLOAT32 ? u = this.gpgpu.createPackedMatrixTexture(n[0], n[1]) : f === nr.PACKED_2X2_FLOAT16 ? u = this.gpgpu.createFloat16PackedMatrixTexture(n[0], n[1]) : f === nr.UNPACKED_FLOAT32 ? u = this.gpgpu.createFloat32MatrixTexture(n[0], n[1]) : f === nr.UNPACKED_FLOAT16 ? u = this.gpgpu.createFloat16MatrixTexture(n[0], n[1]) : f === nr.PACKED_4X1_UNSIGNED_BYTE && (u = this.gpgpu.createUnsignedBytesMatrixTexture(n[0], n[1])), this.usedTextures[r].push(u), u) }, n.prototype.releaseTexture = function (n, t, i, r) { var u, f, e; if (null != this.freeTextures) { if (u = bet(t, wet(i, r), r), u in this.freeTextures || (this.freeTextures[u] = []), this.freeTextures[u].push(n), this.numFreeTextures++, this.numUsedTextures--, f = this.usedTextures[u], e = f.indexOf(n), e < 0) throw new Error("Cannot release a texture that was never provided by this texture manager"); f.splice(e, 1); this.log() } }, n.prototype.log = function () { if (this.logEnabled) { var n = this.numFreeTextures + this.numUsedTextures; console.log("Free/Used", this.numFreeTextures + " / " + this.numUsedTextures, "(" + n + ")") } }, n.prototype.getNumUsedTextures = function () { return this.numUsedTextures }, n.prototype.getNumFreeTextures = function () { return this.numFreeTextures }, n.prototype.dispose = function () { var t = this, n; if (null != this.freeTextures) { for (n in this.freeTextures) this.freeTextures[n].forEach(function (n) { t.gpgpu.deleteMatrixTexture(n) }); for (n in this.usedTextures) this.usedTextures[n].forEach(function (n) { t.gpgpu.deleteMatrixTexture(n) }); this.freeTextures = null; this.usedTextures = null; this.numUsedTextures = 0; this.numFreeTextures = 0 } }, n }(); var sti = function (n, t) { var r, i, u, f; for (this.variableNames = ["A"], r = new Array(n.length), i = 0; i < r.length; i++)r[i] = n[i] * t[i]; this.outputShape = r; this.rank = r.length; u = st(this.rank); f = function (n) { var i = n.length; if (i > 5) throw Error("Tile for rank " + i + " is not yet supported"); if (1 === i) return "imod(resRC, " + n[0] + ")"; for (var u = ["resRC.x", "resRC.y", "resRC.z", "resRC.w", "resRC.u"], r = [], t = 0; t < n.length; t++)r.push("imod(" + u[t] + ", " + n[t] + ")"); return r.join() }(n); this.userCode = "\n      void main() {\n        " + u + " resRC = getOutputCoords();\n        setOutput(getA(" + f + "));\n      }\n    " }, hti = function (n, t) { var i, r, u, f; for (this.variableNames = ["A"], i = new Array(n.length), r = 0; r < i.length; r++)i[r] = n[t[r]]; this.outputShape = i; this.rank = i.length; u = st(this.rank); f = function (n) { var i = n.length; if (i > 6) throw Error("Transpose for rank " + i + " is not yet supported"); for (var u = ["resRC.x", "resRC.y", "resRC.z", "resRC.w", "resRC.u", "resRC.v"], r = new Array(i), t = 0; t < n.length; t++)r[n[t]] = u[t]; return r.join() }(t); this.userCode = "\n    void main() {\n      " + u + " resRC = getOutputCoords();\n      setOutput(getA(" + f + "));\n    }\n    " }, cti = function (n, t) { var r, i; for (this.variableNames = ["A"], this.packedInputs = !0, this.packedOutput = !0, r = new Array(n.length), i = 0; i < r.length; i++)r[i] = n[t[i]]; if (this.outputShape = r, this.rank = r.length, this.rank > 6) throw Error("Packed transpose for rank " + this.rank + " is not yet supported."); var s = st(this.rank), u = eft("rc", this.rank), e = new Array(this.rank); for (i = 0; i < t.length; i++)e[t[i]] = u[i]; var h = "vec2(" + e.slice(-2).join() + ")", o = "++" + u[this.rank - 1] + " < " + r[this.rank - 1], f = "getChannel(getA(" + e.join() + "), " + h + ")"; this.userCode = "\n    void main() {\n      " + s + " rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = " + f + ";\n      if(" + o + ") {\n        result[1] = " + f + ";\n      }\n      --" + u[this.rank - 1] + ";\n      if(++" + u[this.rank - 2] + " < " + r[this.rank - 2] + ") {\n        result[2] = " + f + ";\n        if(" + o + ") {\n          result[3] = " + f + ";\n        }\n      }\n      setOutput(result);\n    }\n    " }, nb = 1.7580993408473768, tb = 1.0507009873554805, g = function (n, t) { this.variableNames = ["A"]; this.outputShape = n; this.userCode = "\n      float unaryOperation(float x) {\n        " + t + "\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    " }, wr = "if (isnan(x)) return x;", lti = "return x;", ket = "return abs(x);", det = wr + "\n  return (x < 0.0) ? 0.0 : x;\n", get = wr + "\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n", not = "return (x >= 0.0) ? x : (exp(x) - 1.0);", ati = "\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = " + nb + ";\n  float scale = " + tb + ";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n", tot = "return -x;", iot = "return ceil(x);", rot = "return floor(x);", uot = "return exp(x);", fot = "return exp(x) - 1.0;", vti = wr + "\n  return sin(x);\n", yti = wr + "\n  return cos(x);\n", pti = wr + "\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n", wti = wr + "\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n", bti = wr + "\n  return atan(x);\n", kti = wr + "return log(x + sqrt(x * x + 1.0));", dti = wr + "\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));", gti = wr + "\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;", yl = "return x;", nii = "return x;", eot = "\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n", oot = "\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n", sot = "\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n", rh = function (n, t) { this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !0; this.outputShape = n; this.userCode = "\n      vec4 unaryOperation(vec4 x) {\n        " + t + "\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    " }, tii = function (n) { this.variableNames = ["A"]; this.packedInputs = !0; this.packedOutput = !1; this.outputShape = n; var t = n.length, i = ki("rc", t), r = st(t), u = function (n, t) { if (1 === n) return "rc"; for (var r = "", i = 0; i < n; i++)r += t[i], i < n - 1 && (r += ","); return r }(t, i), f = i.slice(-2), e = t <= 1 ? "rc" : "vec2(" + f.join(",") + ")"; this.userCode = "\n      void main() {\n        " + r + " rc = getOutputCoords();\n        vec4 packedInput = getA(" + u + ");\n\n        setOutput(getChannel(packedInput, " + e + "));\n      }\n    " }, pl = {}; hot = 600; ib = function (n) { function t(t) { var u, i = n.call(this) || this, f; if (i.pendingRead = new WeakMap, i.pendingDisposal = new WeakSet, i.dataRefCount = new WeakMap, i.numBytesInGPU = 0, i.uploadWaitMs = 0, i.downloadWaitMs = 0, i.warnedAboutMemory = !1, i.pendingDeletes = 0, i.disposed = !1, !o().getBool("HAS_WEBGL")) throw new Error("WebGL is not supported on this device"); return null == t ? (f = ru(o().getNumber("WEBGL_VERSION")), i.binaryCache = (u = o().getNumber("WEBGL_VERSION")) in pl ? pl[u] : (pl[u] = {}, pl[u]), i.gpgpu = new ww(f), i.canvas = f.canvas, i.gpgpuCreatedLocally = !0) : (i.gpgpu = t, i.binaryCache = {}, i.gpgpuCreatedLocally = !1, i.canvas = t.gl.canvas), i.textureManager = new oti(i.gpgpu), i.numMBBeforeWarning = null == o().global.screen ? 1024 : o().global.screen.height * o().global.screen.width * window.devicePixelRatio * hot / 1048576, i.texData = new iw(i, r), i } return hr(t, n), t.prototype.numDataIds = function () { return this.texData.numDataIds() + (this.cpuBackend ? this.cpuBackend.numDataIds() : 0) - this.pendingDeletes }, t.prototype.write = function (n, t, i) { if (o().getBool("DEBUG") && this.checkNumericalProblems(n), "complex64" === i && null != n) throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag)."); var r = {}; return this.texData.set(r, { shape: t, dtype: i, values: n, usage: gi.UPLOAD }), r }, t.prototype.move = function (n, t, i, r) { if (o().getBool("DEBUG") && this.checkNumericalProblems(t), "complex64" === r) throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag)."); this.texData.set(n, { shape: i, dtype: r, values: t, usage: gi.UPLOAD }) }, t.prototype.readSync = function (n) { var t = this.texData.get(n), o = t.values, i = t.dtype, s = t.complexTensors, a = t.slice, r = t.shape, v = t.isPacked, u, f, h, c, l, e; return null != a ? (u = void 0, u = v ? new rh(r, yl) : new g(r, yl), f = this.runWebGLProgram(u, [{ dataId: n, shape: r, dtype: i }], i), h = this.readSync(f.dataId), this.disposeData(f.dataId), h) : null != o ? this.convertAndCacheOnCPU(n) : "string" === i ? o : (e = null != this.activeTimers, l = (e && (c = lr()), "complex64" === i) ? sw(s.real.dataSync(), s.imag.dataSync()) : this.getValuesFromTexture(n), e && (this.downloadWaitMs += lr() - c), this.convertAndCacheOnCPU(n, l)) }, t.prototype.read = function (n) { return y(this, void 0, void 0, function () { var v, t, y, i, b, r, s, k, h, c, d, u, f, nt, e, l, tt, it, rt, a, ut, ft; return p(this, function (p) { switch (p.label) { case 0: if (this.pendingRead.has(n)) return v = this.pendingRead.get(n), [2, new Promise(function (n) { return v.push(n) })]; if (t = this.texData.get(n), y = t.values, i = t.shape, b = t.slice, r = t.dtype, s = t.complexTensors, k = t.isPacked, null != b) return h = void 0, h = k ? new rh(i, yl) : new g(i, yl), c = this.runWebGLProgram(h, [{ dataId: n, shape: i, dtype: r }], r), d = this.read(c.dataId), this.disposeData(c.dataId), [2, d]; if (null != y) return [2, this.convertAndCacheOnCPU(n)]; if (!o().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED") && 2 === o().getNumber("WEBGL_VERSION")) throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported."); return u = null, "complex64" !== r && o().get("WEBGL_BUFFER_SUPPORTED") && (f = this.decode(n), nt = this.texData.get(f.dataId), u = (ft = this.gpgpu).createBufferFromTexture.apply(ft, [nt.texture].concat(hs(i)))), this.pendingRead.set(n, []), "complex64" === r ? [3, 2] : [4, this.gpgpu.createAndWaitForFence()]; case 1: p.sent(); p.label = 2; case 2: return "complex64" !== r ? [3, 4] : [4, Promise.all([s.real.data(), s.imag.data()])]; case 3: return l = p.sent(), tt = l[0], it = l[1], e = sw(tt, it), [3, 5]; case 4: null == u ? e = this.getValuesFromTexture(n) : (rt = w(i), e = this.gpgpu.downloadFloat32MatrixFromBuffer(u, rt)); p.label = 5; case 5: return null != f && this.disposeData(f.dataId), a = this.convertAndCacheOnCPU(n, e), ut = this.pendingRead.get(n), this.pendingRead.delete(n), ut.forEach(function (n) { return n(a) }), this.pendingDisposal.has(n) && (this.pendingDisposal.delete(n), this.disposeData(n), this.pendingDeletes--), [2, a] } }) }) }, t.prototype.checkNumericalProblems = function (n) { var t, i; if (null != n) for (t = 0; t < n.length; t++)if (i = n[t], !btt(i)) { if (o().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")) throw Error("The value " + i + " cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'"); throw Error("The value " + i + " cannot be represented on this device."); } }, t.prototype.getValuesFromTexture = function (n) { var f, i = this.texData.get(n), t = i.shape, l = i.dtype, a = i.isPacked, e = w(t); if (o().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")) { var s = this.decode(n), v = this.texData.get(s.dataId), y = (f = this.gpgpu).downloadMatrixFromPackedTexture.apply(f, [v.texture].concat(hs(t))).subarray(0, e); return this.disposeData(s.dataId), y } var h = o().getBool("WEBGL_PACK") && !0 === a, r = h ? wc(t) : t, p = h ? new wgt(r) : new pgt(r), c = this.runWebGLProgram(p, [{ shape: r, dtype: l, dataId: n }], "float32"), u = this.texData.get(c.dataId), b = this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture, u.texShape[0], u.texShape[1]).subarray(0, e); return this.disposeData(c.dataId), b }, t.prototype.time = function (n) { return y(this, void 0, void 0, function () { var f, i, r, e, s, t, u; return p(this, function (h) { switch (h.label) { case 0: return f = this.activeTimers, i = [], r = !1, null == this.programTimersStack ? (this.programTimersStack = i, r = !0) : this.activeTimers.push(i), this.activeTimers = i, n(), e = hu(this.activeTimers.map(function (n) { return n.query })).filter(function (n) { return null != n }), s = hu(this.activeTimers.map(function (n) { return n.name })).filter(function (n) { return null != n }), this.activeTimers = f, r && (this.programTimersStack = null), t = { uploadWaitMs: this.uploadWaitMs, downloadWaitMs: this.downloadWaitMs, kernelMs: null, wallMs: null }, o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0 ? [4, Promise.all(e)] : [3, 2]; case 1: return u = h.sent(), t.kernelMs = bn(u), t.getExtraProfileInfo = function () { return u.map(function (n, t) { return { name: s[t], ms: n } }).map(function (n) { return n.name + ": " + n.ms }).join(", ") }, [3, 3]; case 2: t.kernelMs = { error: "WebGL query timers are not supported in this environment." }; h.label = 3; case 3: return this.uploadWaitMs = 0, this.downloadWaitMs = 0, [2, t] } }) }) }, t.prototype.memory = function () { return { unreliable: !1, numBytesInGPU: this.numBytesInGPU } }, t.prototype.startTimer = function () { return o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0 ? this.gpgpu.beginQuery() : { startMs: lr(), endMs: null } }, t.prototype.endTimer = function (n) { return o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0 ? (this.gpgpu.endQuery(), n) : (n.endMs = lr(), n) }, t.prototype.getQueryTime = function (n) { return y(this, void 0, void 0, function () { var t; return p(this, function () { return o().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE") > 0 ? [2, this.gpgpu.waitForQueryAndGetTime(n)] : [2, (t = n).endMs - t.startMs] }) }) }, t.prototype.disposeData = function (n) { if (!this.pendingDisposal.has(n)) { if (this.pendingRead.has(n)) return this.pendingDisposal.add(n), void this.pendingDeletes++; if (this.texData.has(n)) { this.releaseGPUData(n); var t = this.texData.get(n).complexTensors; null != t && (t.real.dispose(), t.imag.dispose()); this.texData.delete(n) } } }, t.prototype.releaseGPUData = function (n) { var t = this.texData.get(n), u = t.texture, s = t.dtype, f = t.texShape, h = t.usage, c = t.isPacked, e = t.slice, r = e && e.origDataId || n, o = this.dataRefCount.get(r), i; o > 1 ? this.dataRefCount.set(r, o - 1) : (this.dataRefCount.delete(r), null != u && (this.numBytesInGPU -= this.computeBytes(f, s), this.textureManager.releaseTexture(u, f, h, c))); i = this.texData.get(n); i.texture = null; i.texShape = null; i.isPacked = !1; i.slice = null }, t.prototype.getTexture = function (n) { return this.uploadToGPU(n), this.texData.get(n).texture }, t.prototype.getDataInfo = function (n) { return this.texData.get(n) }, t.prototype.getCPUBackend = function () { return o().getBool("WEBGL_CPU_FORWARD") ? (null == this.cpuBackend && (this.cpuBackend = r.findBackend("cpu")), this.cpuBackend) : null }, t.prototype.shouldExecuteOnCPU = function (n, t) { var i = this; return void 0 === t && (t = 128), null != this.getCPUBackend() && n.every(function (n) { return null == i.texData.get(n.dataId).texture && n.size < t }) }, t.prototype.getGPGPUContext = function () { return this.gpgpu }, t.prototype.complex = function (n, t) { var i = this.makeOutput(n.shape, "complex64"); return this.texData.get(i.dataId).complexTensors = { real: r.keep(n.clone()), imag: r.keep(t.clone()) }, i }, t.prototype.real = function (n) { return this.texData.get(n.dataId).complexTensors.real.clone() }, t.prototype.imag = function (n) { return this.texData.get(n.dataId).complexTensors.imag.clone() }, t.prototype.slice = function (n, t, i) { var u, f, r, e; return this.shouldExecuteOnCPU([n]) ? this.cpuBackend.slice(n, t, i) : 0 === w(i) ? fi([], i, n.dtype) : (u = this.texData.get(n.dataId).isPacked, f = nw(n.shape, t, i), u || !f) ? (r = o().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new fti(i) : new uti(i), e = r.getCustomSetupFunc(t), this.compileAndRun(r, [n], null, e)) : (this.uploadToGPU(n.dataId), this.shallowSlice(n, t, i)) }, t.prototype.shallowSlice = function (n, t, i) { var u = this.texData.get(n.dataId), e = this.makeOutput(i, n.dtype), r = this.texData.get(e.dataId), f, o; return Object.assign(r, u), r.shape = i, r.dtype = n.dtype, f = tw(t, n.strides), u.slice && (f += u.slice.flatOffset), r.slice = { flatOffset: f, origDataId: u.slice && u.slice.origDataId || n.dataId }, o = this.dataRefCount.get(r.slice.origDataId) || 1, this.dataRefCount.set(r.slice.origDataId, o + 1), e }, t.prototype.stridedSlice = function (n, t, i, r) { var u, f; return this.shouldExecuteOnCPU([n]) ? this.cpuBackend.stridedSlice(n, t, i, r) : (u = sl(t, i, r), u.some(function (n) { return 0 === n })) ? fi([], u) : (f = new eti(t, r, u), this.compileAndRun(f, [n])) }, t.prototype.reverse = function (n, t) { var i = o().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new tti(n.shape, t) : new nti(n.shape, t); return this.compileAndRun(i, [n]) }, t.prototype.concat = function (n, t) { var i, r, f; if ("complex64" === n[0].dtype) return i = n.map(function (n) { return ir(n) }), r = n.map(function (n) { return yr(n) }), ui(this.concat(i, t), this.concat(r, t)); if (this.shouldExecuteOnCPU(n)) return this.cpuBackend.concat(n, t); if (1 === n.length) return n[0]; if (n.length > o().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")) { var u = Math.floor(n.length / 2), s = this.concat(n.slice(0, u), t), h = this.concat(n.slice(u), t); return this.concat([s, h], t) } if (o().getBool("WEBGL_PACK_ARRAY_OPERATIONS") && n[0].rank > 1) return f = new tgt(n.map(function (n) { return n.shape }), t), this.compileAndRun(f, n); var c = ue(n.map(function (n) { return n.shape }), t), e = n.map(function (n) { return n.as2D(-1, w(n.shape.slice(t))) }), l = new ngt(e.map(function (n) { return n.shape })); return this.compileAndRun(l, e).reshape(c) }, t.prototype.neg = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.neg(n); if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, tot, n.dtype); var t = new g(n.shape, tot); return this.compileAndRun(t, [n]) }, t.prototype.batchMatMul = function (n, t, i, r) { var o = i ? n.shape[2] : n.shape[1], u = r ? t.shape[1] : t.shape[2], f = i ? n.shape[1] : n.shape[2], e = n.shape[0], s, h; if ((1 === o || 1 === u) && f > 1e3) { i && (n = n.transpose([0, 2, 1])); r && (t = t.transpose([0, 2, 1])); var c = 1 === u ? n : n.as3D(e, f, 1), l = 1 === u ? 2 : 1, a = 1 === u ? t.as3D(e, 1, f) : t; return this.multiply(c, a).sum(l, !0) } return s = ri(n.dtype, t.dtype), h = new bw(n.shape, [e, o, u], i, r), this.compileAndRun(h, [n, t], s) }, t.prototype.fusedBatchMatMul = function (n) { var t = n.a, i = n.b, e = n.transposeA, o = n.transposeB, r = n.bias, s = n.activation, u = n.preluActivationWeights, h = e ? t.shape[2] : t.shape[1], c = o ? i.shape[1] : i.shape[2], l = t.shape[0], a = ri(t.dtype, i.dtype), v = null != r, y = null != u, p = s ? wl(s, !0) : null, w = new bw(t.shape, [l, h, c], e, o, v, p, y), f = [t, i]; return r && f.push(r), u && f.push(u), this.compileAndRun(w, f, a) }, t.prototype.multiply = function (n, t) { var s; if ("complex64" === n.dtype) { var i = this.texData.get(n.dataId), r = this.texData.get(t.dataId), h = new sft(wdt, n.shape, t.shape), c = new sft(bdt, n.shape, t.shape), u = [this.makeComplexComponentTensorInfo(n, i.complexTensors.real), this.makeComplexComponentTensorInfo(n, i.complexTensors.imag), this.makeComplexComponentTensorInfo(t, r.complexTensors.real), this.makeComplexComponentTensorInfo(t, r.complexTensors.imag)], f = this.compileAndRun(h, u), e = this.compileAndRun(c, u), l = this.complex(f, e); return f.dispose(), e.dispose(), l } return this.shouldExecuteOnCPU([n, t]) ? this.cpuBackend.multiply(n, t) : o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? this.packedBinaryOp(n, t, hft, n.dtype) : (s = new at(hft, n.shape, t.shape), this.compileAndRun(s, [n, t], n.dtype)) }, t.prototype.batchNormalization = function (n, t, i, r, u, f) { var e = [n, t, i], h = null, s, c, l; return (null != f && (h = f.shape, e.push(f)), s = null, null != u && (s = u.shape, e.push(u)), o().getBool("WEBGL_PACK_NORMALIZATION")) ? (c = new pdt(n.shape, t.shape, i.shape, h, s, r), this.compileAndRun(c, e)) : (l = new ydt(n.shape, t.shape, i.shape, h, s, r), this.compileAndRun(l, e)) }, t.prototype.localResponseNormalization4D = function (n, t, i, r, u) { var f = o().getBool("WEBGL_PACK_NORMALIZATION") ? new ent(n.shape, t, i, r, u) : new unt(n.shape, t, i, r, u); return this.compileAndRun(f, [n]) }, t.prototype.LRNGrad = function (n, t, i, r, u, f, e) { var o = new fnt(t.shape, r, u, f, e); return this.compileAndRun(o, [t, i, n]) }, t.prototype.tile = function (n, t) { var i, r; return "string" === n.dtype ? (i = this.readSync(n.dataId).map(function (n) { return us(n) }), uft(k(n.shape, n.dtype, i), t)) : (r = new sti(n.shape, t), this.compileAndRun(r, [n])) }, t.prototype.pad = function (n, t, i) { var r = o().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new vnt(n.shape, t, i) : new ant(n.shape, t, i); return this.compileAndRun(r, [n]) }, t.prototype.transpose = function (n, t) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.transpose(n, t); var i = o().getBool("WEBGL_PACK_ARRAY_OPERATIONS") ? new cti(n.shape, t) : new hti(n.shape, t); return this.compileAndRun(i, [n]) }, t.prototype.gather = function (n, t, i) { if (this.shouldExecuteOnCPU([n, t])) return this.cpuBackend.gather(n, t, i); var r = new tnt(n.shape, t.size, i); return this.compileAndRun(r, [n, t]) }, t.prototype.batchToSpaceND = function (n, t, r) { i(n.rank <= 4, function () { return "batchToSpaceND for rank > 4 with a WebGL backend not implemented yet" }); var u = t.reduce(function (n, t) { return n * t }), f = rl(n.shape, t, u), o = ul(f.length, t.length), e = fl(n.shape, t, u), s = sut(r, t.length), h = hut(e, r, t.length); return n.reshape(f).transpose(o).reshape(e).slice(s, h) }, t.prototype.spaceToBatchND = function (n, t, r) { var f, u, e; for (i(n.rank <= 4, function () { return "spaceToBatchND for rank > 4 with a WebGL backend not implemented yet" }), f = t.reduce(function (n, t) { return n * t }), u = [[0, 0]], u.push.apply(u, r), e = 1 + t.length; e < n.shape.length; ++e)u.push([0, 0]); var o = n.pad(u), s = rl(o.shape, t, f, !1), h = ul(s.length, t.length, !1), c = fl(o.shape, t, f, !1); return o.reshape(s).transpose(h).reshape(c) }, t.prototype.reduce = function (n, t, i) { var f = n.shape[0], u = n.shape[1], e = ol(u), o = new ynt({ windowSize: e, inSize: u, batchSize: f }, t), r = this.compileAndRun(o, [n], i); return 1 === r.shape[1] ? r : this.reduce(r, t, i) }, t.prototype.argReduce = function (n, t, i) { var f, r, u; void 0 === i && (i = null); f = n.shape[0]; r = n.shape[1]; null != i && (f = i.shape[0], r = i.shape[1]); var o = ol(r), s = new fdt({ windowSize: o, inSize: r, batchSize: f }, t, null == i), e = [n]; return null != i && e.push(i), u = this.compileAndRun(s, e, "int32"), 1 === u.shape[1] ? u : this.argReduce(n, t, u) }, t.prototype.argReducePacked = function (n, t, i) { void 0 === i && (i = null); var r = null != i ? i.shape : n.shape, f = ol(r[r.length - 1]), e = new ldt(r, f, t, null == i), o = null == i ? [n] : [n, i], u = this.compileAndRun(e, o, "int32"); return u.rank === n.rank ? this.argReducePacked(n, t, u) : u }, t.prototype.sum = function (n, t) { wi("sum", t, n.rank); var i = oi(n.shape, t), r = i[0], u = w(i[1]), f = n.as2D(-1, u), e = hc(n.dtype); return this.reduce(f, "sum", e).reshape(r) }, t.prototype.prod = function (n, t) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.prod(n, t); var i = oi(n.shape, t), r = i[0], u = w(i[1]), f = n.as2D(-1, u), e = hc(n.dtype); return this.reduce(f, "prod", e).reshape(r) }, t.prototype.unsortedSegmentSum = function (n, t, i) { var r = 0, u = ar([r], n.rank), f = n; null != u && (f = n.transpose(u), r = vr(1, n.rank)[0]); var o = function (n, t, i) { for (var u = [], f = n.length, r = 0; r < f; r++)r !== t ? u.push(n[r]) : u.push(i); return u }(f.shape, r, i), s = w([f.shape[r]]), h = f.as2D(-1, s), c = hc(n.dtype), e = this.segOpCompute(h, "unsortedSegmentSum", t, c, i).reshape(o); return null != u && (e = e.transpose(dc(u))), e }, t.prototype.segOpCompute = function (n, t, i, r, u) { var s = n.shape[0], f = n.shape[1], o = function (n, t) { var i, r = !1; for (n <= el ? (i = n, r = !0) : i = sc(n, Math.floor(Math.sqrt(n))); !r;)i > t || i === n ? r = !0 : i = sc(n, i + 1); return i }(f, u), h = new iti({ windowSize: o, inSize: f, batchSize: s, numSegments: u }, t), e = this.compileAndRun(h, [n, i], r); return e.shape[1] === u ? e : (i = bs(0, u).tile([f / o]), this.segOpCompute(e, t, i, r, u)) }, t.prototype.argMinMaxReduce = function (n, t, i) { var r = [t]; if (wi("arg" + i.charAt(0).toUpperCase() + i.slice(1), r, n.rank), !o().getBool("WEBGL_PACK_REDUCE") || n.rank <= 2) { var u = oi(n.shape, r), f = u[0], e = w(u[1]), s = n.as2D(-1, e); return this.argReduce(s, i).reshape(f) } return this.argReducePacked(n, i) }, t.prototype.argMin = function (n, t) { return this.argMinMaxReduce(n, t, "min") }, t.prototype.argMax = function (n, t) { return this.argMinMaxReduce(n, t, "max") }, t.prototype.cumsum = function (n, t, i, r) { if (t !== n.rank - 1) throw new Error("WebGL cumsum shader expects an inner-most axis=" + (n.rank - 1) + " but got axis=" + t); var u = new cgt(n.shape, i, r); return this.compileAndRun(u, [n]) }, t.prototype.equal = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return vec4(equal(a, b));\n", "bool"); var i = new at("return float(a == b);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.notEqual = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return vec4(notEqual(a, b));\n", "bool"); var i = new at("return float(a != b);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.less = function (n, t) { if (this.shouldExecuteOnCPU([n, t])) return this.cpuBackend.less(n, t); if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return vec4(lessThan(a, b));\n", "bool"); var i = new at("return float(a < b);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.lessEqual = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return vec4(lessThanEqual(a, b));\n", "bool"); var i = new at("return float(a <= b);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.greater = function (n, t) { if (this.shouldExecuteOnCPU([n, t])) return this.cpuBackend.greater(n, t); if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return vec4(greaterThan(a, b));\n", "bool"); var i = new at("return float(a > b);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.greaterEqual = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return vec4(greaterThanEqual(a, b));\n", "bool"); var i = new at("return float(a >= b);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.logicalNot = function (n) { var t = new g(n.shape, "return float(!(x >= 1.0));"); return this.compileAndRun(t, [n]) }, t.prototype.logicalAnd = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n", "bool"); var i = new at("return float(a >= 1.0 && b >= 1.0);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.logicalOr = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n", "bool"); var i = new at("return float(a >= 1.0 || b >= 1.0);", n.shape, t.shape); return this.compileAndRun(i, [n, t], "bool") }, t.prototype.select = function (n, t, i) { var r = new rti(n.rank, t.shape, t.rank); return this.compileAndRun(r, [n, t, i], ri(t.dtype, i.dtype)) }, t.prototype.where = function (n) { kc("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead"); var t = n.dataSync(); return lw(n.shape, t) }, t.prototype.topk = function (n, t) { return fft(n.dataSync(), n.shape, n.dtype, t) }, t.prototype.min = function (n, t) { wi("min", t, n.rank); var i = oi(n.shape, t), u = i[0], f = w(i[1]), r = n.as2D(-1, f); return this.reduce(r, "min", r.dtype).reshape(u) }, t.prototype.minimum = function (n, t) { if (this.shouldExecuteOnCPU([n, t])) return this.cpuBackend.minimum(n, t); var i = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n", n.shape, t.shape) : new at("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n", n.shape, t.shape); return this.compileAndRun(i, [n, t]) }, t.prototype.mod = function (n, t) { var i = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n", n.shape, t.shape) : new at("if (b == 0.0) return NAN;\n  return mod(a, b);", n.shape, t.shape); return this.compileAndRun(i, [n, t]) }, t.prototype.max = function (n, t) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.max(n, t); wi("max", t, n.rank); var i = oi(n.shape, t), u = i[0], f = w(i[1]), r = n.as2D(-1, f); return this.reduce(r, "max", r.dtype).reshape(u) }, t.prototype.maximum = function (n, t) { if (this.shouldExecuteOnCPU([n, t])) return this.cpuBackend.maximum(n, t); var i = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n", n.shape, t.shape) : new at("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n", n.shape, t.shape); return this.compileAndRun(i, [n, t]) }, t.prototype.all = function (n, t) { wi("all", t, n.rank); var i = oi(n.shape, t), u = i[0], f = w(i[1]), r = n.as2D(-1, f); return this.reduce(r, "all", r.dtype).reshape(u) }, t.prototype.any = function (n, t) { wi("any", t, n.rank); var i = oi(n.shape, t), u = i[0], f = w(i[1]), r = n.as2D(-1, f); return this.reduce(r, "any", r.dtype).reshape(u) }, t.prototype.realDivide = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n", "float32", !0); var i = new at("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;", n.shape, t.shape); return this.compileAndRun(i, [n, t], "float32") }, t.prototype.floorDiv = function (n, t) { if (o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) return this.packedBinaryOp(n, t, "\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n", "int32"); var i = new at("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n", n.shape, t.shape); return this.compileAndRun(i, [n, t], "int32") }, t.prototype.add = function (n, t) { var i, r; return "complex64" === n.dtype && "complex64" === t.dtype ? this.complexSeparableBinaryOp(n, t, yw) : this.shouldExecuteOnCPU([n, t]) ? this.cpuBackend.add(n, t) : (i = ri(n.dtype, t.dtype), o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) ? this.packedBinaryOp(n, t, yw, i) : (r = new at(yw, n.shape, t.shape), this.compileAndRun(r, [n, t], i)) }, t.prototype.packedUnaryOp = function (n, t, i) { var r = new rh(n.shape, t); return this.compileAndRun(r, [n], i) }, t.prototype.packedBinaryOp = function (n, t, i, r, u) { void 0 === u && (u = !1); var f = new vu(i, n.shape, t.shape, u); return this.compileAndRun(f, [n, t], r) }, t.prototype.complexSeparableBinaryOp = function (n, t, i) { var r = this, u = this.texData.get(n.dataId), f = this.texData.get(t.dataId), e = [[u.complexTensors.real, f.complexTensors.real], [u.complexTensors.imag, f.complexTensors.imag]].map(function (u) { var f = u[0], e = u[1], o = r.makeComplexComponentTensorInfo(n, f), s = r.makeComplexComponentTensorInfo(t, e), h = new at(i, n.shape, t.shape); return r.compileAndRun(h, [o, s], ri(f.dtype, e.dtype)) }), o = e[0], s = e[1], h = this.complex(o, s); return o.dispose(), s.dispose(), h }, t.prototype.makeComplexComponentTensorInfo = function (n, t) { return { dataId: t.dataId, dtype: t.dtype, shape: n.shape } }, t.prototype.addN = function (n) { if (1 === n.length) return n[0]; if (n.length > o().get("WEBGL_MAX_TEXTURES_IN_SHADER")) { var t = Math.floor(n.length / 2), r = this.addN(n.slice(0, t)), u = this.addN(n.slice(t)); return this.addN([r, u]) } var f = n.map(function (n) { return n.dtype }).reduce(function (n, t) { return ri(n, t) }), i = n.map(function (n) { return n.shape }), e = o().getBool("WEBGL_PACK") ? new udt(n[0].shape, i) : new rdt(n[0].shape, i); return this.compileAndRun(e, n, f) }, t.prototype.subtract = function (n, t) { var i, r; return "complex64" === n.dtype && "complex64" === t.dtype ? this.complexSeparableBinaryOp(n, t, pw) : this.shouldExecuteOnCPU([n, t]) ? this.cpuBackend.subtract(n, t) : (i = ri(n.dtype, t.dtype), o().getBool("WEBGL_PACK_BINARY_OPERATIONS")) ? this.packedBinaryOp(n, t, pw, n.dtype) : (r = new at(pw, n.shape, t.shape), this.compileAndRun(r, [n, t], i)) }, t.prototype.pow = function (n, t) { var i = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n", n.shape, t.shape) : new at("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n", n.shape, t.shape), r = ri(n.dtype, t.dtype); return this.compileAndRun(i, [n, t], r) }, t.prototype.ceil = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.ceil(n); if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, iot, n.dtype); var t = new g(n.shape, iot); return this.compileAndRun(t, [n]) }, t.prototype.floor = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.floor(n); if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, rot, n.dtype); var t = new g(n.shape, rot); return this.compileAndRun(t, [n]) }, t.prototype.sign = function (n) { var t = new g(n.shape, "\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"); return this.compileAndRun(t, [n]) }, t.prototype.isNaN = function (n) { var t = new g(n.shape, "return float(isnan(x));"); return this.compileAndRun(t, [n], "bool") }, t.prototype.isInf = function (n) { var t = new g(n.shape, "return float(isinf(x));"); return this.compileAndRun(t, [n], "bool") }, t.prototype.isFinite = function (n) { var t = new g(n.shape, "return float(!isnan(x) && !isinf(x));"); return this.compileAndRun(t, [n], "bool") }, t.prototype.round = function (n) { var t = new g(n.shape, "\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"); return this.compileAndRun(t, [n]) }, t.prototype.exp = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.exp(n); if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, uot, n.dtype); var t = new g(n.shape, uot); return this.compileAndRun(t, [n]) }, t.prototype.expm1 = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.expm1(n); if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, fot, n.dtype); var t = new g(n.shape, fot); return this.compileAndRun(t, [n]) }, t.prototype.softmax = function (n, t) { var i = pt([t], n.shape), r = this.max(n, i), u = vi(r.shape, i), e = this.subtract(n, r.reshape(u)), f = this.exp(e), o = this.sum(f, i).reshape(u); return this.realDivide(f, o) }, t.prototype.log = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.log(n); if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, "\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n", n.dtype); var t = new g(n.shape, "if (x < 0.0) return NAN;\n  return log(x);"); return this.compileAndRun(t, [n]) }, t.prototype.log1p = function (n) { var t = new g(n.shape, "return log(1.0 + x);"); return this.compileAndRun(t, [n]) }, t.prototype.sqrt = function (n) { var t = new g(n.shape, "return sqrt(x);"); return this.compileAndRun(t, [n]) }, t.prototype.rsqrt = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.rsqrt(n); var t = new g(n.shape, "return inversesqrt(x);"); return this.compileAndRun(t, [n]) }, t.prototype.reciprocal = function (n) { var t = new g(n.shape, "return 1.0 / x;"); return this.compileAndRun(t, [n]) }, t.prototype.relu = function (n) { var t; return t = o().getBool("WEBGL_PACK") ? new rh(n.shape, eot) : new g(n.shape, det), this.compileAndRun(t, [n]) }, t.prototype.relu6 = function (n) { var t; return t = o().getBool("WEBGL_PACK") ? new rh(n.shape, oot) : new g(n.shape, get), this.compileAndRun(t, [n]) }, t.prototype.prelu = function (n, t) { var i = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu(lft, n.shape, t.shape) : new at(cft, n.shape, t.shape); return this.compileAndRun(i, [n, t]) }, t.prototype.elu = function (n) { if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, sot, n.dtype); var t = new g(n.shape, not); return this.compileAndRun(t, [n]) }, t.prototype.eluDer = function (n, t) { var i = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n", n.shape, t.shape) : new at("return (b >= 1.0) ? a : a * (b + 1.0);", n.shape, t.shape); return this.compileAndRun(i, [n, t]) }, t.prototype.selu = function (n) { var t = new g(n.shape, ati); return this.compileAndRun(t, [n]) }, t.prototype.int = function (n) { var t = new g(n.shape, "return float(int(x));"); return this.compileAndRun(t, [n], "int32") }, t.prototype.clip = function (n, t, i) { var r, u = (r = o().getBool("WEBGL_PACK_CLIP") ? new ddt(n.shape) : new kdt(n.shape)).getCustomSetupFunc(t, i); return this.compileAndRun(r, [n], null, u) }, t.prototype.abs = function (n) { if (this.shouldExecuteOnCPU([n])) return this.cpuBackend.abs(n); if (o().getBool("WEBGL_PACK_UNARY_OPERATIONS")) return this.packedUnaryOp(n, ket, n.dtype); var t = new g(n.shape, ket); return this.compileAndRun(t, [n]) }, t.prototype.complexAbs = function (n) { var t = this.texData.get(n.dataId), i = new gdt(n.shape), r = [this.makeComplexComponentTensorInfo(n, t.complexTensors.real), this.makeComplexComponentTensorInfo(n, t.complexTensors.imag)]; return this.compileAndRun(i, r) }, t.prototype.sigmoid = function (n) { var t = new g(n.shape, "return 1.0 / (1.0 + exp(-1.0 * x));"); return this.compileAndRun(t, [n]) }, t.prototype.softplus = function (n) { var t = new g(n.shape, "\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"); return this.compileAndRun(t, [n]) }, t.prototype.sin = function (n) { var t = new g(n.shape, vti); return this.compileAndRun(t, [n]) }, t.prototype.cos = function (n) { var t = new g(n.shape, yti); return this.compileAndRun(t, [n]) }, t.prototype.tan = function (n) { var t = new g(n.shape, "return tan(x);"); return this.compileAndRun(t, [n]) }, t.prototype.asin = function (n) { var t = new g(n.shape, pti); return this.compileAndRun(t, [n]) }, t.prototype.acos = function (n) { var t = new g(n.shape, wti); return this.compileAndRun(t, [n]) }, t.prototype.atan = function (n) { var t = new g(n.shape, bti); return this.compileAndRun(t, [n]) }, t.prototype.atan2 = function (n, t) { var i = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n", n.shape, t.shape) : new at("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n", n.shape, t.shape); return this.compileAndRun(i, [n, t]) }, t.prototype.sinh = function (n) { var t = new g(n.shape, "\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"); return this.compileAndRun(t, [n]) }, t.prototype.cosh = function (n) { var t = new g(n.shape, "\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"); return this.compileAndRun(t, [n]) }, t.prototype.tanh = function (n) { var t = new g(n.shape, "\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"); return this.compileAndRun(t, [n]) }, t.prototype.asinh = function (n) { var t = new g(n.shape, kti); return this.compileAndRun(t, [n]) }, t.prototype.acosh = function (n) { var t = new g(n.shape, dti); return this.compileAndRun(t, [n]) }, t.prototype.atanh = function (n) { var t = new g(n.shape, gti); return this.compileAndRun(t, [n]) }, t.prototype.erf = function (n) { var t = new g(n.shape, '\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n'); return this.compileAndRun(t, [n]) }, t.prototype.step = function (n, t) { var i = new g(n.shape, function (n) { return void 0 === n && (n = 0), wr + "\n    return x > 0.0 ? 1.0 : float(" + n + ");\n  " }(t)); return this.compileAndRun(i, [n]) }, t.prototype.conv2dByMatMul = function (n, t, u, f, e, s) { var h = n.shape, c = this.texData.get(n.dataId), p = u.inChannels, w = h[0] * h[1] * h[2], b = u.outChannels, v = "channelsLast" === u.dataFormat, k = (1 === w || 1 === b) && p > 1e3, d = h[2] % 2 != 0 && !!c.isPacked; if (k || !o().getBool("WEBGL_LAZILY_UNPACK") || !o().getBool("WEBGL_PACK_BINARY_OPERATIONS") || !d) { var g = v ? h[0] * h[1] * h[2] : h[0] * h[2] * h[3], nt = this.reshape(n, [1, g, u.inChannels]), tt = this.reshape(t, [1, u.inChannels, u.outChannels]); return this.reshape(this.fusedBatchMatMul({ a: nt, b: tt, transposeA: !1, transposeB: !1, bias: f, activation: e, preluActivationWeights: s }), u.outShape) } var it = v ? h[0] * h[1] * (h[2] + 1) : h[0] * h[2] * (h[3] + 1), l = { dataId: n.dataId, shape: [1, it, u.inChannels], dtype: n.dtype }, rt = c.shape; c.shape = c.shape.slice(); c.shape[c.shape.length - 2]++; i(ps(c.shape, l.shape), function () { return "packed reshape " + c.shape + " to " + l.shape + " isn't free" }); var ut = this.reshape(t, [1, u.inChannels, u.outChannels]), a = this.fusedBatchMatMul({ a: l, b: ut, transposeA: !1, transposeB: !1, bias: f, activation: e, preluActivationWeights: s }), y = this.texData.get(a.dataId); return i(y.isPacked, function () { return "batchMatMul result is expected to be packed" }), c.shape = rt, y.shape = u.outShape, r.makeTensorFromDataId(a.dataId, u.outShape, a.dtype) }, t.prototype.conv2dWithIm2Row = function (n, t, i, r, u, f) { var w = i.filterWidth, b = i.filterHeight, k = i.inChannels, e = i.outWidth, o = i.outHeight, d = "channelsLast" === i.dataFormat, l = w * b * k, a = o * e, s = [l, a], v = n.squeeze([0]), g = t.reshape([1, l, -1]), nt = new rnt(s, v.shape, i), y = this.compileAndRun(nt, [v]).reshape([1, s[0], s[1]]), tt = null != r, p = null != f, it = u ? wl(u, !0) : null, rt = new bw(y.shape, [1, a, i.outChannels], !0, !1, tt, it, p), h = [y, g], c; return r && h.push(r), p && h.push(f), c = this.compileAndRun(rt, h), d ? c.reshape([1, o, e, i.outChannels]) : c.reshape([1, i.outChannels, o, e]) }, t.prototype.fusedConv2d = function (n) { var u = n.input, e = n.filter, t = n.convInfo, i = n.bias, f = n.activation, r = n.preluActivationWeights; if (1 === t.filterHeight && 1 === t.filterWidth && 1 === t.dilationHeight && 1 === t.dilationWidth && 1 === t.strideHeight && 1 === t.strideWidth && ("SAME" === t.padInfo.type || "VALID" === t.padInfo.type)) return this.conv2dByMatMul(u, e, t, i, f, r); if (o().getBool("WEBGL_CONV_IM2COL") && 1 === u.shape[0]) return this.conv2dWithIm2Row(u, e, t, i, f, r); var h = null != i, c = null != r, l = f ? wl(f, !1) : null, a = new aft(t, h, l, c), s = [u, e]; return i && s.push(i), r && s.push(r), this.compileAndRun(a, s) }, t.prototype.conv2d = function (n, t, i) { if (1 === i.filterHeight && 1 === i.filterWidth && 1 === i.dilationHeight && 1 === i.dilationWidth && 1 === i.strideHeight && 1 === i.strideWidth && ("SAME" === i.padInfo.type || "VALID" === i.padInfo.type)) return this.conv2dByMatMul(n, t, i); if (o().getBool("WEBGL_CONV_IM2COL") && 1 === n.shape[0]) return this.conv2dWithIm2Row(n, t, i); var r = new aft(i); return this.compileAndRun(r, [n, t]) }, t.prototype.conv2dDerInput = function (n, t, i) { var r = new rgt(i); return this.compileAndRun(r, [n, t]) }, t.prototype.conv2dDerFilter = function (n, t, i) { var r = new igt(i); return this.compileAndRun(r, [n, t]) }, t.prototype.fusedDepthwiseConv2D = function (n) { var i, a = n.input, v = n.filter, t = n.convInfo, e = n.bias, s = n.activation, h = n.preluActivationWeights, c = o().getBool("WEBGL_PACK_DEPTHWISECONV") && t.strideWidth <= 2 && t.outChannels / t.inChannels == 1, l = s ? wl(s, c) : null, r = [a, v], u = null != e, f = null != h; return u && r.push(e), f && r.push(h), c ? (i = new yft(t, u, l, f), this.compileAndRun(i, r)) : (i = new vft(t, u, l, f), this.compileAndRun(i, r)) }, t.prototype.depthwiseConv2D = function (n, t, i) { var r; return o().getBool("WEBGL_PACK_DEPTHWISECONV") && i.strideWidth <= 2 && i.outChannels / i.inChannels == 1 ? (r = new yft(i), this.compileAndRun(r, [n, t])) : (r = new vft(i), this.compileAndRun(r, [n, t])) }, t.prototype.depthwiseConv2DDerInput = function (n, t, i) { var r = new ogt(i); return this.compileAndRun(r, [n, t]) }, t.prototype.depthwiseConv2DDerFilter = function (n, t, i) { var r = new egt(i); return this.compileAndRun(r, [n, t]) }, t.prototype.conv3d = function (n, t, i) { var r = new sgt(i); return this.compileAndRun(r, [n, t]) }, t.prototype.conv3dDerInput = function (n, t, i) { var r = new fgt(i); return this.compileAndRun(r, [n, t]) }, t.prototype.conv3dDerFilter = function (n, t, i) { var r = new ugt(i); return this.compileAndRun(r, [n, t]) }, t.prototype.maxPool = function (n, t) { var i = new kw(t, "max", !1); return this.compileAndRun(i, [n]) }, t.prototype.avgPool = function (n, t) { var i = new kw(t, "avg", !1); return this.compileAndRun(i, [n], "float32") }, t.prototype.maxPoolBackprop = function (n, t, i, r) { var f = new kw(r, "max", !0), u = this.compileAndRun(f, [t]), e = new ont(r), o = this.compileAndRun(e, [n, u], t.dtype); return u.dispose(), o }, t.prototype.avgPoolBackprop = function (n, t, i) { var r = new adt(i); return this.compileAndRun(r, [n], t.dtype) }, t.prototype.cast = function (n, t) { return ew(n, t, this) }, t.prototype.unstack = function (n, t) { for (var u, f, r, o = n.shape[t], e = new Array(n.rank - 1), s = 0, i = 0; i < n.rank; i++)i !== t && (e[s++] = n.shape[i]); for (u = new Array(n.rank).fill(0), f = n.shape.slice(), f[t] = 1, r = new Array(o), i = 0; i < r.length; i++)u[t] = i, r[i] = this.slice(n, u, f).reshape(e); return r }, t.prototype.avgPool3d = function (n, t) { var i = new dw(t, "avg", !1); return this.compileAndRun(i, [n], "float32") }, t.prototype.avgPool3dBackprop = function (n, t, i) { var r = new vdt(i); return this.compileAndRun(r, [n], t.dtype) }, t.prototype.maxPool3d = function (n, t) { var i = new dw(t, "max", !1); return this.compileAndRun(i, [n], "float32") }, t.prototype.maxPool3dBackprop = function (n, t, i, r) { var f = new dw(r, "max", !0), u = this.compileAndRun(f, [t]), e = new snt(r), o = this.compileAndRun(e, [n, u], t.dtype); return u.dispose(), o }, t.prototype.reshape = function (n, t) { var u = this.texData.get(n.dataId), i; return u.isPacked && !ps(n.shape, t) && (null === u.texture || !ps(u.shape, t)) ? (i = this.packedReshape(n, t), r.makeTensorFromDataId(i.dataId, i.shape, i.dtype)) : al(n, t) }, t.prototype.resizeBilinear = function (n, t, i, r) { var u = o().getBool("WEBGL_PACK_IMAGE_OPERATIONS") ? new knt(n.shape, t, i, r) : new bnt(n.shape, t, i, r); return this.compileAndRun(u, [n], "float32") }, t.prototype.resizeBilinearBackprop = function (n, t, i) { var r = new wnt(n, t, i); return this.compileAndRun(r, [n]) }, t.prototype.resizeNearestNeighbor = function (n, t, i, r) { var u = new gnt(n.shape, t, i, r); return this.compileAndRun(u, [n]) }, t.prototype.resizeNearestNeighborBackprop = function (n, t, i) { var r = new dnt(n, t, i); return this.compileAndRun(r, [n]) }, t.prototype.multinomial = function (n, t, i, r) { var u = t ? n : fu(n), e = u.shape[0], o = u.shape[1], f = new hnt(e, o, i), s = f.getCustomSetupFunc(r); return this.compileAndRun(f, [u], "int32", s) }, t.prototype.oneHot = function (n, t, i, r) { var u = new cnt(n.size, t, i, r); return this.compileAndRun(u, [n]) }, t.prototype.diag = function (n) { var t = new ygt(n.size); return this.compileAndRun(t, [n]) }, t.prototype.nonMaxSuppression = function (n, t, i, r, u) { return kc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"), hw(n.dataSync(), t.dataSync(), i, r, u) }, t.prototype.cropAndResize = function (n, t, i, r, u, f) { var e = new hgt(n.shape, t.shape, r, u, f); return this.compileAndRun(e, [n, t, i], "float32") }, t.prototype.depthToSpace = function (n, t, r) { i(t > 1, function () { return "blockSize should be > 1 for depthToSpace, but was: " + t }); var u = n.shape[0], s = "NHWC" === r ? n.shape[1] : n.shape[2], h = "NHWC" === r ? n.shape[2] : n.shape[3], c = "NHWC" === r ? n.shape[3] : n.shape[1], f = s * t, e = h * t, o = c / (t * t), l = new vgt("NHWC" === r ? [u, f, e, o] : [u, o, f, e], t, r); return this.compileAndRun(l, [n]) }, t.prototype.split = function (n, t, i) { return rft(n, t, i) }, t.prototype.scatterND = function (n, t, i) { var r = ks(0, n, i), e = r.sliceRank, u = r.numUpdates, f = r.sliceSize, v = r.strides, o = r.outputSize, y = [o / f, f], s = n.reshape([u, e]), c = t.reshape([u, f]), l, a; return 0 === o ? al(fi([]), i) : (l = h(0), a = new pet(u, e, s.rank, c.rank, v, y), this.compileAndRun(a, [c, s, l]).reshape(i)) }, t.prototype.sparseToDense = function (n, t, i, r) { var u = ks(0, n, i), f = u.sliceRank, e = u.numUpdates, o = u.strides, s = u.outputSize, h = new pet(e, f, n.rank, t.rank, o, [s, 1], !1); return this.compileAndRun(h, [t, n, r]).reshape(i) }, t.prototype.fft = function (n) { return this.fftImpl(n, !1) }, t.prototype.ifft = function (n) { return this.fftImpl(n, !0) }, t.prototype.fftImpl = function (n, t) { var i = this.texData.get(n.dataId), e = new wft(dgt, n.shape, t), o = new wft(ggt, n.shape, t), r = [this.makeComplexComponentTensorInfo(n, i.complexTensors.real), this.makeComplexComponentTensorInfo(n, i.complexTensors.imag)], u = this.compileAndRun(e, r), f = this.compileAndRun(o, r), s = this.complex(u, f).as2D(n.shape[0], n.shape[1]); return u.dispose(), f.dispose(), s }, t.prototype.gatherND = function (n, t) { var u = t.shape, f = u[u.length - 1], i = dp(n, t), o = i[0], e = i[1], r = i[2], s = i[3], h = t.reshape([e, f]), c = n.reshape([n.size / r, r]), l = new int(f, s, [e, r]); return this.compileAndRun(l, [c, h]).reshape(o) }, t.prototype.fill = function (n, t, i) { var u, f, e; return "string" === (i = i || de(t)) ? (u = rs(i, w(n)), u.fill(t), r.makeTensor(u, n, i, this)) : (f = new nnt(n, t), e = f.getCustomSetupFunc(t), this.compileAndRun(f, [], i, e)) }, t.prototype.onesLike = function (n) { if ("string" === n.dtype) throw new Error("onesLike is not supported under string dtype"); return this.fill(n.shape, 1, n.dtype) }, t.prototype.zerosLike = function (n) { return this.fill(n.shape, "string" === n.dtype ? "" : 0, n.dtype) }, t.prototype.linspace = function (n, t, i) { return ow(n, t, i) }, t.prototype.makeTensorInfo = function (n, t) { var i = this.write(null, n, t); return this.texData.get(i).usage = null, { dataId: i, shape: n, dtype: t } }, t.prototype.makeOutput = function (n, t) { var i = this.makeTensorInfo(n, t).dataId; return r.makeTensorFromDataId(i, n, t, this) }, t.prototype.unpackTensor = function (n) { var t = new tii(n.shape); return this.runWebGLProgram(t, [n], n.dtype) }, t.prototype.packTensor = function (n) { var t = new lnt(n.shape); return this.runWebGLProgram(t, [n], n.dtype, null, !0) }, t.prototype.packedReshape = function (n, t) { var i = [vs(n.shape)].concat(ys(n.shape)), u = { dtype: n.dtype, shape: i, dataId: n.dataId }, f = [vs(t)].concat(ys(t)), e = new pnt(f, i), r = this.runWebGLProgram(e, [u], n.dtype, null, !0); return { dataId: r.dataId, shape: t, dtype: r.dtype } }, t.prototype.decode = function (n) { var u, t = this.texData.get(n), e = t.isPacked, f = t.shape, i = t.dtype, r = wc(f); return u = e ? new agt(r) : new lgt(r), { dtype: i, shape: f, dataId: this.runWebGLProgram(u, [{ shape: r, dtype: i, dataId: n }], i, null, !0).dataId } }, t.prototype.runWebGLProgram = function (n, t, i, r, u) { var e = this, f, s, v, h, c, p; if (void 0 === u && (u = !1), f = this.makeTensorInfo(n.outputShape, i), s = this.texData.get(f.dataId), (n.packedOutput && (s.isPacked = !0), n.outPackingScheme === ss.DENSE) && (v = hs(n.outputShape), s.texShape = v.map(function (n) { return 2 * n })), null != n.outTexUsage && (s.usage = n.outTexUsage), 0 === w(f.shape)) return s.values = ke(f.dtype, 0), f; h = []; c = t.map(function (t) { var i, u, r; if ("complex64" === t.dtype) throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts."); if (i = e.texData.get(t.dataId), null == i.texture) { if (!n.packedInputs && w(t.shape) <= o().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM")) return { shape: t.shape, texData: null, isUniform: !0, uniformValues: i.values }; n.packedInputs && (i.isPacked = !0, i.shape = t.shape) } else !!i.isPacked != !!n.packedInputs ? (t = i.isPacked ? e.unpackTensor(t) : e.packTensor(t), h.push(t), i = e.texData.get(t.dataId)) : i.isPacked && !ps(i.shape, t.shape) && (u = t, r = t.shape, t.shape = i.shape, t = e.packedReshape(t, r), h.push(t), i = e.texData.get(t.dataId), u.shape = r); return e.uploadToGPU(t.dataId), { shape: t.shape, texData: i, isUniform: !1 } }); this.uploadToGPU(f.dataId); var l, a = { shape: f.shape, texData: s, isUniform: !1 }, b = function (n, t, i) { var r = "", u, f; return t.concat(i).forEach(function (n) { var t = null != n.texData && null != n.texData.slice && n.texData.slice.flatOffset > 0, i = n.isUniform ? "uniform" : n.texData.texShape; r += n.shape + "_" + i + "_" + t }), u = n.userCode, f = n.constructor.name, f + ("_" + r + "_" + u) }(n, c, a), k = this.getAndSaveBinary(b, function () { return function (n, t, i, r) { var v = t.userCode, h = i.map(function (n, i) { var r = { logicalShape: n.shape, texShape: n.isUniform ? null : n.texData.texShape, isUniform: n.isUniform, isPacked: !n.isUniform && n.texData.isPacked, flatOffset: null }; return null != n.texData && null != n.texData.slice && n.texData.slice.flatOffset > 0 && (r.flatOffset = n.texData.slice.flatOffset), { name: t.variableNames[i], shapeInfo: r } }), y = h.map(function (n) { return n.shapeInfo }), c = { logicalShape: r.shape, texShape: r.texData.texShape, isUniform: !1, isPacked: r.texData.isPacked, flatOffset: null }, l = edt(h, c, v, t.packedInputs), u = n.createProgram(l), a = null, p = n.getUniformLocation(u, "NAN", !1), e, s, f; for (1 === o().getNumber("WEBGL_VERSION") && (a = n.getUniformLocation(u, "INFINITY", !1)), e = {}, s = 0; s < t.variableNames.length; s++)f = t.variableNames[s], e[f] = n.getUniformLocation(u, f, !1), e["offset" + f] = n.getUniformLocation(u, "offset" + f, !1); return { program: t, source: l, webGLProgram: u, uniformLocations: e, inShapeInfos: y, outShapeInfo: c, infLoc: a, nanLoc: p } }(e.gpgpu, n, c, a) }), y = null != this.activeTimers; return (y && (l = this.startTimer()), function (n, t, i, r, u) { yet(t.inShapeInfos, i); yet([t.outShapeInfo], [r]); var e = r.texData.texture, f = r.texData.texShape; r.texData.isPacked ? n.setOutputPackedMatrixTexture(e, f[0], f[1]) : n.setOutputMatrixTexture(e, f[0], f[1]); n.setProgram(t.webGLProgram); 1 === o().getNumber("WEBGL_VERSION") && null !== t.infLoc && n.gl.uniform1f(t.infLoc, 1 / 0); null !== t.nanLoc && n.gl.uniform1f(t.nanLoc, NaN); i.forEach(function (i, r) { var e = t.program.variableNames[r], f = t.uniformLocations[e], o = t.uniformLocations["offset" + e], u; null != f && (i.isUniform ? w(i.shape) < 2 ? n.gl.uniform1f(f, i.uniformValues[0]) : (u = i.uniformValues, u instanceof Float32Array || (u = new Float32Array(u)), n.gl.uniform1fv(f, u)) : (null != i.texData.slice && null != o && n.gl.uniform1i(o, i.texData.slice.flatOffset), n.setInputMatrixTexture(i.texData.texture, f, r))) }); null != u && u(n, t.webGLProgram); n.executeProgram() }(this.gpgpu, k, c, a, r), h.forEach(function (n) { return e.disposeData(n.dataId) }), y && (l = this.endTimer(l), this.activeTimers.push({ name: n.constructor.name, query: this.getQueryTime(l) })), !o().getBool("WEBGL_LAZILY_UNPACK") && s.isPacked && !1 === u) ? (p = this.unpackTensor(f), this.disposeData(f.dataId), p) : f }, t.prototype.compileAndRun = function (n, t, i, u, f) { void 0 === f && (f = !1); i = i || t[0].dtype; var e = this.runWebGLProgram(n, t, i, u, f); return r.makeTensorFromDataId(e.dataId, e.shape, e.dtype) }, t.prototype.getAndSaveBinary = function (n, t) { return n in this.binaryCache || (this.binaryCache[n] = t()), this.binaryCache[n] }, t.prototype.getTextureManager = function () { return this.textureManager }, t.prototype.dispose = function () { var n = this; this.disposed || (o().getBool("IS_TEST") || Object.keys(this.binaryCache).forEach(function (t) { n.gpgpu.deleteProgram(n.binaryCache[t].webGLProgram); delete n.binaryCache[t] }), this.textureManager.dispose(), null != this.canvas && "undefined" != typeof HTMLCanvasElement && this.canvas instanceof HTMLCanvasElement ? this.canvas.remove() : this.canvas = null, this.gpgpuCreatedLocally && (this.gpgpu.program = null, this.gpgpu.dispose()), this.disposed = !0) }, t.prototype.floatPrecision = function () { var n = this; return null == this.floatPrecisionValue && (this.floatPrecisionValue = c(function () { var t, i; return !o().get("WEBGL_RENDER_FLOAT32_ENABLED") && (t = o().getBool("DEBUG"), o().set("DEBUG", !1), i = n.abs(h(1e-8)).dataSync()[0], o().set("DEBUG", t), i > 0) ? 32 : 16 })), this.floatPrecisionValue }, t.prototype.epsilon = function () { return 32 === this.floatPrecision() ? 1e-7 : .0001 }, t.prototype.uploadToGPU = function (n) { var y, t = this.texData.get(n), p = t.shape, o = t.dtype, s = t.values, d = t.texture, g = t.usage, h = t.isPacked, w, c, i, f, v, e, k; if (null == d) if (c = null != this.activeTimers, c && (w = lr()), i = t.texShape, null == i && (i = yit(p, h), t.texShape = i), null != s) { var b = wc(p), l = void 0, r = i[1], u = i[0], a = s instanceof Uint8Array; h ? (r = (y = cs(i[0], i[1]))[0], u = y[1], l = new kgt(b, [u, r], a)) : l = new bgt(b, [u, r], a); f = this.makeTensorInfo([u, r], o); this.texData.get(f.dataId).usage = a ? gi.PIXELS : gi.UPLOAD; this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId), r, u, s); v = this.runWebGLProgram(l, [f], o, null, !0); e = this.texData.get(v.dataId); t.texture = e.texture; t.texShape = e.texShape; t.isPacked = e.isPacked; t.usage = e.usage; this.disposeData(f.dataId); this.texData.delete(v.dataId); t.values = null; c && (this.uploadWaitMs += lr() - w) } else k = this.acquireTexture(i, g, o, h), t.texture = k }, t.prototype.convertAndCacheOnCPU = function (n, t) { var i = this.texData.get(n), r = i.dtype; return this.releaseGPUData(n), null != t && (i.values = function (n, t) { if ("float32" === t || "complex64" === t) return n; if ("int32" === t || "bool" === t) { for (var r = "int32" === t ? new Int32Array(n.length) : new Uint8Array(n.length), i = 0; i < r.length; ++i)r[i] = Math.round(n[i]); return r } throw new Error("Unknown dtype " + t); }(t, r)), i.values }, t.prototype.acquireTexture = function (n, t, i, r) { if (this.numBytesInGPU += this.computeBytes(n, i), !this.warnedAboutMemory && this.numBytesInGPU > 1048576 * this.numMBBeforeWarning) { var u = (this.numBytesInGPU / 1048576).toFixed(2); this.warnedAboutMemory = !0; console.warn("High memory usage in GPU: " + u + " MB, most likely due to a memory leak") } return this.textureManager.acquireTexture(n, t, r) }, t.prototype.computeBytes = function (n, t) { return n[0] * n[1] * ay(t) }, t }(rw); vtt() && r.registerBackend("webgl", function () { return new ib }, 2); var cot = u({ square_: function (n) { var i = t(n, "x", "square"), u = [i]; return r.runKernelFunc(function (n, t) { return t([i]), n.square(i) }, { x: i }, null, "Square", {}, u, []) } }), uh = "SquaredDifference", rb = u({ squaredDifference_: function (n, i) { var e, u = t(n, "a", "squaredDifference"), f = t(i, "b", "squaredDifference"), o, s; return e = ht(u, f), u = e[0], f = e[1], tt(u.shape, f.shape), o = { a: u, b: f }, s = [u, f], r.runKernelFunc(function (n, t) { var i = n.squaredDifference(u, f); return t([u, f]), i }, o, function (n, t) { var i = t[0], r = t[1], u = h(2); return { a: function () { return n.mul(i.sub(r).mul(u)) }, b: function () { return n.mul(r.sub(i).mul(u)) } } }, uh, {}, s, []) } }), lot = u({ abs_: function (n) { var i = t(n, "x", "abs"); return "complex64" === i.dtype ? r.runKernelFunc(function (n) { return n.complexAbs(i) }, { $x: i }) : r.runKernelFunc(function (n, t) { var r = n.abs(i); return t([i]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return n.mul(i.toFloat().step(-1)) } } }, "Abs") } }), aot = u({ acos_: function (n) { var i = t(n, "x", "acos"); return r.runKernelFunc(function (n, t) { var r = n.acos(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.divStrict(h(1).sub(i.toFloat().square()).sqrt()).neg() } } }) } }), vot = u({ acosh_: function (n) { var i = t(n, "x", "acosh"); return r.runKernelFunc(function (n, t) { var r = n.acosh(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.divStrict(i.toFloat().square().sub(1).sqrt()) } } }) } }), yot = u({ asin_: function (n) { var i = t(n, "x", "asin"); return r.runKernelFunc(function (n, t) { var r = n.asin(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.divStrict(h(1).sub(i.toFloat().square()).sqrt()) } } }) } }), pot = u({ asinh_: function (n) { var i = t(n, "x", "asinh"); return r.runKernelFunc(function (n, t) { var r = n.asinh(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.divStrict(h(1).add(i.toFloat().square()).sqrt()) } } }) } }), wot = u({ atan_: function (n) { var i = t(n, "x", "atan"); return r.runKernelFunc(function (n, t) { var r = n.atan(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.div(i.toFloat().square().add(1)) } } }) } }), bot = u({ atanh_: function (n) { var i = t(n, "x", "atanh"); return r.runKernelFunc(function (n, t) { var r = n.atanh(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.div(h(1).sub(i.toFloat().square())) } } }) } }), kot = u({ ceil_: function (n) { var i = t(n, "x", "ceil"); return r.runKernelFunc(function (n) { return n.ceil(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), bl = u({ clipByValue_: function (n, u, f) { var e = t(n, "x", "clipByValue"), o, s; return i(u <= f, function () { return "Error in clip: min (" + u + ") must be less than or equal to max (" + f + ")." }), o = [e], s = { min: u, max: f }, r.runKernelFunc(function (n, t) { var i = n.clip(e, u, f); return t([e]), i }, { x: e }, function (n, t) { var i = t[0]; return { x: function () { return n.where(i.greaterEqual(u).logicalAnd(i.lessEqual(f)), it(n)) } } }, "ClipByValue", s, o) } }), dot = u({ cos_: function (n) { var i = t(n, "x", "cos"), u = [i]; return r.runKernelFunc(function (n, t) { var r = n.cos(i); return t([i]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return i.toFloat().sin().neg().mul(n) } } }, "Cos", {}, u) } }), got = u({ cosh_: function (n) { var i = t(n, "x", "cosh"); return r.runKernelFunc(function (n, t) { var r = n.cosh(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return i.toFloat().sinh().mulStrict(n) } } }) } }), nst = u({ erf_: function (n) { var u = t(n, "x", "erf"); return i("int32" === u.dtype || "float32" === u.dtype, function () { return "Input dtype must be `int32` or `float32`." }), "int32" === u.dtype && (u = u.toFloat()), r.runKernelFunc(function (n, t) { var i = n.erf(u); return t([u]), i }, { $x: u }, function (n, t) { var i = t[0]; return { $x: function () { return n.mul(i.square().neg().exp().mul(2 / Math.sqrt(Math.PI))) } } }) } }), kl = u({ exp_: function (n) { var i = t(n, "x", "exp"); return r.runKernelFunc(function (n, t) { var r = n.exp(i); return t([r]), r }, { x: i }, function (n, t) { return { x: function () { return n.mulStrict(t[0]) } } }, "Exp", {}, [], [!0]) } }), tst = u({ expm1_: function (n) { var i = t(n, "x", "expm1"); return r.runKernelFunc(function (n, t) { var r = n.expm1(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.mul(i.exp()) } } }) } }), ist = u({ floor_: function (n) { var i = t(n, "x", "floor"); return r.runKernelFunc(function (n) { return n.floor(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), rst = u({ log_: function (n) { var i = t(n, "x", "log"), u = [i]; return r.runKernelFunc(function (n, t) { var r = n.log(i); return t([i]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return n.div(i.toFloat()) } } }, "Log", {}, u) } }), ust = u({ log1p_: function (n) { var i = t(n, "x", "log1p"); return r.runKernelFunc(function (n, t) { var r = n.log1p(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.div(i.add(1)) } } }) } }), fst = u({ logSigmoid_: function (n) { var i = t(n, "x", "logSigmoid"); return r.runKernelFunc(function (n, t) { var r = n.softplus(i.neg()).neg(); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.mul(i.neg().sigmoid()) } } }) } }), fh = u({ neg_: function (n) { var i = t(n, "x", "neg"), u = [i]; return r.runKernelFunc(function (n) { return n.neg(i) }, { x: i }, function (n) { return { x: function () { return n.neg() } } }, "Neg", {}, u) } }), est = u({ reciprocal_: function (n) { var i = t(n, "x", "reciprocal"); return r.runKernelFunc(function (n, t) { var r = n.reciprocal(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.div(i.square().neg()) } } }) } }), ost = u({ round_: function (n) { var i = t(n, "x", "round"); return r.runKernelFunc(function (n) { return n.round(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), ub = u({ rsqrt_: function (n) { var i = t(n, "x", "rsqrt"), u = [i]; return r.runKernelFunc(function (n, t) { var r = n.rsqrt(i); return t([i]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return n.div(i.pow(1.5).mul(2)).neg() } } }, "Rsqrt", {}, u) } }), fb = u({ sigmoid_: function (n) { var i = t(n, "x", "sigmoid"); return r.runKernelFunc(function (n, t) { var r = n.sigmoid(i); return t([r]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return n.mul(i.mul(h(1).sub(i))) } } }, "Sigmoid") } }), sst = u({ sign_: function (n) { var i = t(n, "x", "sign"); return r.runKernelFunc(function (n) { return n.sign(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), hst = u({ isNaN_: function (n) { var i = t(n, "x", "isNaN"); return r.runKernelFunc(function (n) { return n.isNaN(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), cst = u({ isInf_: function (n) { var i = t(n, "x", "isInf"); return r.runKernelFunc(function (n) { return n.isInf(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), lst = u({ isFinite_: function (n) { var i = t(n, "x", "isFinite"); return r.runKernelFunc(function (n) { return n.isFinite(i) }, { $x: i }, function (n) { return { $x: function () { return it(n) } } }) } }), ast = u({ sin_: function (n) { var i = t(n, "x", "sin"), u = [i]; return r.runKernelFunc(function (n, t) { var r = n.sin(i); return t([i]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return i.toFloat().cos().mul(n) } } }, "Sin", {}, u) } }), vst = u({ sinh_: function (n) { var i = t(n, "x", "sinh"); return r.runKernelFunc(function (n, t) { var r = n.sinh(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return i.toFloat().cosh().mulStrict(n) } } }) } }), yst = u({ softplus_: function (n) { var i = t(n, "x", "softplus"); return r.runKernelFunc(function (n, t) { var r = n.softplus(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.mul(i.sigmoid()) } } }) } }), pst = u({ sqrt_: function (n) { var i = t(n, "x", "sqrt"); return r.runKernelFunc(function (n, t) { var r = n.sqrt(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.div(i.toFloat().sqrt().mul(2)) } } }) } }), wst = u({ step_: function (n, i) { void 0 === i && (i = 0); var u = t(n, "x", "step"); return r.runKernelFunc(function (n) { return n.step(u, i) }, { $x: u }, function (n) { return { $x: function () { return it(n) } } }) } }), bst = u({ tan_: function (n) { var i = t(n, "x", "tan"); return r.runKernelFunc(function (n, t) { var r = n.tan(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return n.div(i.cos().square()) } } }) } }), kst = u({ tanh_: function (n) { var i = t(n, "x", "tanh"); return r.runKernelFunc(function (n, t) { var r = n.tanh(i); return t([r]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return h(1).sub(i.square()).mulStrict(n) } } }, "Tanh", {}, null, [!0]) } }); var tht = u({ batchNormalization2d_: function (n, t, i, r, u, f) { return void 0 === r && (r = .001), gl(), dst(n, t, i, f, u, r) } }), iht = u({ batchNormalization3d_: function (n, t, i, r, u, f) { return void 0 === r && (r = .001), gl(), gst(n, t, i, f, u, r) } }), rht = u({ batchNormalization4d_: function (n, t, i, r, u, f) { return void 0 === r && (r = .001), gl(), nht(n, t, i, f, u, r) } }), uht = u({ batchNormalization_: function (n, t, i, r, u, f) { return void 0 === r && (r = .001), gl(), eh(n, t, i, f, u, r) } }), eb = u({ batchNorm_: eh }), fht = u({ batchNorm2d_: dst }), eht = u({ batchNorm3d_: gst }), oht = u({ batchNorm4d_: nht }), oh = u({ logicalAnd_: function (n, i) { var u = t(n, "a", "logicalAnd", "bool"), f = t(i, "b", "logicalAnd", "bool"); return tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.logicalAnd(u, f) }, { a: u, b: f }, null, "LogicalAnd") } }), sht = u({ logicalNot_: function (n) { var i = t(n, "x", "logicalNot", "bool"); return r.runKernelFunc(function (n) { return n.logicalNot(i) }, { $x: i }) } }), ob = u({ logicalOr_: function (n, i) { var u = t(n, "a", "logicalOr", "bool"), f = t(i, "b", "logicalOr", "bool"); return tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.logicalOr(u, f) }, { $a: u, $b: f }) } }), hht = u({ logicalXor_: function (n, i) { var r = t(n, "a", "logicalXor", "bool"), u = t(i, "b", "logicalXor", "bool"); return tt(r.shape, u.shape), ob(n, i).logicalAnd(oh(n, i).logicalNot()) } }), af = u({ where_: function (n, u, f) { var o = t(u, "a", "where"), s = t(f, "b", "where"), e = t(n, "condition", "where", "bool"); return rt(o.shape, s.shape, "Error in where: "), 1 === e.rank ? i(e.shape[0] === o.shape[0], function () { return "The first dimension of `a` must match the size of `condition`." }) : rt(e.shape, s.shape, "Error in where: "), r.runKernelFunc(function (n, t) { var i = n.select(e, o, s); return t([e]), i }, { $condition: e, $a: o, $b: s }, function (n, t) { var i = t[0]; return { $condition: function () { return it(i).toFloat() }, $a: function () { return n.mul(i.cast(n.dtype)) }, $b: function () { return n.mul(i.logicalNot().cast(n.dtype)) } } }) } }), sb = function (n) { return y(this, void 0, void 0, function () { var i, r, u; return p(this, function (f) { switch (f.label) { case 0: return [4, (i = t(n, "condition", "whereAsync", "bool")).data()]; case 1: return r = f.sent(), u = lw(i.shape, r), n !== i && i.dispose(), [2, u] } }) }) }, nt = u({ add_: function (n, i) { var e, u = t(n, "a", "add"), f = t(i, "b", "add"), o; return e = ht(u, f), u = e[0], f = e[1], o = tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.add(u, f) }, { a: u, b: f }, function (n) { return { a: function () { var t = n, i = kt(u.shape, o); return i.length > 0 && (t = t.sum(i)), t.reshape(u.shape) }, b: function () { var t = n, i = kt(f.shape, o); return i.length > 0 && (t = t.sum(i)), t.reshape(f.shape) } } }, "Add") } }), cht = u({ addN_: function (n) { var u, f, e; return i(Array.isArray(n), function () { return "The argument passed to tf.addN() must be a list of tensors" }), i(n.length >= 1, function () { return "Must pass at least one tensor to tf.addN(), but got " + n.length }), u = n.map(function (n, i) { return t(n, "tensors" + i, "addN") }), f = u[0], u.forEach(function (n) { if (n.dtype !== f.dtype) throw new Error("All tensors passed to tf.addN() must have the same dtype"); }), u.forEach(function (n) { if (!yt(n.shape, f.shape)) throw new Error("All tensors passed to tf.addN() must have the same shape"); }), e = u, r.runKernelFunc(function (n) { return n.addN(u) }, e, function (n) { var t = {}; return u.forEach(function (i, r) { t[r] = function () { return n.clone() } }), t }, "AddN") } }), lht = u({ addStrict_: function (n, i) { var r = t(n, "a", "addStrict"), u = t(i, "b", "addStrict"); return rt(r.shape, u.shape, "Error in addStrict: "), r.add(u) } }), aht = u({ atan2_: function (n, i) { var e, u = t(n, "a", "atan2"), f = t(i, "b", "atan2"), o; return e = ht(u, f), u = e[0], f = e[1], o = tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.atan2(u, f); return t([u, f]), i }, { $a: u, $b: f }, function (n, t) { var i = t[0], r = t[1]; return { $a: function () { var f = nt(i.square(), r.square()), t = n.mul(r.div(f)), u = kt(i.shape, o); return u.length > 0 && (t = t.sum(u)), t.reshape(i.shape) }, $b: function () { var f = nt(i.square(), r.square()), t = fh(n.mul(i.div(f))), u = kt(r.shape, o); return u.length > 0 && (t = t.sum(u)), t.reshape(r.shape) } } }) } }), sr = u({ div_: function (n, i) { var e, u = t(n, "a", "div"), f = t(i, "b", "div"), o; return (e = ht(u, f), u = e[0], f = e[1], "int32" === u.dtype && "int32" === f.dtype) ? hb(u, f) : (o = tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.realDivide(u, f); return t([u, f]), i }, { a: u, b: f }, function (n, t) { var r = t[0], i = t[1]; return { a: function () { var t = n.div(i.toFloat()), u = kt(r.shape, o); return u.length > 0 ? t.sum(u).reshape(r.shape) : t }, b: function () { var t = n.mul(r.toFloat()), u = kt(i.shape, o), f; return u.length > 0 && (t = t.sum(u).reshape(i.shape)), f = i.square(), t.div(f.toFloat()).neg() } } }, "Div")) } }), vht = u({ divNoNan_: function (n, i) { var f, u = t(n, "a", "div"), r = t(i, "b", "div"); u = (f = ht(u, r))[0]; r = f[1]; var e = sr(u, r), o = it(e), s = r.equal(o); return af(s, o, e) } }), yht = u({ divStrict_: function (n, i) { var r = t(n, "a", "div"), u = t(i, "b", "div"); return rt(r.shape, u.shape, "Error in divideStrict: "), r.div(u) } }), hb = u({ floorDiv_: function (n, i) { var e, u = t(n, "a", "floorDiv"), f = t(i, "b", "floorDiv"), o; return e = ht(u, f), u = e[0], f = e[1], o = tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.floorDiv(u, f); return t([u, f]), i }, { a: u, b: f }, function (n, t) { var r = t[0], i = t[1]; return { a: function () { var t = n.div(i.toFloat()), u = kt(r.shape, o); return u.length > 0 ? t.sum(u).reshape(r.shape) : t }, b: function () { var t = n.mul(r.toFloat()), u = kt(i.shape, o), f; return u.length > 0 && (t = t.sum(u).reshape(i.shape)), f = i.square(), t.div(f.toFloat()).neg() } } }, "FloorDiv") } }), na = u({ maximum_: function (n, i) { var e, u = t(n, "a", "maximum"), f = t(i, "b", "maximum"); return e = ht(u, f), u = e[0], f = e[1], "bool" === u.dtype && (u = u.toInt(), f = f.toInt()), tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.maximum(u, f); return t([u, f]), i }, { a: u, b: f }, function (n, t) { var i = t[0], r = t[1]; return { a: function () { return n.mul(i.greaterEqual(r).toFloat()) }, b: function () { return n.mul(i.less(r).toFloat()) } } }, "Maximum") } }), pht = u({ maximumStrict_: function (n, i) { var r = t(n, "a", "maximumStrict"), u = t(i, "b", "maximumStrict"); return rt(r.shape, u.shape, "Error in maximumStrict: "), r.maximum(u) } }), cb = u({ minimum_: function (n, i) { var e, u = t(n, "a", "minimum"), f = t(i, "b", "minimum"); return e = ht(u, f), u = e[0], f = e[1], "bool" === u.dtype && (u = u.toInt(), f = f.toInt()), tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.minimum(u, f); return t([u, f]), i }, { a: u, b: f }, function (n, t) { var i = t[0], r = t[1]; return { a: function () { return n.mul(i.lessEqual(r).toFloat()) }, b: function () { return n.mul(i.greater(r).toFloat()) } } }, "Minimum") } }), wht = u({ minimumStrict_: function (n, i) { var r = t(n, "a", "minimumStrict"), u = t(i, "b", "minimumStrict"); return rt(r.shape, u.shape, "Error in minimumStrict: "), r.minimum(u) } }), bht = u({ mod_: function (n, i) { var e, u = t(n, "a", "mod"), f = t(i, "b", "mod"), o; return e = ht(u, f), u = e[0], f = e[1], o = tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.mod(u, f); return t([u, f]), i }, { $a: u, $b: f }, function (n, t) { var i = t[0], r = t[1]; return { $a: function () { var t = kt(i.shape, o); return t.length > 0 ? n.sum(t).reshape(i.shape) : n }, $b: function () { var t = n.mul(i.div(r).floor().neg()), u = kt(r.shape, o); return u.length > 0 ? t.sum(u).reshape(r.shape) : t } } }) } }), kht = u({ modStrict_: function (n, i) { var r = t(n, "a", "modStrict"), u = t(i, "b", "modStrict"); return rt(r.shape, u.shape, "Error in modStrict: "), r.mod(u) } }), si = u({ mul_: function (n, i) { var e, u = t(n, "a", "mul"), f = t(i, "b", "mul"), o; return e = ht(u, f), u = e[0], f = e[1], o = tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.multiply(u, f); return t([u, f]), i }, { a: u, b: f }, function (n, t) { var i = t[0], r = t[1]; return { a: function () { var t = n.mul(r.toFloat()), u = kt(i.shape, o); return u.length > 0 ? t.sum(u).reshape(i.shape) : t }, b: function () { var t = n.mul(i.toFloat()), u = kt(r.shape, o); return u.length > 0 ? t.sum(u).reshape(r.shape) : t } } }, "Mul") } }), dht = u({ mulStrict_: function (n, i) { var r = t(n, "a", "mul"), u = t(i, "b", "mul"); return rt(r.shape, u.shape, "Error in multiplyStrict: "), r.mul(u) } }), sh = u({ pow_: function (n, i) { var e, u = t(n, "base", "pow"), f = t(i, "exp", "pow"), o, s; return e = ht(u, f), u = e[0], f = e[1], o = tt(u.shape, f.shape), s = [u, f], r.runKernelFunc(function (n, t) { var i = n.pow(u, f); return t([u, f, i]), i }, { a: u, b: f }, function (n, t) { var i = t[0], r = t[1], u = t[2]; return { a: function () { var u = r.toFloat(), t = n.mul(u.mul(i.pow(u.sub(h(1))))), f = kt(i.shape, o); return f.length > 0 && (t = t.sum(f)), t.reshape(i.shape) }, b: function () { var e = i.greater(0), s = i.log().where(e, it(i)), t = n.mul(u.mul(s)), f = kt(r.shape, o); return f.length > 0 && (t = t.sum(f)), t.reshape(r.shape) } } }, "Pow", {}, s, [!0]) } }), ght = u({ powStrict_: function (n, t) { return rt(n.shape, t.shape, "Error in powStrict: "), n.pow(t) } }), nct = u({ squaredDifferenceStrict_: function (n, i) { var r = t(n, "a", "squaredDifferenceStrict"), u = t(i, "b", "squaredDifferenceStrict"); return rt(r.shape, u.shape, "Error in squaredDifferenceStrict: "), r.squaredDifference(u) } }), dt = u({ sub_: function (n, i) { var e, u = t(n, "a", "sub"), f = t(i, "b", "sub"), o; return e = ht(u, f), u = e[0], f = e[1], o = tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.subtract(u, f) }, { a: u, b: f }, function (n) { return { a: function () { var t = n, i = kt(u.shape, o); return i.length > 0 && (t = t.sum(i)), t.reshape(u.shape) }, b: function () { var t = n, i = kt(f.shape, o); return i.length > 0 && (t = t.sum(i)), t.neg().reshape(f.shape) } } }, "Sub") } }), tct = u({ subStrict_: function (n, i) { var r = t(n, "a", "subStrict"), u = t(i, "b", "subStrict"); return rt(r.shape, u.shape, "Error in subStrict: "), r.sub(u) } }), lb = u({ equal_: function (n, i) { var e, u = t(n, "a", "equal"), f = t(i, "b", "equal"); return e = ht(u, f), u = e[0], f = e[1], tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.equal(u, f) }, { $a: u, $b: f }) } }), ict = u({ equalStrict_: function (n, i) { var r = t(n, "a", "equalStrict"), u = t(i, "b", "equalStrict"); return rt(r.shape, u.shape, "Error in equalStrict: "), r.equal(u) } }), rct = u({ greater_: function (n, i) { var e, u = t(n, "a", "greater"), f = t(i, "b", "greater"); return e = ht(u, f), u = e[0], f = e[1], tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.greater(u, f) }, { a: u, b: f }, null, "Greater") } }), ab = u({ greaterEqual_: function (n, i) { var e, u = t(n, "a", "greaterEqual"), f = t(i, "b", "greaterEqual"); return e = ht(u, f), u = e[0], f = e[1], tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.greaterEqual(u, f); return t([u, f]), i }, { a: u, b: f }, function (n, t) { var i = t[0], r = t[1]; return { a: function () { return it(i) }, b: function () { return it(r) } } }, "GreaterEqual") } }), uct = u({ greaterEqualStrict_: function (n, i) { var r = t(n, "a", "greaterEqualStrict"), u = t(i, "b", "greaterEqualStrict"); return rt(r.shape, u.shape, "Error in greaterEqualStrict: "), r.greaterEqual(u) } }), fct = u({ greaterStrict_: function (n, i) { var r = t(n, "a", "greaterStrict"), u = t(i, "b", "greaterStrict"); return rt(r.shape, u.shape, "Error in greaterStrict: "), r.greater(u) } }), ect = u({ less_: function (n, i) { var e, u = t(n, "a", "less"), f = t(i, "b", "less"); return e = ht(u, f), u = e[0], f = e[1], tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.less(u, f) }, { a: u, b: f }, null, "Less") } }), oct = u({ lessEqual_: function (n, i) { var e, u = t(n, "a", "lessEqual"), f = t(i, "b", "lessEqual"); return e = ht(u, f), u = e[0], f = e[1], tt(u.shape, f.shape), r.runKernelFunc(function (n, t) { var i = n.lessEqual(u, f); return t([u, f]), i }, { a: u, b: f }, null, "LessEqual") } }), sct = u({ lessEqualStrict_: function (n, i) { var r = t(n, "a", "lessEqualStrict"), u = t(i, "b", "lessEqualStrict"); return rt(r.shape, u.shape, "Error in lessEqualStrict: "), r.lessEqual(u) } }), hct = u({ lessStrict_: function (n, i) { var r = t(n, "a", "lessStrict"), u = t(i, "b", "lessStrict"); return rt(r.shape, u.shape, "Error in lessStrict: "), r.less(u) } }), cct = u({ notEqual_: function (n, i) { var e, u = t(n, "a", "notEqual"), f = t(i, "b", "notEqual"); return e = ht(u, f), u = e[0], f = e[1], tt(u.shape, f.shape), r.runKernelFunc(function (n) { return n.notEqual(u, f) }, { a: u, b: f }, null, "NotEqual") } }), lct = u({ notEqualStrict_: function (n, i) { var r = t(n, "a", "notEqualStrict"), u = t(i, "b", "notEqualStrict"); return rt(r.shape, u.shape, "Error in notEqualStrict: "), r.notEqual(u) } }); var ta = u({ gather_: function (n, i, u) { var f, e, o; return void 0 === u && (u = 0), f = t(n, "x", "gather"), e = t(i, "indices", "gather", "int32"), u = pt(u, f.shape)[0], o = function (n, t, i) { for (var o = n.shape[i], u = [], f = 1, e = 1, r = 0; r < i; r++)u.push(n.shape[r]), f *= n.shape[r]; for (r = 0; r < t.rank; r++)u.push(t.shape[r]); for (r = i + 1; r < n.rank; r++)u.push(n.shape[r]), e *= n.shape[r]; return { batchSize: f, sliceSize: e, dimSize: o, outputShape: u } }(f, e, u), r.runKernelFunc(function (n, t) { var i = n.gather(f, e.flatten(), u); return t([e]), i }, { x: f, indices: e }, function (n, t) { var i = t[0]; return { x: function () { var r = f.shape, e = i.size, o = r.slice(0, u), t = o.length, s = r.slice(u, r.length).slice(1), c = s.length, l = act(0, t), a = act(t + 1, t + 1 + c), v = vct([o, [e], s]), y = n.reshape(v), p = i.reshape([e]), h = vct([[t], l, a]), w = y.transpose(h), b = vb(w, p, f.shape[u]), k = dc(h); return b.transpose(k) }, indices: function () { return i } } }, "Gather", { axis: u }).reshape(o.outputShape) } }), vb = u({ unsortedSegmentSum_: function (n, u, f) { var e = t(n, "x", "unsortedSegmentSum"), o = t(u, "segmentIds", "unsortedSegmentSum", "int32"); return i(lt(f), function () { return "numSegments must be of dtype int" }), r.runKernelFunc(function (n, t) { var i = n.unsortedSegmentSum(e, o, f); return t([o]), i }, { $x: e }, function (n, t) { var i = t[0]; return { $x: function () { return function (n, t) { for (var f, e = na(t, it(t)), r = ta(n, e), i = ab(t, h(0, "int32")), o = r.rank - i.rank, u = 0; u < o; ++u)i = rr(i, u + 1); return i = oh(i, fe(r.shape, "bool")), f = it(r), af(i, r, f) }(n, i) } } }) } }), yct = function (n, r, u) { return y(this, void 0, void 0, function () { var o, e, f, s, h, l, c, b, a, v, y, w, k; return p(this, function (p) { switch (p.label) { case 0: for (o = t(n, "tensor", "boolMask"), e = t(r, "mask", "boolMask", "bool"), f = null == u ? 0 : u, s = e.rank, h = o.shape, i(s > 0, function () { return "mask cannot be scalar" }), rt(h.slice(f, f + s), e.shape, "mask's shape must match the first K dimensions of tensor's shape,"), l = 1, c = f; c < f + s; c++)l *= h[c]; return b = h.slice(0, f).concat([l], h.slice(f + s)), a = o.reshape(b), v = e.reshape([-1]), [4, sb(v)]; case 1: return y = p.sent(), w = y.squeeze([1]), k = ta(a, w, f), n !== o && o.dispose(), r !== e && e.dispose(), w.dispose(), a.dispose(), v.dispose(), y.dispose(), [2, k] } }) }) }; var bct = u({ conv1d_: function (n, r, u, f, e, o, s) { void 0 === e && (e = "NWC"); void 0 === o && (o = 1); var a = t(n, "x", "conv1d"), c = t(r, "filter", "conv1d"), h = a, v = !1; 2 === a.rank && (v = !0, h = a.as3D(1, a.shape[0], a.shape[1])); i(3 === h.rank, function () { return "Error in conv1d: input must be rank 3, but got rank " + h.rank + "." }); i(3 === c.rank, function () { return "Error in conv1d: filter must be rank 3, but got rank " + c.rank + "." }); null != s && i(lt(f), function () { return "Error in conv1d: pad must be an integer when using, dimRoundingMode " + s + " but got pad " + f + "." }); i(h.shape[2] === c.shape[1], function () { return "Error in conv1d: depth of input (" + h.shape[2] + ") must match input depth for filter " + c.shape[1] + "." }); i(pi(u, o), function () { return "Error in conv1D: Either stride or dilation must be 1. Got stride " + u + " and dilation '" + o + "'" }); i("NWC" === e, function () { return "Error in conv1d: got dataFormat of " + e + " but only NWC is currently supported." }); var y = c.as4D(1, c.shape[0], c.shape[1], c.shape[2]), p = h.as4D(h.shape[0], 1, h.shape[1], h.shape[2]), l = ur(p, y, [1, u], f, "NHWC", [1, o], s); return v ? l.as2D(l.shape[2], l.shape[3]) : l.as3D(l.shape[0], l.shape[2], l.shape[3]) } }), ur = u({ conv2d_: function (n, u, f, e, o, s, h) { var y; void 0 === o && (o = "NHWC"); void 0 === s && (s = [1, 1]); var a = t(n, "x", "conv2d"), l = t(u, "filter", "conv2d"), c = a, p = !1; 3 === a.rank && (p = !0, c = a.as4D(1, a.shape[0], a.shape[1], a.shape[2])); i(4 === c.rank, function () { return "Error in conv2d: input must be rank 4, but got rank " + c.rank + "." }); i(4 === l.rank, function () { return "Error in conv2d: filter must be rank 4, but got rank " + l.rank + "." }); null != h && i(lt(e), function () { return "Error in conv2d: pad must be an integer when using, dimRoundingMode " + h + " but got pad " + e + "." }); y = "NHWC" === o ? c.shape[3] : c.shape[1]; i(y === l.shape[2], function () { return "Error in conv2d: depth of input (" + y + ") must match input depth for filter " + l.shape[2] + "." }); i(pi(f, s), function () { return "Error in conv2D: Either strides or dilations must be 1. Got strides " + f + " and dilations '" + s + "'" }); var b = ll(o), w = lf(c.shape, l.shape, f, s, e, h, !1, b), k = [l, c], v = r.runKernelFunc(function (n, t) { var i = n.conv2d(c, l, w); return t([l, c]), i }, { x: c, filter: l }, function (n, t) { var r = t, u = r[0], h = r[1]; return i(he(s), function () { return "Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '" + s + "'" }), { x: function () { return dct(h.shape, n, u, f, e, o) }, filter: function () { return pb(h, n, u.shape, f, e, o) } } }, "Conv2D", w, k); return p ? v.as3D(v.shape[1], v.shape[2], v.shape[3]) : v } }), kct = u({ conv3d_: function (n, u, f, e, o, s) { var y, a; void 0 === o && (o = "NDHWC"); void 0 === s && (s = [1, 1, 1]); var l = t(n, "x", "conv3d"), c = t(u, "filter", "conv3d"), h = l, v = !1; return 4 === l.rank && (v = !0, h = l.as5D(1, l.shape[0], l.shape[1], l.shape[2], l.shape[3])), i(5 === h.rank, function () { return "Error in conv3d: input must be rank 5, but got rank " + h.rank + "." }), i(5 === c.rank, function () { return "Error in conv3d: filter must be rank 5, but got rank " + c.rank + "." }), i(h.shape[4] === c.shape[3], function () { return "Error in conv3d: depth of input (" + h.shape[4] + ") must match input depth for filter " + c.shape[3] + "." }), i(function (n, t) { return yb(n) || yb(t) }(f, s), function () { return "Error in conv3D: Either strides or dilations must be 1. Got strides " + f + " and dilations '" + s + "'" }), i("NDHWC" === o, function () { return "Error in conv3d: got dataFormat of " + o + " but only NDHWC is currently supported." }), y = nh(h.shape, c.shape, f, s, e), a = r.runKernelFunc(function (n, t) { var i = n.conv3d(h, c, y); return t([h, c]), i }, { x: h, $filter: c }, function (n, t) { i(yb(s), function () { return "Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '" + s + "'" }); var u = t[0], o = t[1]; return { x: function () { return wct(u.shape, n, o, f, e) }, $filter: function () { return function (n, t, u, f, e) { var s = n, o, h; return 4 === n.rank && (s = n.as5D(1, n.shape[0], n.shape[1], n.shape[2], n.shape[3])), o = t, 4 === o.rank && (o = t.as5D(1, t.shape[0], t.shape[1], t.shape[2], t.shape[3])), i(5 === s.rank, function () { return "Error in conv3dDerFilter: input must be rank 5, but got shape " + s.shape + "." }), i(5 === o.rank, function () { return "Error in conv3dDerFilter: dy must be rank 5, but got shape " + o.shape + "." }), i(5 === u.length, function () { return "Error in conv3dDerFilter: filterShape must be length 5, but got " + u + "." }), i(s.shape[4] === u[3], function () { return "Error in conv3dDerFilter: depth of input " + s.shape[4] + ") must match input depth in filter (" + u[3] + "." }), i(o.shape[4] === u[4], function () { return "Error in conv3dDerFilter: depth of dy (" + o.shape[4] + ") must match output depth for filter (" + u[4] + ")." }), h = nh(s.shape, u, f, 1, e), r.runKernelFunc(function (n) { return n.conv3dDerFilter(s, o, h) }, { x5D: s, dy5D: o }) }(u, n, o.shape, f, e) } } }), v ? a.as4D(a.shape[1], a.shape[2], a.shape[3], a.shape[4]) : a } }), pb = u({ conv2dDerFilter_: function (n, t, u, f, e, o, s) { var h, c, l, a, v, y; return void 0 === o && (o = "NHWC"), h = n, 3 === n.rank && (h = n.as4D(1, n.shape[0], n.shape[1], n.shape[2])), c = t, 3 === c.rank && (c = t.as4D(1, t.shape[0], t.shape[1], t.shape[2])), i(4 === h.rank, function () { return "Error in conv2dDerFilter: input must be rank 4, but got shape " + h.shape + "." }), i(4 === c.rank, function () { return "Error in conv2dDerFilter: dy must be rank 4, but got shape " + c.shape + "." }), i(4 === u.length, function () { return "Error in conv2dDerFilter: filterShape must be length 4, but got " + u + "." }), l = "NHWC" === o ? h.shape[3] : h.shape[1], a = "NHWC" === o ? c.shape[3] : c.shape[1], i(l === u[2], function () { return "Error in conv2dDerFilter: depth of input " + l + ") must match input depth in filter (" + u[2] + "." }), i(a === u[3], function () { return "Error in conv2dDerFilter: depth of dy (" + a + ") must match output depth for filter (" + u[3] + ")." }), null != s && i(lt(e), function () { return "Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode " + s + " but got pad " + e + "." }), v = ll(o), y = lf(h.shape, u, f, 1, e, s, !1, v), r.runKernelFunc(function (n) { return n.conv2dDerFilter(h, c, y) }, { x4D: h, dy4D: c }) } }), dct = u({ conv2dDerInput_: pct }), hh = u({ depthwiseConv2d_: function (n, u, f, e, o, s, h) { void 0 === s && (s = [1, 1]); var a = t(n, "x", "depthwiseConv2d"), l = t(u, "filter", "depthwiseConv2d"), c = a, p = !1; 3 === a.rank && (p = !0, c = a.as4D(1, a.shape[0], a.shape[1], a.shape[2])); i(4 === c.rank, function () { return "Error in depthwiseConv2d: input must be rank 4, but got rank " + c.rank + "." }); i(4 === l.rank, function () { return "Error in depthwiseConv2d: filter must be rank 4, but got rank " + l.rank + "." }); i(c.shape[3] === l.shape[2], function () { return "Error in depthwiseConv2d: number of input channels (" + c.shape[3] + ") must match the inChannels dimension in filter " + l.shape[2] + "." }); null == s && (s = [1, 1]); i(pi(f, s), function () { return "Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides " + f + " and dilations '" + s + "'" }); null != h && i(lt(e), function () { return "Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode " + h + " but got pad " + e + "." }); var y = lf(c.shape, l.shape, f, s, e, h, !0), w = [c, l], v = r.runKernelFunc(function (n, t) { var i = n.depthwiseConv2D(c, l, y); return t([c, l]), i }, { x: c, filter: l }, function (n, t) { i(he(s), function () { return "Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '" + s + "'" }); var r = t[0], u = t[1]; return { x: function () { return gct(r.shape, n, u, y) }, filter: function () { return nlt(r, n, u.shape, y) } } }, "DepthwiseConv2dNative", y, w); return p ? v.as3D(v.shape[1], v.shape[2], v.shape[3]) : v } }), gct = u({ depthwiseConv2dDerInput_: function (n, t, i, u) { var e = t, o = !1, f; return 3 === t.rank && (o = !0, e = t.as4D(1, t.shape[0], t.shape[1], t.shape[2])), f = r.runKernelFunc(function (n) { return n.depthwiseConv2DDerInput(e, i, u) }, { dy4D: e }), o ? f.as3D(f.shape[1], f.shape[2], f.shape[3]) : f } }), nlt = u({ depthwiseConv2dDerFilter_: function (n, t, i, u) { var e = n, f; return 3 === n.rank && (e = n.as4D(1, n.shape[0], n.shape[1], n.shape[2])), f = t, 3 === f.rank && (f = t.as4D(1, t.shape[0], t.shape[1], t.shape[2])), r.runKernelFunc(function (n) { return n.depthwiseConv2DDerFilter(e, f, u) }, { x4D: e, dy4D: f }) } }), ia = u({ separableConv2d_: function (n, r, u, f, e, o, s) { var y, p, b, a; void 0 === o && (o = [1, 1]); void 0 === s && (s = "NHWC"); var c = t(n, "x", "separableConv2d"), l = t(r, "depthwiseFilter", "separableConv2d"), h = t(u, "pointwiseFilter", "separableConv2d"), v = c, w = !1; if (3 === c.rank && (w = !0, v = c.as4D(1, c.shape[0], c.shape[1], c.shape[2])), "NCHW" === s) throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported"); return i(4 === v.rank, function () { return "Error in separableConv2d: input must be rank 4, but got rank " + v.rank + "." }), i(4 === l.rank, function () { return "Error in separableConv2d: depthwise filter must be rank 4, but got rank " + l.rank + "." }), i(4 === h.rank, function () { return "Error in separableConv2d: pointwise filter must be rank 4, but got rank " + l.rank + "." }), i(1 === h.shape[0], function () { return "Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got " + h.shape[0] + "." }), i(1 === h.shape[1], function () { return "Error in separableConv2d: the second dimension of pointwise filter must be 1, but got " + h.shape[1] + "." }), y = l.shape[2], p = l.shape[3], i(h.shape[2] === y * p, function () { return "Error in separableConv2d: the third dimension of pointwise filter must be " + y * p + ", but got " + h.shape[2] + "." }), b = hh(v, l, f, e, s, o), a = ur(b, h, 1, "valid", s), w ? a.as3D(a.shape[1], a.shape[2], a.shape[3]) : a } }), tlt = u({ conv2dTranspose_: function (n, i, r, u, f, e) { return pct(r, t(n, "x", "conv2dTranspose"), t(i, "filter", "conv2dTranspose"), u, f, "NHWC", e) } }), ilt = u({ conv3dTranspose_: function (n, i, r, u, f) { return wct(r, t(n, "x", "conv3dTranspose"), t(i, "filter", "conv3dTranspose"), u, f) } }), ch = u({ matMul_: function (n, u, f, e) { var l, o, s; void 0 === f && (f = !1); void 0 === e && (e = !1); o = t(n, "a", "matMul"); s = t(u, "b", "matMul"); l = ht(o, s); o = l[0]; s = l[1]; var h = f ? o.shape[o.rank - 2] : o.shape[o.rank - 1], c = e ? s.shape[s.rank - 1] : s.shape[s.rank - 2], a = f ? o.shape[o.rank - 1] : o.shape[o.rank - 2], v = e ? s.shape[s.rank - 2] : s.shape[s.rank - 1], y = o.shape.slice(0, -2), p = s.shape.slice(0, -2), d = w(y), g = w(p); i(o.rank >= 2 && s.rank >= 2 && o.rank === s.rank, function () { return "Error in matMul: inputs must have the same rank of at least 2, got ranks " + o.rank + " and " + s.rank + "." }); i(yt(y, p), function () { return "Error in matMul: outer dimensions (" + y + ") and (" + p + ") of Tensors with shapes " + o.shape + " and " + s.shape + " must match." }); i(h === c, function () { return "Error in matMul: inner shapes (" + h + ") and (" + c + ") of Tensors with shapes " + o.shape + " and " + s.shape + " and transposeA=" + f + " and transposeB=" + e + " must match." }); var nt = o.shape.slice(0, -2).concat([a, v]), b = f ? o.as3D(d, h, a) : o.as3D(d, a, h), k = e ? s.as3D(g, v, c) : s.as3D(g, c, v), tt = { transposeA: f, transposeB: e }; return r.runKernelFunc(function (n, t) { var i = n.batchMatMul(b, k, f, e); return t([b, k]), i }, { a: b, b: k }, function (n, t) { var u = t, i = u[0], r = u[1]; return f || e ? !f && e ? { a: function () { return n.matMul(r, !1, !1) }, b: function () { return n.matMul(i, !0, !1) } } : f && !e ? { a: function () { return r.matMul(n, !1, !0) }, b: function () { return i.matMul(n, !1, !1) } } : { a: function () { return r.matMul(n, !0, !0) }, b: function () { return n.matMul(i, !0, !0) } } : { a: function () { return n.matMul(r, !1, !0) }, b: function () { return i.matMul(n, !0, !1) } } }, "BatchMatMul", tt).reshape(nt) } }), rlt = u({ dot_: function (n, r) { var f = t(n, "t1", "dot"), u = t(r, "t2", "dot"), e, o; return i(!(1 !== f.rank && 2 !== f.rank || 1 !== u.rank && 2 !== u.rank), function () { return "Error in dot: inputs must all be rank 1 or 2, but got ranks " + f.rank + " and " + u.rank + "." }), e = 1 === f.rank ? f.size : f.shape[1], o = 1 === u.rank ? u.size : u.shape[0], i(e === o, function () { return "Error in dot: inner dimensions of inputs must match, but got " + e + " and " + o + "." }), 1 === f.rank && 1 === u.rank ? f.as2D(1, -1).matMul(u.as2D(-1, 1)).asScalar() : 1 === f.rank && 2 === u.rank ? f.as2D(1, -1).matMul(u.as2D(u.shape[0], u.shape[1])).as1D() : 2 === f.rank && 1 === u.rank ? f.matMul(u.as2D(-1, 1)).as1D() : f.matMul(u.as2D(u.shape[0], u.shape[1])) } }), ult = u({ outerProduct_: function (n, r) { var u = t(n, "v1", "outerProduct"), f = t(r, "v2", "outerProduct"); return i(1 === u.rank && 1 === f.rank, function () { return "Error in outerProduct: inputs must be rank 1, but got ranks " + u.rank + " and " + f.rank + "." }), u.as2D(-1, 1).matMul(f.as2D(1, -1)) } }), oo = u({ reverse_: function (n, i) { var u = t(n, "x", "reverse"), f; return 0 === u.rank ? u.clone() : (f = pt(i, u.shape), r.runKernelFunc(function (n) { return n.reverse(u, f) }, { $x: u }, function (n) { return { $x: function () { return n.reverse(f) } } }).reshapeAs(u)) } }), flt = u({ reverse1d_: function (n) { var r = t(n, "x", "reverse"); return i(1 === r.rank, function () { return "Error in reverse1D: x must be rank 1 but got rank " + r.rank + "." }), oo(r, 0) } }), elt = u({ reverse2d_: function (n, r) { var u = t(n, "x", "reverse"); return i(2 === u.rank, function () { return "Error in reverse2D: x must be rank 2 but got rank " + u.rank + "." }), oo(u, r) } }), olt = u({ reverse3d_: function (n, r) { var u = t(n, "x", "reverse"); return i(3 === u.rank, function () { return "Error in reverse3D: x must be rank 3 but got rank " + u.rank + "." }), oo(u, r) } }), slt = u({ reverse4d_: function (n, r) { var u = t(n, "x", "reverse"); return i(4 === u.rank, function () { return "Error in reverse4D: x must be rank 4 but got rank " + u.rank + "." }), oo(u, r) } }); var gt = u({ maxPool_: function (n, t, i, r, u) { return hlt(n, t, i, 1, r, u) } }), so = u({ avgPool_: function (n, t, i, r, u) { return clt(n, t, i, 1, r, u) } }), llt = u({ pool_: function (n, r, u, f, e, o) { var p, s, h; null == e && (e = [1, 1]); null == o && (o = 1); 0 === f && (f = "valid"); var c = t(n, "x", "maxPool"), a = c, y = !1; 3 === c.rank && (y = !0, a = c.as4D(1, c.shape[0], c.shape[1], c.shape[2])); i(pi(o, e), function () { return "Error in pool: Either strides or dilations must be 1. Got strides " + o + " and dilations '" + e + "'" }); s = to(a.shape, r, o, e, f); h = [s.dilationHeight, s.dilationWidth]; p = "same" === f ? function (n, t) { var i = n.map(function (n, i) { return n + (n - 1) * (t[i] - 1) }).map(function (n) { return n - 1 }), r = i.map(function (n) { return Math.floor(n / 2) }), u = i.map(function (n, t) { return n - r[t] }); return i.map(function (n, t) { return [r[t], u[t]] }) }([s.filterHeight, s.filterWidth], h) : [[0, 0], [0, 0]]; var v = 1 === h[0] && 1 === h[1], w = function (n, t, i) { var r = i.map(function (n) { return n[0] }), u = i.map(function (n) { return n[1] }), e = n.concat(r, u), f = t.map(function (n, t) { return (n - e[t] % n) % n }), o = u.map(function (n, t) { return n + f[t] }), s = t.map(function (n, t) { return [r[t], o[t]] }), h = t.map(function (n, t) { return [0, f[t]] }); return [s, h] }([s.inHeight, s.inWidth], h, p), g = w[0], nt = w[1], b = v ? f : "valid", k = v ? a : bp(a, h, g), d = ("avg" === u ? function () { return clt(k, r, o, 1, b) } : function () { return hlt(k, r, o, 1, b) })(), l = v ? d : yp(d, h, nt); return y ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l } }), alt = u({ maxPool3d_: function (n, u, f, e, o, s, h) { var y, a; void 0 === s && (s = "NDHWC"); var c = t(n, "x", "maxPool3d"), l = c, v = !1; return 4 === c.rank && (v = !0, l = c.as5D(1, c.shape[0], c.shape[1], c.shape[2], c.shape[3])), null == h && (h = [1, 1, 1]), i(5 === l.rank, function () { return "Error in maxPool3d: x must be rank 5 but got rank " + l.rank + "." }), i("NDHWC" === s, function () { return "Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of " + s }), i(pi(f, h), function () { return "Error in maxPool3d: Either strides or dilations must be 1. Got strides " + f + " and dilations '" + h + "'" }), null != o && i(lt(e), function () { return "Error in maxPool3d: pad must be an integer when using, dimRoundingMode " + o + " but got pad " + e + "." }), y = gs(l.shape, u, f, h, e, o, s), a = r.runKernelFunc(function (n, t) { var i = n.maxPool3d(l, y); return t([l, i]), i }, { x: l }, function (n, s) { var c = s[0], l = s[1]; return { x: function () { return function (n, u, f, e, o, s, h, c) { var v = t(n, "dy", "maxPool3dBackprop"), l = t(u, "input", "maxPool3dBackprop"), y = t(f, "output", "maxPool3dBackprop"), w = v, p = l, b = y, k = !1, d, a; return (4 === l.rank && (k = !0, w = v.as5D(1, v.shape[0], v.shape[1], v.shape[2], v.shape[3]), p = l.as5D(1, l.shape[0], l.shape[1], l.shape[2], l.shape[3]), b = y.as5D(1, y.shape[0], y.shape[1], y.shape[2], y.shape[3])), i(5 === w.rank, function () { return "Error in maxPool3dBackprop: dy must be rank 5 but got rank " + w.rank + "." }), i(5 === p.rank, function () { return "Error in maxPool3dBackprop: input must be rank 5 but got rank " + p.rank + "." }), i(5 === b.rank, function () { return "Error in maxPool3dBackprop: output must be rank 5 but got rank " + b.rank + "." }), null == s && (s = [1, 1, 1]), i(pi(o, s), function () { return "Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides " + o + " and dilations '" + s + "'" }), null != c && i(lt(h), function () { return "Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode " + c + " but got pad " + h + "." }), d = gs(p.shape, e, o, s, h, c), a = r.runKernelFunc(function (n) { return n.maxPool3dBackprop(w, p, b, d) }, { dy5D: w, input5D: p }), k) ? a.as4D(a.shape[1], a.shape[2], a.shape[3], a.shape[4]) : a }(n, c, l, u, f, h, e, o) } } }), v ? a.as4D(a.shape[1], a.shape[2], a.shape[3], a.shape[4]) : a } }), vlt = u({ avgPool3d_: function (n, u, f, e, o, s, h) { var y, c; void 0 === s && (s = "NDHWC"); var a = t(n, "x", "avgPool3d", "float32"), l = a, v = !1; return 4 === a.rank && (v = !0, l = a.as5D(1, a.shape[0], a.shape[1], a.shape[2], a.shape[3])), null == h && (h = [1, 1, 1]), i(5 === l.rank, function () { return "Error in avgPool3d: x must be rank 5 but got rank " + l.rank + "." }), i("NDHWC" === s, function () { return "Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of " + s }), i(pi(f, h), function () { return "Error in avgPool3d: Either strides or dilations must be 1. Got strides " + f + " and dilations '" + h + "'" }), null != o && i(lt(e), function () { return "Error in avgPool3d: pad must be an integer when using, dimRoundingMode " + o + " but got pad " + e + "." }), y = gs(l.shape, u, f, h, e, o, s), c = r.runKernelFunc(function (n) { return n.avgPool3d(l, y) }, { x: l }, function (n) { return { x: function () { return function (n, u, f, e, o, s, h) { var a = t(n, "dy", "avgPool3dBackprop"), c = t(u, "input", "avgPool3dBackprop"), y = a, v = c, p = !1, w, l; return (4 === c.rank && (p = !0, y = a.as5D(1, a.shape[0], a.shape[1], a.shape[2], a.shape[3]), v = c.as5D(1, c.shape[0], c.shape[1], c.shape[2], c.shape[3])), i(5 === y.rank, function () { return "Error in avgPool3dBackprop: dy must be rank 5 but got rank " + y.rank + "." }), i(5 === v.rank, function () { return "Error in avgPool3dBackprop: input must be rank 5 but got rank " + v.rank + "." }), null == o && (o = [1, 1, 1]), i(pi(e, o), function () { return "Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides " + e + " and dilations '" + o + "'" }), null != h && i(lt(s), function () { return "Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode " + h + " but got pad " + s + "." }), w = gs(v.shape, f, e, o, s, h), l = r.runKernelFunc(function (n) { return n.avgPool3dBackprop(y, v, w) }, { dy5D: y, input5D: v }), p) ? l.as4D(l.shape[1], l.shape[2], l.shape[3], l.shape[4]) : l }(n, l, u, f, h, e, o) } } }), c = c.cast(l.dtype), v ? c.as4D(c.shape[1], c.shape[2], c.shape[3], c.shape[4]) : c } }), br = u({ slice_: function (n, u, f) { var o, s, e = t(n, "x", "slice"), h, c; if (0 === e.rank) throw new Error("Slicing scalar is not possible"); return (o = "number" == typeof u ? [u].concat(new Array(e.rank - 1).fill(0)) : u.length < e.rank ? u.concat(new Array(e.rank - u.length).fill(0)) : u.slice()).forEach(function (n) { i(-1 !== n, function () { return "slice() does not support negative begin indexing." }) }), s = (s = null == f ? new Array(e.rank).fill(-1) : "number" == typeof f ? [f].concat(new Array(e.rank - 1).fill(-1)) : f.length < e.rank ? f.concat(new Array(e.rank - f.length).fill(-1)) : f).map(function (n, t) { return n >= 0 ? n : (i(-1 === n, function () { return "Negative size values should be exactly -1 but got " + n + " for the slice() size at index " + t + "." }), e.shape[t] - o[t]) }), yut(e, o, s), h = e.shape, c = { begin: o, size: s }, r.runKernelFunc(function (n) { return n.slice(e, o, s) }, { x: e }, function (n) { for (var i = [], t = 0; t < n.rank; t++)i.push([o[t], h[t] - o[t] - s[t]]); return { x: function () { return n.pad(i) } } }, "Slice", c) } }), ylt = u({ slice1d_: function (n, r, u) { var f = t(n, "x", "slice1d"); return i(1 === f.rank, function () { return "slice1d expects a rank-1 tensor, but got a rank-" + f.rank + " tensor" }), br(f, [r], [u]) } }), plt = u({ slice2d_: function (n, r, u) { var f = t(n, "x", "slice2d"); return i(2 === f.rank, function () { return "slice2d expects a rank-2 tensor, but got a rank-" + f.rank + " tensor" }), br(f, r, u) } }), wb = u({ slice3d_: function (n, r, u) { var f = t(n, "x", "slice3d"); return i(3 === f.rank, function () { return "slice3d expects a rank-3 tensor, but got a rank-" + f.rank + " tensor" }), br(f, r, u) } }), wlt = u({ slice4d_: function (n, r, u) { var f = t(n, "x", "slice4d"); return i(4 === f.rank, function () { return "slice4d expects a rank-4 tensor, but got a rank-" + f.rank + " tensor" }), br(f, r, u) } }); var klt = u({ all_: function (n, i, u) { var o, c; void 0 === i && (i = null); void 0 === u && (u = !1); var f = t(n, "x", "all", "bool"), s = pt(i, f.shape), e = s, h = ar(e, f.rank); return (null != h && (f = f.transpose(h), e = vr(e.length, f.rank)), o = r.runKernelFunc(function (n) { return n.all(f, e) }, { $x: f }), u) ? (c = vi(o.shape, s), o.reshape(c)) : o } }), dlt = u({ any_: function (n, i, u) { var o, c; void 0 === i && (i = null); void 0 === u && (u = !1); var f = t(n, "x", "any", "bool"), s = pt(i, f.shape), e = s, h = ar(e, f.rank); return (null != h && (f = f.transpose(h), e = vr(e.length, f.rank)), o = r.runKernelFunc(function (n) { return n.any(f, e) }, { $x: f }), u) ? (c = vi(o.shape, s), o.reshape(c)) : o } }), glt = u({ argMax_: function (n, i) { var u, f, e, o, s; return void 0 === i && (i = 0), u = t(n, "x", "argMax"), null == i && (i = 0), f = pt(i, u.shape), e = ar(f, u.rank), null != e && (u = u.transpose(e), f = vr(f.length, u.rank)), o = { axis: f[0] }, s = [u], r.runKernelFunc(function (n, t) { var i = n.argMax(u, f[0]); return t([u]), i }, { x: u }, function (n, t) { var i = t[0]; return { x: function () { return it(i) } } }, "ArgMax", o, s) } }), nat = u({ argMin_: function (n, i) { var u, f, e; return void 0 === i && (i = 0), u = t(n, "x", "argMin"), null == i && (i = 0), f = pt(i, u.shape), e = ar(f, u.rank), null != e && (u = u.transpose(e), f = vr(f.length, u.rank)), r.runKernelFunc(function (n, t) { var i = n.argMin(u, f[0]); return t([u]), i }, { $x: u }, function (n, t) { var i = t[0]; return { $x: function () { return it(i) } } }) } }), tat = u({ logSumExp_: function (n, i, r) { var h; void 0 === i && (i = null); void 0 === r && (r = !1); var u = t(n, "x", "logSumExp"), f = pt(i, u.shape), o = u.max(f, !0), s = u.sub(o).exp().sum(f).log(), e = o.reshape(s.shape).add(s); return r ? (h = vi(e.shape, f), e.reshape(h)) : e } }), lh = u({ max_: function (n, i, u) { var c, o, l; void 0 === i && (i = null); void 0 === u && (u = !1); var f = t(n, "x", "max"), a = f, s = pt(i, f.shape), e = s, h = ar(e, f.rank); return null != h && (f = f.transpose(h), e = vr(e.length, f.rank)), c = [f], o = r.runKernelFunc(function (n, t) { var i = n.max(f, e); return t([a, i]), i }, { x: f }, function (n, t) { return blt(n, t[1], t[0], s, h) }, "Max", { axes: e }, c, [!0]), u && (l = vi(o.shape, s), o = o.reshape(l)), o } }), iat = u({ mean_: function (n, i, r) { void 0 === i && (i = null); void 0 === r && (r = !1); var u = t(n, "x", "mean"), f = pt(i, u.shape), e = w(oi(u.shape, f)[1]); return ds(function (n) { var t = h(e); return { value: (t.dtype === n.dtype ? n : n.cast(t.dtype)).div(t).sum(i, r), gradFunc: function (t) { var i = n.shape.slice(); return f.forEach(function (n) { i[n] = 1 }), t.reshape(i).mul(fe(n.shape, "float32")).div(e) } } })(u) } }), rat = u({ min_: function (n, i, u) { var c, o, l; void 0 === i && (i = null); void 0 === u && (u = !1); var f = t(n, "x", "min"), a = f, s = pt(i, f.shape), e = s, h = ar(e, f.rank); return null != h && (f = f.transpose(h), e = vr(e.length, f.rank)), c = [f], o = r.runKernelFunc(function (n, t) { var i = n.min(f, e); return t([a, i]), i }, { x: f }, function (n, t) { return blt(n, t[1], t[0], s, h) }, "Min", { axes: e }, c, [!0]), u && (l = vi(o.shape, s), o = o.reshape(l)), o } }), uat = u({ moments_: function (n, i, r) { var o; void 0 === i && (i = null); void 0 === r && (r = !1); var f = pt(i, (n = t(n, "x", "moments")).shape), u = n.mean(f, r), e = u.shape; return r || (e = vi(u.shape, f)), o = n.toFloat().sub(u.reshape(e)).square(), { mean: u, variance: o.mean(f, r) } } }), bb = u({ sum_: function (n, i, u) { var f, e; return void 0 === i && (i = null), void 0 === u && (u = !1), f = t(n, "x", "sum"), "bool" === f.dtype && (f = f.toInt()), e = pt(i, f.shape), ds(function (n) { var o = ar(e, n.rank), t = e, f = n, h; null != o && (f = n.transpose(o), t = vr(t.length, n.rank)); var s = function (t) { var i = n.shape.slice(); return e.forEach(function (n) { i[n] = 1 }), t.reshape(i).mul(fe(n.shape, "float32")) }, c = { axes: t }, i = r.runKernelFunc(function (n) { return n.sum(f, t) }, { x: f }, function (n) { return { x: function () { return s(n) } } }, "Sum", c); return u && (h = vi(i.shape, e), i = i.reshape(h)), { value: i, gradFunc: s } })(f) } }), fat = u({ prod_: function (n, i, u) { var f, e, l; void 0 === i && (i = null); void 0 === u && (u = !1); f = t(n, "x", "prod"); "bool" === f.dtype && (f = f.toInt()); var o = pt(i, f.shape), c = ar(o, f.rank), s = o, h = f; return null != c && (h = f.transpose(c), s = vr(s.length, f.rank)), e = r.runKernelFunc(function (n) { return n.prod(h, s) }, { permutedX: h }), u && (l = vi(e.shape, o), e = e.reshape(l)), e } }), kb = u({ elu_: function (n) { var i = t(n, "x", "elu"); return r.runKernelFunc(function (n, t) { var r = n.elu(i); return t([r]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { return r.runKernelFunc(function (t) { return t.eluDer(n, i) }, { dy: n, y: i }) } } }) } }), eat = u({ leakyRelu_: function (n, i) { void 0 === i && (i = .2); var r = t(n, "x", "leakyRelu"); return na(h(i).mul(r), r) } }), db = u({ prelu_: function (n, i) { var u = t(n, "x", "prelu"), f = t(i, "alpha", "prelu"); return r.runKernelFunc(function (n, t) { var i = n.prelu(u, f); return t([u, f]), i }, { x: u, alpha: f }, function (n, t) { var r = t[0], i = t[1], u = r.greater(0); return { x: function () { return af(u, n, n.mul(i)) }, alpha: function () { var t = af(u, it(n), n.mul(r)), f = kt(i.shape, n.shape); return f.length > 0 && (t = t.sum(f)), t.reshape(i.shape) } } }, "Prelu") } }), ct = u({ relu_: function (n) { var i = t(n, "x", "relu"); return "bool" === i.dtype ? i.toInt() : r.runKernelFunc(function (n, t) { var r = n.relu(i); return t([i]), r }, { x: i }, function (n, t) { var i = t[0]; return { x: function () { return n.mulStrict(i.step().toFloat()) } } }, "Relu") } }), gb = u({ relu6_: function (n) { var i = t(n, "x", "relu6"); return "bool" === i.dtype ? i.toInt() : r.runKernelFunc(function (n, t) { var r = n.relu6(i); return t([i]), r }, { x: i }, function (n, t) { var i = t[0], r = i.lessEqual(6).mul(i.step()); return { x: function () { return n.mulStrict(r.toFloat()) } } }, "Relu6") } }), oat = u({ selu_: function (n) { var i = t(n, "x", "selu"); return r.runKernelFunc(function (n, t) { var r = n.selu(i); return t([i]), r }, { $x: i }, function (n, t) { var i = t[0]; return { $x: function () { var t = i.greater(h(0)), r = h(nb), u = h(tb), f = n.mul(u), e = n.mul(r).mul(i.toFloat().exp()); return af(t, f, e) } } }) } }), yu = u({ transpose_: function (n, u) { var f = t(n, "x", "transpose"), e; return (null == u && (u = f.shape.map(function (n, t) { return t }).reverse()), i(f.rank === u.length, function () { return "Error in transpose: rank of input " + f.rank + " must match length of perm " + u + "." }), u.forEach(function (n) { i(n >= 0 && n < f.rank, function () { return "All entries in 'perm' must be between 0 and " + (f.rank - 1) + " but got " + u }) }), f.rank <= 1) ? f.clone() : (e = { perm: u }, r.runKernelFunc(function (n) { return n.transpose(f, u) }, { x: f }, function (n) { var t = dc(u); return { x: function () { return n.transpose(t) } } }, "Transpose", e)) } }), sat = u({ localResponseNormalization_: function (n, u, f, e, o) { var s, c, l, h; return void 0 === u && (u = 5), void 0 === f && (f = 1), void 0 === e && (e = 1), void 0 === o && (o = .5), s = t(n, "x", "localResponseNormalization"), i(4 === s.rank || 3 === s.rank, function () { return "Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank " + s.rank + "." }), i(lt(u), function () { return "Error in localResponseNormalization: depthRadius must be an integer but got depthRadius " + u + "." }), c = s, l = !1, 3 === s.rank && (l = !0, c = s.as4D(1, s.shape[0], s.shape[1], s.shape[2])), h = r.runKernelFunc(function (n, t) { var i = n.localResponseNormalization4D(c, u, f, e, o); return t([c, i]), i }, { x4D: c }, function (n, t) { var i = t[0], s = t[1]; return { x4D: function () { return r.runKernelFunc(function (t) { return t.LRNGrad(n, i, s, u, f, e, o) }, {}) } } }), l ? h.as3D(h.shape[1], h.shape[2], h.shape[3]) : h } }), nk = u({ norm_: function (n, i, r, u) { var f, e, o; return void 0 === i && (i = "euclidean"), void 0 === r && (r = null), void 0 === u && (u = !1), f = function n(t, i, r) { if (void 0 === r && (r = null), 0 === t.rank) return t.abs(); if (1 !== t.rank && null === r) return n(t.reshape([-1]), i, r); if (1 === t.rank || "number" == typeof r || Array.isArray(r) && 1 === r.length) { if (1 === i) return t.abs().sum(r); if (i === 1 / 0) return t.abs().max(r); if (i === -1 / 0) return t.abs().min(r); if ("euclidean" === i || 2 === i) return t.abs().pow(h(2, "int32")).sum(r).sqrt(); throw new Error("Error in norm: invalid ord value: " + i); } if (Array.isArray(r) && 2 === r.length) { if (1 === i) return t.abs().sum(r[0]).max(r[1] - 1); if (i === 1 / 0) return t.abs().sum(r[1]).max(r[0]); if (i === -1 / 0) return t.abs().sum(r[1]).min(r[0]); if ("fro" === i || "euclidean" === i) return t.square().sum(r).sqrt(); throw new Error("Error in norm: invalid ord value: " + i); } throw new Error("Error in norm: invalid axis: " + r); }(n = t(n, "x", "norm"), i, r), e = f.shape, u && (o = pt(r, n.shape), e = vi(f.shape, o)), f.reshape(e) } }), hat = u({ basicLSTMCell_: function (n, i, r, u, f, e) { var l = t(n, "forgetBias", "basicLSTMCell"), a = t(i, "lstmKernel", "basicLSTMCell"), v = t(r, "lstmBias", "basicLSTMCell"), y = t(u, "data", "basicLSTMCell"), p = t(f, "c", "basicLSTMCell"), w = t(e, "h", "basicLSTMCell"), o = y.concat(w, 1).matMul(a).add(v), b = o.shape[0], s = o.shape[1] / 4, h = [b, s], k = o.slice([0, 0], h), d = o.slice([0, s], h), g = o.slice([0, 2 * s], h), nt = o.slice([0, 3 * s], h), c = k.sigmoid().mulStrict(d.tanh()).addStrict(p.mulStrict(l.add(g).sigmoid())), tt = c.tanh().mulStrict(nt.sigmoid()); return [c, tt] } }), cat = u({ multiRNNCell_: function (n, i, r, u) { for (var o, s, h, l = t(i, "data", "multiRNNCell"), a = ws(r, "c", "multiRNNCell"), v = ws(u, "h", "multiRNNCell"), c = l, e = [], f = 0; f < n.length; f++)o = n[f](c, a[f], v[f]), e.push(o[0]), e.push(o[1]), c = o[1]; for (s = [], h = [], f = 0; f < e.length; f += 2)s.push(e[f]), h.push(e[f + 1]); return [s, h] } }), lat = u({ movingAverage_: function (n, r, u, f, e) { var v; void 0 === e && (e = !0); var o = t(n, "v", "movingAverage"), s = t(r, "x", "movingAverage"), l = t(u, "decay", "movingAverage"); ltt(o, s); i(yt(o.shape, s.shape), function () { return "Shape mismatch in v and x" }); var a = h(1), y = a.sub(l), c = s.sub(o).mul(y); return e && (i(null != f, function () { return "When using zeroDebias: true, step is required." }), v = t(f, "step", "movingAverage"), c = c.div(a.sub(sh(l, v)))), o.add(c) } }), aat = u({ stridedSlice_: function (n, i, u, f, e, o, s, h, c) { var a, v, y, p; if (void 0 === e && (e = 0), void 0 === o && (o = 0), void 0 === s && (s = 0), void 0 === h && (h = 0), void 0 === c && (c = 0), null == f && (f = new Array(i.length)), 0 !== s) throw new Error("ellipsis mask is not yet supported"); var l = t(n, "x", "stridedSlice"), b = gp(h), w = l.shape.slice(); for (b.forEach(function (n) { i[n] = 0; u[n] = 1; w.splice(n, 0, 1) }), l = l.reshape(w), a = 0; a < l.rank; a++)i[a] = put(e, i, f, l.shape, a), u[a] = wut(o, u, f, l.shape, a), f[a] = f[a] || 1; return v = gp(c), v.forEach(function (n) { u[n] = i[n] + 1; f[n] = 1 }), y = sl(i, u, f), p = y.filter(function (n, t) { return -1 === v.indexOf(t) }), f.every(function (n) { return 1 === n }) ? br(l, i, y).reshape(p) : r.runKernelFunc(function (n) { return n.stridedSlice(l, i, u, f) }, { $x: l }).reshape(p) } }), vat = u({ topk_: function (n, i, u) { var f, e, o; if (void 0 === i && (i = 1), void 0 === u && (u = !0), f = t(n, "x", "topk"), 0 === f.rank) throw new Error("topk() expects the input to be of rank 1 or higher"); if (e = f.shape[f.shape.length - 1], i > e) throw new Error("'k' passed to topk() must be <= the last dimension (" + e + ") but got " + i); return o = r.runKernelFunc(function (n) { return n.topk(f, i, u) }, { $x: f }), { values: o[0], indices: o[1] } } }), yat = u({ scatterND_: function (n, i, u) { var f = t(n, "indices", "scatterND", "int32"), e = t(i, "updates", "scatterND"); return aut(e, f, u), r.runKernelFunc(function (n) { return n.scatterND(f, e, u) }, { indices: f, updates: e }, null, "ScatterNd", { shape: u }) } }), ra = u({ fft_: function (n) { i("complex64" === n.dtype, function () { return "The dtype for tf.spectral.fft() must be complex64 but got " + n.dtype + "." }); var t = n.shape[n.shape.length - 1], u = n.size / t, f = n.as2D(u, t); return r.runKernelFunc(function (n) { return n.fft(f) }, { input: n }).reshape(n.shape) } }), ah = u({ ifft_: function (n) { i("complex64" === n.dtype, function () { return "The dtype for tf.spectral.ifft() must be complex64 but got " + n.dtype + "." }); var t = n.shape[n.shape.length - 1], u = n.size / t, f = n.as2D(u, t); return r.runKernelFunc(function (n) { return n.ifft(f) }, { input: n }).reshape(n.shape) } }), ua = u({ rfft_: function (n, t) { var u, r, s, h, e, o; i("float32" === n.dtype, function () { return "The dtype for rfft() must be real value but got " + n.dtype }); r = n.shape[n.shape.length - 1]; s = n.size / r; null != t && t < r ? (h = n.shape.map(function () { return 0 }), e = n.shape.map(function (n) { return n }), e[n.shape.length - 1] = t, u = n.slice(h, e), r = t) : null != t && t > r ? (o = n.shape.map(function (n) { return n }), o[n.shape.length - 1] = t - r, u = n.concat(ot(o), n.shape.length - 1), r = t) : u = n; var y = u.zerosLike(), p = ui(u, y).as2D(s, r), c = ra(p), f = Math.floor(r / 2) + 1, l = ir(c), a = yr(c), w = l.split([f, r - f], l.shape.length - 1), b = a.split([f, r - f], a.shape.length - 1), v = u.shape.slice(); return v[u.shape.length - 1] = f, ui(w[0], b[0]).reshape(v) } }), tk = u({ irfft_: function (n) { var t = n.shape[n.shape.length - 1], i = n.size / t, r, u; if (t <= 2) return r = n.as2D(i, t), u = ah(r), ir(u); var f = [i, 2 * (t - 1)], e = ir(n).as2D(i, t), o = yr(n).as2D(i, t), s = e.slice([0, 1], [i, t - 2]).reverse(1), c = o.slice([0, 1], [i, t - 2]).reverse(1).mul(h(-1)), l = e.concat(s, 1), a = o.concat(c, 1); return r = ui(l, a).as2D(f[0], f[1]), u = ah(r), ir(u) } }), pat = Object.freeze({ fft: ra, ifft: ah, rfft: ua, irfft: tk }), wat = u({ sparseToDense_: function (n, i, u, f) { void 0 === f && (f = 0); var o = t(n, "sparseIndices", "sparseToDense", "int32"), e = t(i, "sparseValues", "sparseToDense"), s = t(f, "defaultValue", "sparseToDense", e.dtype); return function (n, t, i, r) { var u, f, e; if ("int32" !== n.dtype) throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was " + n.dtype + "."); if (n.rank > 2) throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape " + n.shape + "."); if (u = n.rank > 0 ? n.shape[0] : 1, f = n.rank > 1 ? n.shape[1] : 1, i.length !== f) throw new Error("outputShape has incorrect number of elements:, " + i.length + ", should be: " + f + "."); if (e = t.size, 0 !== t.rank && (1 !== t.rank || e !== u)) throw new Error("sparseValues has incorrect shape " + t.shape + ", should be [] or [" + u + "]"); if (t.dtype !== r.dtype) throw new Error("sparseValues.dtype must match defaultValues.dtype"); }(o, e, u, s), r.runKernelFunc(function (n) { return n.sparseToDense(o, e, u, s) }, { $sparseIndices: o, $sparseValues: e, $defaultValue: s }) } }), bat = u({ gatherND_: function (n, i) { var u = t(i, "indices", "gatherND", "int32"), f = t(n, "x", "gatherND"); return r.runKernelFunc(function (n) { return n.gatherND(f, u) }, { x: f, indices: u }, null, "GatherNd") } }), kat = u({ diag_: function (n) { var i = t(n, "x", "diag").flatten(), u = n.shape.concat(n.shape); return r.runKernelFunc(function (n) { return n.diag(i) }, { $x: i }).reshape(u) } }), dat = u({ dropout_: function (n, r, u, f) { var e = t(n, "x", "dropout"); if (i("float32" === e.dtype, function () { return "x has to be a floating point tensor since it's going to be scaled, but got a " + e.dtype + " tensor instead." }), i(r >= 0 && r < 1, function () { return "rate must be a float in the range [0, 1), but got " + r + "." }), 0 === r) return n instanceof et ? e.clone() : e; var s = function (n, t) { if (null == t) return n.shape.slice(); if (yt(n.shape, t)) return t; if (n.shape.length === t.length) { for (var r = [], i = 0; i < n.shape.length; i++)null == t[i] && null != n.shape[i] ? r.push(n.shape[i]) : r.push(t[i]); return r } return t }(e, u), o = 1 - r, h = wp(s, 0, 1, "float32", f).add(o).floor().div(o); return e.mul(h) } }); var fa = u({ hannWindow_: function (n) { return gat(n, .5, .5) } }), ik = u({ hammingWindow_: function (n) { return gat(n, .54, .46) } }), ea = u({ frame_: function (n, t, i, r, u) { var f, e, o, s; for (void 0 === r && (r = !1), void 0 === u && (u = 0), f = 0, e = []; f + t <= n.size;)e.push(br(n, f, t)), f += i; if (r) for (; f < n.size;)o = f + t - n.size, s = wt([br(n, f, t - o), pr([o], u)]), e.push(s), f += i; return 0 === e.length ? lu([], [0, t]) : wt(e).as2D(e.length, t) } }), rk = u({ stft_: function (n, t, i, r, u) { var e; void 0 === u && (u = fa); null == r && (e = t, r = Math.floor(Math.pow(2, Math.ceil(Math.log(e) / Math.log(2))))); for (var o = ea(n, t, i), h = si(o, u(t)), s = [], f = 0; f < o.shape[0]; f++)s.push(ua(h.slice([f, 0], [1, t]), r)); return wt(s) } }), nvt = Object.freeze({ hannWindow: fa, hammingWindow: ik, frame: ea, stft: rk }), hi, tvt = function (n, r, u) { return void 0 === u && (u = 1), y(this, void 0, void 0, function () { var f, o, h, a, k, v, d, y, c, s, w, b, l, e; return p(this, function (p) { switch (p.label) { case 0: return f = t(n, "predictions", "inTopK"), o = t(r, "targets", "inTopK"), i(f.rank > 1, function () { return "inTopK() expects the predictions to be of rank 2 or higher, but got " + f.rank }), i(f.rank - 1 === o.rank, function () { return "predictions rank should be 1 larger than targets rank, but got predictions rank " + f.rank + " and targets rank " + o.rank }), rt(f.shape.slice(0, f.shape.length - 1), o.shape, "predictions's shape should be align with the targets' shape, except the last dimension."), h = f.shape[f.shape.length - 1], i(u > 0 && u <= h, function () { return "'k' passed to inTopK() must be > 0 && <= the predictions last dimension (" + h + "), but got " + u }), [4, f.data()]; case 1: return a = p.sent(), [4, o.data()]; case 2: for (k = p.sent(), v = [a.length / h, h], y = v[1], c = ke("bool", d = v[0]), s = 0; s < d; s++) { for (w = s * y, b = a.subarray(w, w + y), l = [], e = 0; e < b.length; e++)l.push({ value: b[e], index: e }); for (l.sort(function (n, t) { return t.value - n.value }), c[s] = 0, e = 0; e < u; e++)if (l[e].index === k[s]) { c[s] = 1; break } } return n !== f && f.dispose(), r !== o && o.dispose(), [2, fi(c, o.shape, "bool")] } }) }) }; !function (n) { n[n.NONE = 0] = "NONE"; n[n.MEAN = 1] = "MEAN"; n[n.SUM = 2] = "SUM"; n[n.SUM_BY_NONZERO_WEIGHTS = 3] = "SUM_BY_NONZERO_WEIGHTS" }(hi || (hi = {})); var iii = u({ absoluteDifference_: function (n, i, r, u) { var s; void 0 === u && (u = hi.SUM_BY_NONZERO_WEIGHTS); var f = t(n, "labels", "absoluteDifference"), e = t(i, "predictions", "absoluteDifference"), o = null; return null != r && (o = t(r, "weights", "absoluteDifference")), rt(f.shape, e.shape, "Error in absoluteDifference: "), s = f.sub(e).abs(), pu(s, o, u) } }), pu = u({ computeWeightedLoss_: function (n, i, r) { var e, u, f, o, s, c; if (void 0 === r && (r = hi.SUM_BY_NONZERO_WEIGHTS), e = t(n, "losses", "computeWeightedLoss"), u = null, null != i && (u = t(i, "weights", "computeWeightedLoss")), f = null == u ? e : e.mul(u), r === hi.NONE) return f; if (r === hi.SUM) return f.sum(); if (r === hi.MEAN) return null == u ? f.mean() : (o = e.size / u.size, s = f.sum().div(u.sum()), o > 1 ? s.div(h(o)) : s); if (r === hi.SUM_BY_NONZERO_WEIGHTS) return null == u ? f.sum().div(h(e.size)) : (c = u.mul(fe(e.shape)).notEqual(h(0)).sum().toFloat(), f.sum().div(c)); throw Error("Unknown reduction: " + r); } }), rii = u({ cosineDistance_: function (n, i, r, u, f) { var c; void 0 === f && (f = hi.SUM_BY_NONZERO_WEIGHTS); var e = t(n, "labels", "cosineDistance"), o = t(i, "predictions", "cosineDistance"), s = null; return null != u && (s = t(u, "weights", "cosineDistance")), rt(e.shape, o.shape, "Error in cosineDistance: "), c = h(1).sub(e.mul(o).sum(r, !0)), pu(c, s, f) } }), uii = u({ hingeLoss_: function (n, i, r, u) { var e, c; void 0 === u && (u = hi.SUM_BY_NONZERO_WEIGHTS); var f = t(n, "labels", "hingeLoss"), o = t(i, "predictions", "hingeLoss"), s = null; return null != r && (s = t(r, "weights", "hingeLoss")), rt(f.shape, o.shape, "Error in hingeLoss: "), e = h(1), f = h(2).mul(f).sub(e), c = e.sub(f.mul(o)).relu(), pu(c, s, u) } }), fii = u({ huberLoss_: function (n, i, r, u, f) { void 0 === u && (u = 1); void 0 === f && (f = hi.SUM_BY_NONZERO_WEIGHTS); var e = t(n, "labels", "huberLoss"), o = t(i, "predictions", "huberLoss"), s = null; null != r && (s = t(r, "weights", "huberLoss")); rt(e.shape, o.shape, "Error in huberLoss: "); var c = h(u), l = o.sub(e).abs(), a = cb(l, c), v = l.sub(a), y = h(.5).mul(a.square()).add(c.mul(v)); return pu(y, s, f) } }), eii = u({ logLoss_: function (n, i, r, u, f) { void 0 === u && (u = 1e-7); void 0 === f && (f = hi.SUM_BY_NONZERO_WEIGHTS); var e = t(n, "labels", "logLoss"), o = t(i, "predictions", "logLoss"), s = null; null != r && (s = t(r, "weights", "logLoss")); rt(e.shape, o.shape, "Error in logLoss: "); var c = h(1), l = h(u), a = e.mul(o.add(l).log()).neg().sub(c.sub(e).mul(c.sub(o).add(l).log())); return pu(a, s, f) } }), oii = u({ meanSquaredError_: function (n, i, r, u) { var s; void 0 === u && (u = hi.SUM_BY_NONZERO_WEIGHTS); var f = t(n, "labels", "meanSquaredError"), e = t(i, "predictions", "meanSquaredError"), o = null; return null != r && (o = t(r, "weights", "meanSquaredError")), rt(f.shape, e.shape, "Error in meanSquaredError: "), s = f.squaredDifference(e), pu(s, o, u) } }), sii = u({ sigmoidCrossEntropy_: function (n, i, r, u, f) { var l; void 0 === u && (u = 0); void 0 === f && (f = hi.SUM_BY_NONZERO_WEIGHTS); var e = t(n, "multiClassLabels", "sigmoidCrossEntropy"), o = t(i, "logits", "sigmoidCrossEntropy"), s = null; if (null != r && (s = t(r, "weights", "sigmoidCrossEntropy")), rt(e.shape, o.shape, "Error in sigmoidCrossEntropy: "), u > 0) { var c = h(u), a = h(1), v = h(.5); e = e.mul(a.sub(c)).add(v.mul(c)) } return l = function (n, i) { var u = t(n, "labels", "sigmoidCrossEntropyWithLogits"), r = t(i, "logits", "sigmoidCrossEntropyWithLogits"); rt(u.shape, r.shape, "Error in sigmoidCrossEntropyWithLogits: "); var f = r.relu(), e = r.mul(u), o = r.abs().neg().exp().log1p(); return f.sub(e).add(o) }(e, o), pu(l, s, f) } }), hii = u({ softmaxCrossEntropy_: function (n, i, r, u, f) { var l; void 0 === u && (u = 0); void 0 === f && (f = hi.SUM_BY_NONZERO_WEIGHTS); var e = t(n, "onehotLabels", "softmaxCrossEntropy"), o = t(i, "logits", "softmaxCrossEntropy"), s = null; if (null != r && (s = t(r, "weights", "softmaxCrossEntropy")), rt(e.shape, o.shape, "Error in softmaxCrossEntropy: "), u > 0) { var c = h(u), a = h(1), v = h(e.shape[1]); e = e.mul(a.sub(c)).add(c.div(v)) } return l = function (n, t, i) { if (void 0 === i && (i = -1), -1 === i && (i = t.rank - 1), i !== t.rank - 1) throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank " + t.rank + " and dim was " + i); return ds(function (n, t, r) { var f = t.logSumExp([i], !0), u = t.toFloat().sub(f); return r([n, u]), { value: u.mul(n).neg().sum([i]), gradFunc: function (n, t) { var r = t[0], u = t[1], f = vi(n.shape, [i]); return [n.reshape(f).mul(r.toFloat().sub(u.exp())), n.reshape(f).mul(u.exp().sub(r.toFloat()))] } } })(n, t) }(e, o), pu(l, s, f) } }), ivt = Object.freeze({ get Reduction() { return hi }, absoluteDifference: iii, computeWeightedLoss: pu, cosineDistance: rii, hingeLoss: uii, huberLoss: fii, logLoss: eii, meanSquaredError: oii, sigmoidCrossEntropy: sii, softmaxCrossEntropy: hii }); var cii = u({ bandPart_: function (n, i, r) { var u; if (i % 1 != 0) throw new Error("bandPart(): numLower must be an integer, got " + i + "."); if (r % 1 != 0) throw new Error("bandPart(): numUpper must be an integer, got " + r + "."); if (u = t(n, "a", "bandPart"), u.rank < 2) throw new Error("bandPart(): Rank must be at least 2, got " + u.rank + "."); var c = u.shape, o = u.shape.slice(-2), f = o[0], e = o[1]; if (!(i <= f)) throw new Error("bandPart(): numLower (" + i + ") must not be greater than the number of rows (" + f + ")."); if (!(r <= e)) throw new Error("bandPart(): numUpper (" + r + ") must not be greater than the number of columns (" + e + ")."); i < 0 && (i = f); r < 0 && (r = e); var l = bs(0, f, 1, "int32").reshape([-1, 1]), a = bs(0, e, 1, "int32"), s = dt(l, a), v = oh(s.lessEqual(h(+i, "int32")), s.greaterEqual(h(-r, "int32"))), y = ot([f, e], u.dtype); return bi(bt(u.reshape([-1, f, e])).map(function (n) { return af(v, n, y) })).reshape(c) } }), lii = u({ gramSchmidt_: function (n) { var f; if (Array.isArray(n)) { f = !1; i(null != n && n.length > 0, function () { return "Gram-Schmidt process: input must not be null, undefined, or empty" }); for (var e = n[0].shape[0], o = function (t) { i(n[t].shape[0] === e, function () { return "Gram-Schmidt: Non-unique lengths found in the input vectors: (" + n[t].shape[0] + " vs. " + e + ")" }) }, t = 1; t < n.length; ++t)o(t) } else f = !0, n = nl(n, n.shape[0], 0).map(function (n) { return kp(n, [0]) }); i(n.length <= n[0].shape[0], function () { return "Gram-Schmidt: Number of vectors (" + n.length + ") exceeds number of dimensions (" + n[0].shape[0] + ")." }); var u = [], s = n, h = function (n) { u.push(r.tidy(function () { var t = s[n], i, r; if (n > 0) for (i = 0; i < n; ++i)r = bb(u[i].mulStrict(t)).mul(u[i]), t = t.sub(r); return t.div(nk(t, "euclidean")) })) }; for (t = 0; t < n.length; ++t)h(t); return f ? bi(u, 0) : u } }), aii = u({ qr_: function (n, t) { if (void 0 === t && (t = !1), n.rank < 2) throw new Error("qr() requires input tensor to have a rank >= 2, but got rank " + n.rank); if (2 === n.rank) return rvt(n, t); var u = n.shape.slice(0, n.shape.length - 2).reduce(function (n, t) { return n * t }), f = bt(n.reshape([u, n.shape[n.shape.length - 2], n.shape[n.shape.length - 1]]), 0), i = [], r = []; return f.forEach(function (n) { var u = rvt(n, t), f = u[0], e = u[1]; i.push(f); r.push(e) }), [bi(i, 0).reshape(n.shape), bi(r, 0).reshape(n.shape)] } }), uvt = Object.freeze({ bandPart: cii, gramSchmidt: lii, qr: aii }); var vii = u({ resizeBilinear_: function (n, u, f) { var e, o, h; void 0 === f && (f = !1); e = t(n, "images", "resizeBilinear"); i(3 === e.rank || 4 === e.rank, function () { return "Error in resizeBilinear: x must be rank 3 or 4, but got rank " + e.rank + "." }); i(2 === u.length, function () { return "Error in resizeBilinear: new shape must 2D, but got shape " + u + "." }); o = e; h = !1; 3 === e.rank && (h = !0, o = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])); var c = u[0], l = u[1], s = r.runKernelFunc(function (n, t) { return t([o]), n.resizeBilinear(o, c, l, f) }, { x: o }, function (n, t) { return { x: function () { return r.runKernelFunc(function (i) { return i.resizeBilinearBackprop(n, t[0], f) }, {}) } } }, "ResizeBilinear", { alignCorners: f, newHeight: c, newWidth: l }); return h ? s.as3D(s.shape[1], s.shape[2], s.shape[3]) : s } }), yii = u({ resizeNearestNeighbor_: function (n, u, f) { var e, o, h; void 0 === f && (f = !1); e = t(n, "images", "resizeNearestNeighbor"); i(3 === e.rank || 4 === e.rank, function () { return "Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank " + e.rank + "." }); i(2 === u.length, function () { return "Error in resizeNearestNeighbor: new shape must 2D, but got shape " + u + "." }); i("float32" === e.dtype || "int32" === e.dtype, function () { return "`images` must have `int32` or `float32` as dtype" }); o = e; h = !1; 3 === e.rank && (h = !0, o = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])); var c = u[0], l = u[1], s = r.runKernelFunc(function (n, t) { return t([o]), n.resizeNearestNeighbor(o, c, l, f) }, { batchImages: o }, function (n, t) { return { batchImages: function () { return r.runKernelFunc(function (i) { return i.resizeNearestNeighborBackprop(n, t[0], f) }, {}) } } }); return h ? s.as3D(s.shape[1], s.shape[2], s.shape[3]) : s } }), pii = u({ nonMaxSuppression_: function (n, i, u, f, e) { var c; void 0 === f && (f = .5); void 0 === e && (e = Number.NEGATIVE_INFINITY); var o = t(n, "boxes", "nonMaxSuppression"), s = t(i, "scores", "nonMaxSuppression"), h = oa(o, s, u, f, e); return u = h.maxOutputSize, f = h.iouThreshold, e = h.scoreThreshold, c = { maxOutputSize: u, iouThreshold: f, scoreThreshold: e }, r.runKernelFunc(function (n) { return n.nonMaxSuppression(o, s, u, f, e) }, { boxes: o, scores: s }, null, "NonMaxSuppressionV3", c) } }), wii = function (n, i, r, u, f) { return void 0 === u && (u = .5), void 0 === f && (f = Number.NEGATIVE_INFINITY), y(this, void 0, void 0, function () { var e, o, s, h, c, l, a; return p(this, function (v) { switch (v.label) { case 0: return e = t(n, "boxes", "nonMaxSuppressionAsync"), o = t(i, "scores", "nonMaxSuppressionAsync"), s = oa(e, o, r, u, f), r = s.maxOutputSize, u = s.iouThreshold, f = s.scoreThreshold, [4, Promise.all([e.data(), o.data()])]; case 1: return h = v.sent(), c = h[0], l = h[1], a = hw(c, l, r, u, f), e !== n && e.dispose(), o !== i && o.dispose(), [2, a] } }) }) }, bii = u({ nonMaxSuppressionWithScore_: function (n, i, u, f, e, o) { void 0 === f && (f = .5); void 0 === e && (e = Number.NEGATIVE_INFINITY); void 0 === o && (o = 0); var h = t(n, "boxes", "nonMaxSuppression"), c = t(i, "scores", "nonMaxSuppression"), s = oa(h, c, u, f, e, o), a = { maxOutputSize: u = s.maxOutputSize, iouThreshold: f = s.iouThreshold, scoreThreshold: e = s.scoreThreshold, softNmsSigma: o = s.softNmsSigma }, l = r.runKernel("NonMaxSuppressionV5", { boxes: h, scores: c }, a); return { selectedIndices: l[0], selectedScores: l[1] } } }), kii = function (n, i, r, u, f, e) { return void 0 === u && (u = .5), void 0 === f && (f = Number.NEGATIVE_INFINITY), void 0 === e && (e = 0), y(this, void 0, void 0, function () { var o, s, h, c, l, a, v; return p(this, function (y) { switch (y.label) { case 0: return o = t(n, "boxes", "nonMaxSuppressionAsync"), s = t(i, "scores", "nonMaxSuppressionAsync"), h = oa(o, s, r, u, f, e), r = h.maxOutputSize, u = h.iouThreshold, f = h.scoreThreshold, e = h.softNmsSigma, [4, Promise.all([o.data(), s.data()])]; case 1: return c = y.sent(), l = c[0], a = c[1], v = cw(l, a, r, u, f, e), o !== n && o.dispose(), s !== i && s.dispose(), [2, v] } }) }) }, dii = u({ cropAndResize_: function (n, u, f, e, o, s) { var c = t(n, "image", "cropAndResize"), h = t(u, "boxes", "cropAndResize", "float32"), l = t(f, "boxInd", "cropAndResize", "int32"), a; return o = o || "bilinear", s = s || 0, a = h.shape[0], i(4 === c.rank, function () { return "Error in cropAndResize: image must be rank 4,but got rank " + c.rank + "." }), i(2 === h.rank && 4 === h.shape[1], function () { return "Error in cropAndResize: boxes must be have size [" + a + ",4] but had shape " + h.shape + "." }), i(1 === l.rank && l.shape[0] === a, function () { return "Error in cropAndResize: boxInd must be have size [" + a + "] but had shape " + h.shape + "." }), i(2 === e.length, function () { return "Error in cropAndResize: cropSize must be of length 2, but got length " + e.length + "." }), i(e[0] >= 1 && e[1] >= 1, function () { return "cropSize must be atleast [1,1], but was " + e }), i("bilinear" === o || "nearest" === o, function () { return "method must be bilinear or nearest, but was " + o }), r.runKernelFunc(function (n) { return n.cropAndResize(c, h, l, e, o, s) }, { images: c, boxes: h, boxInd: l }, null, "CropAndResize", { method: o, extrapolationValue: s, cropSize: e }) } }), sa = Object.freeze({ resizeBilinear: vii, resizeNearestNeighbor: yii, nonMaxSuppression: pii, nonMaxSuppressionAsync: wii, nonMaxSuppressionWithScore: bii, nonMaxSuppressionWithScoreAsync: kii, cropAndResize: dii }), uk = function (n, t) { return !(n > 0) || "linear" === t }, fk = function (n, t, i) { if (null == i || "linear" === i) return n; if ("relu" === i) return n.mul(t.step()); throw new Error("Gradient for activation " + i + " has not been implemented yet."); }, ek = function (n, t) { var i = t, r = kt(n.shape, t.shape); return r.length > 0 && (i = i.sum(r)), i.reshape(n.shape) }, ok = function (n, t, i) { if ("linear" === t) return n; if ("relu" === t) return ct(n); if ("elu" === t) return kb(n); if ("relu6" === t) return gb(n); if ("prelu" === t) return db(n, i); throw new Error("Unknown fused activation " + t + "."); }, gii = u({ fusedMatMul_: function (n) { var d, et = n.a, ot = n.b, st = n.transposeA, e = void 0 !== st && st, ct = n.transposeB, o = void 0 !== ct && ct, s = n.bias, lt = n.activation, h = void 0 === lt ? "linear" : lt, l = n.preluActivationWeights, a, u, f, k, wt; if (!1 === uk(r.state.gradientDepth, h)) return a = ch(et, ot, e, o), null != s && (a = nt(a, s)), ok(a, h, l); u = t(et, "a", "fused matMul"); f = t(ot, "b", "fused matMul"); d = ht(u, f); u = d[0]; f = d[1]; var v = e ? u.shape[u.rank - 2] : u.shape[u.rank - 1], y = o ? f.shape[f.rank - 1] : f.shape[f.rank - 2], g = e ? u.shape[u.rank - 1] : u.shape[u.rank - 2], it = o ? f.shape[f.rank - 2] : f.shape[f.rank - 1], rt = u.shape.slice(0, -2), ut = f.shape.slice(0, -2), at = w(rt), vt = w(ut); i(u.rank >= 2 && f.rank >= 2 && u.rank === f.rank, function () { return "Error in fused matMul: inputs must have the same rank of at least 2, got ranks " + u.rank + " and " + f.rank + "." }); i(yt(rt, ut), function () { return "Error in fused matMul: outer dimensions (" + rt + ") and (" + ut + ") of Tensors with shapes " + u.shape + " and " + f.shape + " must match." }); i(v === y, function () { return "Error in fused matMul: inner shapes (" + v + ") and (" + y + ") of Tensors with shapes " + u.shape + " and " + f.shape + " and transposeA=" + e + " and transposeB=" + o + " must match." }); var c, ft, pt = u.shape.slice(0, -2).concat([g, it]), p = e ? u.as3D(at, v, g) : u.as3D(at, g, v), b = o ? f.as3D(vt, it, y) : f.as3D(vt, y, it); return null != s && tt(pt, (c = ht(c = t(s, "bias", "fused matMul"), u)[0]).shape), null != l && (ft = t(l, "prelu weights", "fused matMul")), k = { a: p, b: b }, null != s && (k.bias = c), null != l && (k.preluActivationWeights = ft), wt = [p, b], r.runKernelFunc(function (n, t) { var i = n.fusedBatchMatMul({ a: p, b: b, transposeA: e, transposeB: o, bias: c, activation: h, preluActivationWeights: ft }); return t([p, b, i]), i }, k, function (n, t) { var u = t[0], f = t[1], l = t[2], i = fk(n, l, h), r = {}; return null != s && (r = { bias: function () { return ek(c, i) } }), e || o ? !e && o ? Object.assign({ a: function () { return i.matMul(f, !1, !1) }, b: function () { return i.matMul(u, !0, !1) } }, r) : e && !o ? Object.assign({ a: function () { return f.matMul(i, !1, !0) }, b: function () { return u.matMul(i, !1, !1) } }, r) : Object.assign({ a: function () { return f.matMul(i, !0, !0) }, b: function () { return i.matMul(u, !0, !0) } }, r) : Object.assign({ a: function () { return i.matMul(f, !1, !0) }, b: function () { return u.matMul(i, !0, !1) } }, r) }, "_FusedMatMul", { transposeA: e, transposeB: o, activation: h }, wt, [!0]).reshape(pt) } }), nri = u({ fusedConv2d_: function (n) { var it = n.x, rt = n.filter, s = n.strides, h = n.pad, ut = n.dataFormat, d = void 0 === ut ? "NHWC" : ut, ft = n.dilations, c = void 0 === ft ? [1, 1] : ft, y = n.dimRoundingMode, l = n.bias, et = n.activation, e = void 0 === et ? "linear" : et, p = n.preluActivationWeights, w, a, g, b, k, st, v; if (e = e || "linear", !1 === uk(r.state.gradientDepth, e)) return w = ur(it, rt, s, h, d, c, y), null != l && (w = nt(w, l)), ok(w, e, p); var o = t(it, "x", "conv2d"), f = t(rt, "filter", "conv2d"), u = o, ot = !1; return 3 === o.rank && (ot = !0, u = o.as4D(1, o.shape[0], o.shape[1], o.shape[2])), i(4 === u.rank, function () { return "Error in fused conv2d: input must be rank 4, but got rank " + u.rank + "." }), i(4 === f.rank, function () { return "Error in fused conv2d: filter must be rank 4, but got rank " + f.rank + "." }), null != y && i(lt(h), function () { return "Error in fused conv2d: pad must be an integer when using, dimRoundingMode " + y + " but got pad " + h + "." }), i(u.shape[3] === f.shape[2], function () { return "Error in conv2d: depth of input (" + u.shape[3] + ") must match input depth for filter " + f.shape[2] + "." }), i(pi(s, c), function () { return "Error in conv2D: Either strides or dilations must be 1. Got strides " + s + " and dilations '" + c + "'" }), i("NHWC" === d, function () { return "Error in conv2d: got dataFormat of " + d + " but only NHWC is currently supported." }), b = lf(u.shape, f.shape, s, c, h, y), null != l && (a = ht(a = t(l, "bias", "fused conv2d"), o)[0], tt(b.outShape, a.shape)), null != p && (g = t(p, "prelu weights", "fused conv2d")), k = { x: u, filter: f }, null != l && (k.bias = a), null != p && (k.preluActivationWeights = g), st = [f, u], v = r.runKernelFunc(function (n, t) { var i = n.fusedConv2d({ input: u, filter: f, convInfo: b, bias: a, activation: e, preluActivationWeights: g }); return t([f, u, i]), i }, k, function (n, t) { var r = t, o = r[0], v = r[1], y = r[2], u = fk(n, y, e), f; return i(he(c), function () { return "Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '" + c + "'" }), f = {}, null != l && (f = { bias: function () { return ek(a, u) } }), Object.assign({ x: function () { return dct(v.shape, u, o, s, h) }, filter: function () { return pb(v, u, o.shape, s, h) } }, f) }, "FusedConv2D", { convInfo: b, activation: e }, st, [!0]), ot ? v.as3D(v.shape[1], v.shape[2], v.shape[3]) : v } }), tri = u({ fusedDepthwiseConv2d_: function (n) { var g = n.x, it = n.filter, v = n.strides, y = n.pad, rt = n.dataFormat, st = void 0 === rt ? "NHWC" : rt, ut = n.dilations, e = void 0 === ut ? [1, 1] : ut, p = n.dimRoundingMode, s = n.bias, ft = n.activation, a = void 0 === ft ? "linear" : ft, w = n.preluActivationWeights, b, h, d, c, k, ot, l; if (!1 === uk(r.state.gradientDepth, a)) return b = hh(g, it, v, y, st, e, p), null != s && (b = nt(b, s)), ok(b, a, w); var o = t(g, "x", "depthwiseConv2d"), f = t(it, "filter", "depthwiseConv2d"), u = o, et = !1; return 3 === o.rank && (et = !0, u = o.as4D(1, o.shape[0], o.shape[1], o.shape[2])), i(4 === u.rank, function () { return "Error in fused depthwiseConv2d: input must be rank 4, but got rank " + u.rank + "." }), i(4 === f.rank, function () { return "Error in fused depthwiseConv2d: filter must be rank 4, but got rank " + f.rank + "." }), i(u.shape[3] === f.shape[2], function () { return "Error in fused depthwiseConv2d: number of input channels (" + u.shape[3] + ") must match the inChannels dimension in filter " + f.shape[2] + "." }), null == e && (e = [1, 1]), i(pi(v, e), function () { return "Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides " + v + " and dilations '" + e + "'" }), null != p && i(lt(y), function () { return "Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode " + p + " but got pad " + y + "." }), c = lf(u.shape, f.shape, v, e, y, p, !0), null != s && (h = ht(h = t(s, "bias", "fused conv2d"), o)[0], tt(c.outShape, h.shape)), null != w && (d = t(w, "prelu weights", "fused depthwiseConv2d")), k = { x: u, filter: f }, null != s && (k.bias = h), null != w && (k.preluActivationWeights = d), ot = [f, u], l = r.runKernelFunc(function (n, t) { var i = n.fusedDepthwiseConv2D({ input: u, filter: f, convInfo: c, bias: h, activation: a, preluActivationWeights: d }); return t([f, u, i]), i }, k, function (n, t) { i(he(e), function () { return "Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '" + e + "'" }); var u = t[0], f = t[1], l = t[2], r = fk(n, l, a), o = {}; return null != s && (o = { bias: function () { return ek(h, r) } }), Object.assign({ x: function () { return gct(f.shape, r, u, c) }, filter: function () { return nlt(f, r, u.shape, c) } }, o) }, "FusedDepthwiseConv2D", { convInfo: c, activation: a }, ot, [!0]), et ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l } }), fvt = Object.freeze({ matMul: gii, conv2d: nri, depthwiseConv2d: tri }), iri = Object.freeze({ image: sa, linalg: uvt, losses: ivt, spectral: pat, fused: fvt, signal: nvt, square: cot, squaredDifference: rb, conv1d: bct, conv2d: ur, conv3d: kct, depthwiseConv2d: hh, separableConv2d: ia, conv2dTranspose: tlt, conv3dTranspose: ilt, op: u, batchNormalization2d: tht, batchNormalization3d: iht, batchNormalization4d: rht, batchNormalization: uht, batchNorm: eb, batchNorm2d: fht, batchNorm3d: eht, batchNorm4d: oht, booleanMaskAsync: yct, complex: ui, real: ir, imag: yr, concat: wt, concat1d: hrt, concat2d: crt, concat3d: lrt, concat4d: art, split: nl, matMul: ch, dot: rlt, outerProduct: ult, reverse: oo, reverse1d: flt, reverse2d: elt, reverse3d: olt, reverse4d: slt, maxPool: gt, avgPool: so, pool: llt, maxPool3d: alt, avgPool3d: vlt, slice: br, slice1d: ylt, slice2d: plt, slice3d: wb, slice4d: wlt, abs: lot, acos: aot, acosh: vot, asin: yot, asinh: pot, atan: wot, atanh: bot, ceil: kot, clipByValue: bl, cos: dot, cosh: got, erf: nst, exp: kl, expm1: tst, floor: ist, log: rst, log1p: ust, logSigmoid: fst, neg: fh, reciprocal: est, round: ost, rsqrt: ub, sigmoid: fb, sign: sst, isNaN: hst, isInf: cst, isFinite: lst, sin: ast, sinh: vst, softplus: yst, sqrt: pst, step: wst, tan: bst, tanh: kst, all: klt, any: dlt, argMax: glt, argMin: nat, logSumExp: tat, max: lh, mean: iat, min: rat, moments: uat, sum: bb, prod: fat, equal: lb, equalStrict: ict, greater: rct, greaterEqual: ab, greaterEqualStrict: uct, greaterStrict: fct, less: ect, lessEqual: oct, lessEqualStrict: sct, lessStrict: hct, notEqual: cct, notEqualStrict: lct, add: nt, addN: cht, addStrict: lht, atan2: aht, div: sr, divNoNan: vht, divStrict: yht, floorDiv: hb, maximum: na, maximumStrict: pht, minimum: cb, minimumStrict: wht, mod: bht, modStrict: kht, mul: si, mulStrict: dht, pow: sh, powStrict: ght, squaredDifferenceStrict: nct, sub: dt, subStrict: tct, elu: kb, leakyRelu: eat, prelu: db, relu: ct, relu6: gb, selu: oat, logicalAnd: oh, logicalNot: sht, logicalOr: ob, logicalXor: hht, where: af, whereAsync: sb, buffer: k, print: vrt, batchToSpaceND: yp, broadcastTo: yrt, cast: prt, clone: wrt, cumsum: brt, depthToSpace: krt, expandDims: rr, eye: pp, multinomial: drt, oneHot: il, pad: cf, pad1d: grt, pad2d: nut, pad3d: tut, pad4d: iut, rand: rut, randomNormal: uut, randomGamma: fut, randomUniform: wp, reshape: or, spaceToBatchND: bp, squeeze: kp, stack: bi, tile: se, truncatedNormal: eut, unstack: bt, setdiff1dAsync: out, fill: pr, linspace: srt, ones: fe, range: bs, scalar: h, tensor: fi, tensor1d: vt, tensor2d: lu, tensor3d: gc, tensor4d: yi, tensor5d: frt, tensor6d: ert, variable: ort, zeros: ot, onesLike: ap, zerosLike: it, transpose: yu, softmax: fu, logSoftmax: dut, localResponseNormalization: sat, norm: nk, gather: ta, unsortedSegmentSum: vb, basicLSTMCell: hat, multiRNNCell: cat, movingAverage: lat, stridedSlice: aat, topk: vat, scatterND: yat, fft: ra, ifft: ah, rfft: ua, irfft: tk, sparseToDense: wat, gatherND: bat, diag: kat, dropout: dat, hannWindow: fa, hammingWindow: ik, frame: ea, stft: rk, inTopKAsync: tvt }); for (evt = function (n) { function t() { var t = n.call(this) || this; return t.blockSize = 48, t.firstUse = !0, t.data = new iw(t, r), t } return hr(t, n), t.prototype.write = function (n, t, i) { this.firstUse && (this.firstUse = !1, o().get("IS_NODE") && kc("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================")); var r = {}; return this.data.set(r, { values: n, dtype: i }), r }, t.prototype.move = function (n, t, i, r) { this.data.set(n, { values: t, dtype: r }) }, t.prototype.numDataIds = function () { return this.data.numDataIds() }, t.prototype.read = function (n) { return y(this, void 0, void 0, function () { return p(this, function () { return [2, this.readSync(n)] }) }) }, t.prototype.readSync = function (n) { var t = this.data.get(n), r = t.dtype, i = t.complexTensors; return "complex64" === r ? sw(this.readSync(i.real.dataId), this.readSync(i.imag.dataId)) : this.data.get(n).values }, t.prototype.bufferSync = function (n) { var t = this.readSync(n.dataId), i = t; if ("string" === n.dtype) try { i = t.map(function (n) { return us(n) }) } catch (n) { throw new Error("Failed to decode encoded string bytes into utf-8"); } return k(n.shape, n.dtype, i) }, t.prototype.makeOutput = function (n, t, i) { var u = this.write(n, t, i); return r.makeTensorFromDataId(u, t, i, this) }, t.prototype.disposeData = function (n) { if (this.data.has(n)) { var t = this.data.get(n).complexTensors; null != t && (t.real.dispose(), t.imag.dispose()); this.data.delete(n) } }, t.prototype.time = function (n) { return y(this, void 0, void 0, function () { var t; return p(this, function () { return t = lr(), n(), [2, { kernelMs: lr() - t }] }) }) }, t.prototype.memory = function () { return { unreliable: !0, reasons: ["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."] } }, t.prototype.complex = function (n, t) { var i = this.makeOutput(null, n.shape, "complex64"); return this.data.get(i.dataId).complexTensors = { real: r.keep(n.clone()), imag: r.keep(t.clone()) }, i }, t.prototype.real = function (n) { return this.data.get(n.dataId).complexTensors.real.clone() }, t.prototype.imag = function (n) { return this.data.get(n.dataId).complexTensors.imag.clone() }, t.prototype.slice = function (n, t, i) { var f, e, h; if (s(n, "slice"), nw(n.shape, t, i)) return f = tw(t, n.strides), e = w(i), fi(this.readSync(n.dataId).subarray(f, f + e), i, n.dtype); for (var r = k(i, n.dtype), o = this.bufferSync(n), u = 0; u < r.size; ++u)h = r.indexToLoc(u).map(function (n, i) { return n + t[i] }), r.values[u] = o.get.apply(o, h); return r.toTensor() }, t.prototype.stridedSlice = function (n, t, i, r) { var e; if (s(n, "stridedSlice"), e = sl(t, i, r), e.some(function (n) { return 0 === n })) return fi([], e); for (var f = k(e, n.dtype), l = this.bufferSync(n), o = 0; o < f.size; o++) { for (var h = f.indexToLoc(o), c = new Array(h.length), u = 0; u < c.length; u++)c[u] = h[u] * r[u] + t[u]; f.set.apply(f, [l.get.apply(l, c)].concat(h)) } return f.toTensor() }, t.prototype.diag = function (n) { for (var i = this.readSync(n.dataId), r = k([n.size, n.size], n.dtype), u = r.values, t = 0; t < i.length; t++)u[t * n.size + t] = i[t]; return r.toTensor() }, t.prototype.unstack = function (n, t) { for (var u, f, r, o = n.shape[t], e = new Array(n.rank - 1), s = 0, i = 0; i < n.rank; i++)i !== t && (e[s++] = n.shape[i]); for (u = new Array(n.rank).fill(0), f = n.shape.slice(), f[t] = 1, r = new Array(o), i = 0; i < r.length; i++)u[t] = i, r[i] = this.slice(n, u, f).reshape(e); return r }, t.prototype.reverse = function (n, t) { s(n, "reverse"); for (var i = k(n.shape, n.dtype), u = this.bufferSync(n), f = function (r) { var e = i.indexToLoc(r), f = e.slice(); t.forEach(function (t) { return f[t] = n.shape[t] - 1 - f[t] }); i.set.apply(i, [u.get.apply(u, f)].concat(e)) }, r = 0; r < i.size; r++)f(r); return i.toTensor() }, t.prototype.concat = function (n, t) { var e = this, o, s, u, f, c; if ("complex64" === n[0].dtype) return o = n.map(function (n) { return ir(n) }), s = n.map(function (n) { return yr(n) }), ui(this.concat(o, t), this.concat(s, t)); var i = n.map(function (n) { var i = w(n.shape.slice(t)); return n.as2D(-1, i) }), h = ue(i.map(function (n) { return n.shape }), 1), r = k(h, n[0].dtype).values; return 1 === i[0].shape[0] ? (u = 0, i.forEach(function (n) { r.set(e.readSync(n.dataId), u); u += n.size })) : (f = 0, i.forEach(function (n) { for (var u, t, o = e.readSync(n.dataId), s = 0, i = 0; i < n.shape[0]; ++i)for (u = i * h[1] + f, t = 0; t < n.shape[1]; ++t)r[u + t] = o[s++]; f += n.shape[1] })), c = ue(n.map(function (n) { return n.shape }), t), fi(r, c, n[0].dtype) }, t.prototype.neg = function (n) { return s(n, "neg"), this.multiply(h(-1), n) }, t.prototype.add = function (n, t) { return "complex64" === n.dtype || "complex64" === t.dtype ? this.broadcastedBinaryComplexOp(n.cast("complex64"), t.cast("complex64"), function (n, t, i, r) { return { real: n + i, imag: t + r } }) : this.broadcastedBinaryOp(n, t, ri(n.dtype, t.dtype), function (n, t) { return n + t }) }, t.prototype.addN = function (n) { var e = this, f, t; s(n, "addN"); for (var o = n.map(function (n) { return e.readSync(n.dataId) }), r = k(n[0].shape, n[0].dtype), u = r.values, i = 0; i < n.length; i++)for (f = o[i], t = 0; t < u.length; t++)u[t] += f[t]; return r.toTensor() }, t.prototype.softmax = function (n, t) { var i = pt([t], n.shape), r = this.max(n, i), u = vi(r.shape, i), e = this.subtract(n, r.reshape(u)), f = this.exp(e), o = this.sum(f, i).reshape(u); return this.realDivide(f, o) }, t.prototype.subtract = function (n, t) { return "complex64" === n.dtype || "complex64" === t.dtype ? this.broadcastedBinaryComplexOp(n.cast("complex64"), t.cast("complex64"), function (n, t, i, r) { return { real: n - i, imag: t - r } }) : this.broadcastedBinaryOp(n, t, ri(n.dtype, t.dtype), function (n, t) { return n - t }) }, t.prototype.pow = function (n, t) { return s([n, t], "pow"), this.broadcastedBinaryOp(n, t, n.dtype, function (n, t) { return Math.pow(n, t) }) }, t.prototype.batchMatMul = function (n, t, i, r) { var o, h, c, l, b, a; s([n, t], "matMul"); for (var d = i ? n.shape[1] : n.shape[2], v = i ? n.shape[2] : n.shape[1], f = r ? t.shape[1] : t.shape[2], g = n.shape[0], tt = this.readSync(n.dataId), it = this.readSync(t.dataId), p = i ? [n.strides[0], 1, n.strides[1]] : [n.strides[0], n.strides[1], 1], rt = p[0], ut = p[1], ft = p[2], w = r ? [1, t.strides[1], t.strides[0]] : [t.strides[1], 1, t.strides[0]], et = w[0], ot = w[1], st = w[2], ht = v * f, nt = k([g, v, f], n.dtype), ct = nt.values, u = this.blockSize, e = 0; e < g; e++)for (o = 0; o < v; o += u)for (h = 0; h < f; h += u)for (c = 0; c < d; c += u)for (var lt = Math.min(o + u, v), at = Math.min(h + u, f), vt = Math.min(c + u, d), y = o; y < lt; y++)for (l = h; l < at; l++) { for (b = 0, a = c; a < vt; a++)b += tt[e * rt + y * ut + a * ft] * it[a * et + l * ot + e * st]; ct[e * ht + (y * f + l)] += b } return nt.toTensor() }, t.prototype.fusedBatchMatMul = function (n) { var u = n.a, f = n.b, e = n.transposeA, o = n.transposeB, i = n.bias, r = n.activation, s = n.preluActivationWeights, t = this.batchMatMul(u, f, e, o); return i && (t = this.add(t, i)), r && (t = sk(this, t, r, s)), t }, t.prototype.multiply = function (n, t) { return "complex64" === n.dtype || "complex64" === t.dtype ? this.broadcastedBinaryComplexOp(n.cast("complex64"), t.cast("complex64"), function (n, t, i, r) { return { real: n * i - t * r, imag: n * r + t * i } }) : this.broadcastedBinaryOp(n, t, ri(n.dtype, t.dtype), function (n, t) { return n * t }) }, t.prototype.realDivide = function (n, t) { return s([n, t], "realDivide"), this.broadcastedBinaryOp(n, t, "float32", function (n, t) { return n / t }) }, t.prototype.floorDiv = function (n, t) { return s([n, t], "floorDiv"), this.broadcastedBinaryOp(n, t, "int32", function (n, t) { return Math.floor(n / t) }) }, t.prototype.sum = function (n, t) { s(n, "sum"); wi("sum", t, n.rank); for (var u = oi(n.shape, t), c = u[0], l = u[1], f = ot(c, ri(n.dtype, "int32")), e = w(l), o = this.readSync(f.dataId), a = this.readSync(n.dataId), i = 0; i < o.length; ++i) { for (var v = i * e, h = 0, r = 0; r < e; ++r)h += a[v + r]; o[i] = h } return f }, t.prototype.prod = function (n, t) { s(n, "sum"); for (var u = oi(n.shape, t), c = u[0], l = u[1], f = ot(c, ri(n.dtype, "int32")), e = w(l), o = this.readSync(f.dataId), a = this.readSync(n.dataId), i = 0; i < o.length; ++i) { for (var v = i * e, h = 1, r = 0; r < e; ++r)h *= a[v + r]; o[i] = h } return f }, t.prototype.unsortedSegmentSum = function (n, t, i) { var f, e; s(n, "unsortedSegmentSum"); for (var u = [], o = n.rank - t.rank, r = 0; r < o; ++r)t = t.expandDims(r + 1); for (r = 0; r < i; ++r)f = h(r, "int32"), e = lb(f, t).asType("float32").mul(n).sum(0), u.push(e); return bi(u) }, t.prototype.argMin = function (n, t) { var u, f; s(n, "argMin"); u = [t]; wi("argMin", u, n.rank); for (var e = oi(n.shape, u), p = e[0], b = e[1], o = ot(p, "int32"), h = w(b), c = this.readSync(o.dataId), l = this.readSync(n.dataId), i = 0; i < c.length; ++i) { for (var a = i * h, v = l[a], y = 0, r = 0; r < h; ++r)f = l[a + r], f < v && (v = f, y = r); c[i] = y } return o }, t.prototype.argMax = function (n, t) { var u, f; s(n, "argMax"); u = [t]; wi("argMax", u, n.rank); for (var e = oi(n.shape, u), p = e[0], b = e[1], o = ot(p, "int32"), h = w(b), c = this.readSync(o.dataId), l = this.readSync(n.dataId), i = 0; i < c.length; ++i) { for (var a = i * h, v = l[a], y = 0, r = 0; r < h; ++r)f = l[a + r], f > v && (v = f, y = r); c[i] = y } return o }, t.prototype.cumsum = function (n, t, i, r) { var u, f, c; if (s(n, "cumsum"), t !== n.rank - 1) throw new Error("backend.cumsum in CPU expects an inner-most axis=" + (n.rank - 1) + " but got axis=" + t); for (var y = ri(n.dtype, "int32"), a = ot(n.shape, y), e = this.readSync(a.dataId), o = this.readSync(n.dataId), l = n.shape[n.rank - 1], v = r ? function (n, t) { return n + l - t - 1 } : function (n, t) { return n + t }, h = 0; h < o.length; h += l)for (u = 0; u < l; u++)f = v(h, u), 0 === u ? e[f] = i ? 0 : o[f] : (c = v(h, u - 1), e[f] = i ? o[c] + e[c] : o[f] + e[c]); return a }, t.prototype.equal = function (n, t) { return s([n, t], "equal"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n === t ? 1 : 0 }) }, t.prototype.notEqual = function (n, t) { return s([n, t], "notEqual"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n !== t ? 1 : 0 }) }, t.prototype.less = function (n, t) { return s([n, t], "less"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n < t ? 1 : 0 }) }, t.prototype.lessEqual = function (n, t) { return s([n, t], "lessEqual"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n <= t ? 1 : 0 }) }, t.prototype.greater = function (n, t) { return s([n, t], "greater"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n > t ? 1 : 0 }) }, t.prototype.greaterEqual = function (n, t) { return s([n, t], "greaterEqual"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n >= t ? 1 : 0 }) }, t.prototype.logicalNot = function (n) { s(n, "logicalNot"); for (var i = this.readSync(n.dataId), r = new Uint8Array(i.length), t = 0; t < i.length; ++t)r[t] = i[t] ? 0 : 1; return this.makeOutput(r, n.shape, "bool") }, t.prototype.logicalAnd = function (n, t) { return s([n, t], "logicalAnd"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n && t }) }, t.prototype.logicalOr = function (n, t) { return s([n, t], "logicalOr"), this.broadcastedBinaryOp(n, t, "bool", function (n, t) { return n || t }) }, t.prototype.select = function (n, t, i) { var u; s([n, t, i], "select"); for (var f = this.readSync(n.dataId), o = this.readSync(t.dataId), h = this.readSync(i.dataId), e = ot(t.shape, ri(t.dtype, i.dtype)), c = this.readSync(e.dataId), l = 0, a = 0 === n.rank || n.rank > 1 || 1 === t.rank ? 1 : w(t.shape.slice(1)), r = 0; r < f.length; r++)for (u = 0; u < a; u++)c[l++] = 1 === f[r] ? o[r] : h[r]; return e }, t.prototype.where = function (n) { s([n], "where"); var t = this.readSync(n.dataId); return lw(n.shape, t) }, t.prototype.topk = function (n, t) { return s(n, "topk"), fft(this.readSync(n.dataId), n.shape, n.dtype, t) }, t.prototype.min = function (n, t) { var f; s(n, "min"); wi("min", t, n.rank); for (var e = oi(n.shape, t), v = e[0], y = e[1], o = ot(v, n.dtype), h = w(y), c = this.readSync(o.dataId), l = this.readSync(n.dataId), i = 0; i < c.length; ++i) { for (var a = i * h, r = l[a], u = 0; u < h; ++u)f = l[a + u], f < r && (r = f); c[i] = r } return o }, t.prototype.minimum = function (n, t) { return s([n, t], "minimum"), this.broadcastedBinaryOp(n, t, n.dtype, function (n, t) { return Math.min(n, t) }) }, t.prototype.mod = function (n, t) { return s([n, t], "mod"), this.broadcastedBinaryOp(n, t, n.dtype, function (n, t) { var i = n % t; return n < 0 && t < 0 || n >= 0 && t >= 0 ? i : (i + t) % t }) }, t.prototype.max = function (n, t) { var f; s(n, "max"); wi("max", t, n.rank); for (var e = oi(n.shape, t), v = e[0], y = e[1], o = ot(v, n.dtype), h = w(y), c = this.readSync(o.dataId), l = this.readSync(n.dataId), i = 0; i < c.length; ++i) { for (var a = i * h, r = l[a], u = 0; u < h; ++u)f = l[a + u], f > r && (r = f); c[i] = r } return o }, t.prototype.maximum = function (n, t) { return s([n, t], "maximum"), this.broadcastedBinaryOp(n, t, n.dtype, function (n, t) { return Math.max(n, t) }) }, t.prototype.all = function (n, t) { var a; s(n, "all"); wi("all", t, n.rank); for (var f = oi(n.shape, t), v = f[0], y = f[1], e = ot(v, n.dtype), o = w(y), h = this.readSync(e.dataId), c = this.readSync(n.dataId), i = 0; i < h.length; ++i) { for (var l = i * o, r = c[l], u = 0; u < o; ++u)a = c[l + u], r = r && a; h[i] = r } return e }, t.prototype.any = function (n, t) { var a; s(n, "any"); wi("any", t, n.rank); for (var f = oi(n.shape, t), v = f[0], y = f[1], e = ot(v, n.dtype), o = w(y), h = this.readSync(e.dataId), c = this.readSync(n.dataId), i = 0; i < h.length; ++i) { for (var l = i * o, r = c[l], u = 0; u < o; ++u)a = c[l + u], r = r || a; h[i] = r } return e }, t.prototype.squaredDifference = function (n, t) { return s([n, t], "squaredDifference"), this.broadcastedBinaryOp(n, t, n.dtype, function (n, t) { var i = n - t; return i * i }) }, t.prototype.ceil = function (n) { s(n, "ceil"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)r[t] = Math.ceil(i[t]); return this.makeOutput(r, n.shape, "float32") }, t.prototype.floor = function (n) { s(n, "floor"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)r[t] = Math.floor(i[t]); return this.makeOutput(r, n.shape, "float32") }, t.prototype.sign = function (n) { s(n, "x"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)r[t] = i[t] < 0 ? -1 : i[t] > 0 ? 1 : 0; return this.makeOutput(r, n.shape, "float32") }, t.prototype.isNaN = function (n) { s(n, "x"); for (var i = this.readSync(n.dataId), r = new Uint8Array(i.length), t = 0; t < i.length; ++t)Number.isNaN(i[t]) && (r[t] = 1); return this.makeOutput(r, n.shape, "bool") }, t.prototype.isInf = function (n) { s(n, "x"); for (var i = this.readSync(n.dataId), r = new Uint8Array(i.length), t = 0; t < i.length; ++t)Math.abs(i[t]) === 1 / 0 && (r[t] = 1); return this.makeOutput(r, n.shape, "bool") }, t.prototype.isFinite = function (n) { s(n, "x"); for (var i = this.readSync(n.dataId), r = new Uint8Array(i.length), t = 0; t < i.length; ++t)Number.isFinite(i[t]) && (r[t] = 1); return this.makeOutput(r, n.shape, "bool") }, t.prototype.round = function (n) { var r; s(n, "round"); for (var i = this.readSync(n.dataId), u = new Float32Array(i.length), t = 0; t < i.length; ++t)r = Math.floor(i[t]), u[t] = i[t] - r < .5 ? Math.floor(i[t]) : i[t] - r > .5 ? Math.ceil(i[t]) : r % 2 == 0 ? r : r + 1; return this.makeOutput(u, n.shape, "float32") }, t.prototype.exp = function (n) { s(n, "exp"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)r[t] = Math.exp(i[t]); return this.makeOutput(r, n.shape, "float32") }, t.prototype.expm1 = function (n) { s(n, "expm1"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)r[t] = Math.expm1(i[t]); return this.makeOutput(r, n.shape, "float32") }, t.prototype.log = function (n) { var u; s(n, "log"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)u = i[t], r[t] = Math.log(u); return this.makeOutput(r, n.shape, "float32") }, t.prototype.log1p = function (n) { var u; s(n, "log1p"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)u = i[t], r[t] = Math.log1p(u); return this.makeOutput(r, n.shape, "float32") }, t.prototype.sqrt = function (n) { var u; s(n, "sqrt"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)u = i[t], r[t] = Math.sqrt(u); return this.makeOutput(r, n.shape, "float32") }, t.prototype.rsqrt = function (n) { var u; s(n, "rsqrt"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)u = i[t], r[t] = 1 / Math.sqrt(u); return this.makeOutput(r, n.shape, "float32") }, t.prototype.reciprocal = function (n) { s(n, "reciprocal"); for (var i = this.readSync(n.dataId), r = new Float32Array(i.length), t = 0; t < i.length; ++t)r[t] = 1 / i[t]; return this.makeOutput(r, n.shape, "float32") }, t.prototype.linear = function (n) { return n }, t.prototype.relu = function (n) { s(n, "relu"); for (var i = ot(n.shape, n.dtype), u = this.readSync(i.dataId), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)u[t] = Math.max(0, r[t]); return i }, t.prototype.relu6 = function (n) { s(n, "relu"); for (var i = ot(n.shape, n.dtype), u = this.readSync(i.dataId), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)u[t] = Math.min(Math.max(0, r[t]), 6); return i }, t.prototype.prelu = function (n, t) { return s([n, t], "prelu"), this.broadcastedBinaryOp(n, t, n.dtype, function (n, t) { return n < 0 ? t * n : n }) }, t.prototype.elu = function (n) { var i; s(n, "elu"); for (var r = new Float32Array(n.size), u = this.readSync(n.dataId), t = 0; t < u.length; ++t)i = u[t], r[t] = i >= 0 ? i : Math.exp(i) - 1; return this.makeOutput(r, n.shape, "float32") }, t.prototype.eluDer = function (n, t) { var r; s([n, t], "eluDer"); for (var u = new Float32Array(t.size), f = this.readSync(t.dataId), e = this.readSync(n.dataId), i = 0; i < f.length; ++i)r = f[i], u[i] = r >= 1 ? e[i] : e[i] * (r + 1); return this.makeOutput(u, t.shape, "float32") }, t.prototype.selu = function (n) { var i; s(n, "selu"); for (var f = nb, e = tb, r = new Float32Array(n.size), u = this.readSync(n.dataId), t = 0; t < u.length; ++t)i = u[t], r[t] = i >= 0 ? e * i : f * (Math.exp(i) - 1); return this.makeOutput(r, n.shape, "float32") }, t.prototype.clip = function (n, t, i) { var u; s(n, "clip"); for (var f = new Float32Array(n.size), e = this.readSync(n.dataId), r = 0; r < e.length; ++r)u = e[r], f[r] = u > i ? i : u < t ? t : u; return this.makeOutput(f, n.shape, "float32") }, t.prototype.abs = function (n) { for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.abs(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.complexAbs = function (n) { for (var u, f, i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < n.size; ++t)u = r[2 * t], f = r[2 * t + 1], i[t] = Math.hypot(u, f); return this.makeOutput(i, n.shape, "float32") }, t.prototype.int = function (n) { s(n, "int"); for (var i = new Int32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = r[t]; return this.makeOutput(i, n.shape, "int32") }, t.prototype.sigmoid = function (n) { s(n, "sigmoid"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = 1 / (1 + Math.exp(-r[t])); return this.makeOutput(i, n.shape, "float32") }, t.prototype.softplus = function (n) { s(n, "softplus"); for (var r = Math.log(11920928955078125e-23) + 2, u = new Float32Array(n.size), i = this.readSync(n.dataId), t = 0; t < i.length; ++t) { var o = i[t] > -r, h = i[t] < r, f = Math.exp(i[t]), e = void 0; e = h ? f : o ? i[t] : Math.log(1 + f); u[t] = e } return this.makeOutput(u, n.shape, "float32") }, t.prototype.sin = function (n) { s(n, "sin"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.sin(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.cos = function (n) { s(n, "cos"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.cos(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.tan = function (n) { s(n, "tan"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.tan(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.asin = function (n) { s(n, "asin"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.asin(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.acos = function (n) { s(n, "acos"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.acos(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.atan = function (n) { s(n, "atan"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.atan(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.atan2 = function (n, t) { return s([n, t], "atan2"), this.broadcastedBinaryOp(n, t, n.dtype, function (n, t) { return Math.atan2(n, t) }) }, t.prototype.sinh = function (n) { s(n, "sinh"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.sinh(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.cosh = function (n) { s(n, "cosh"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.cosh(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.tanh = function (n) { s(n, "tanh"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = kn(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.asinh = function (n) { s(n, "asinh"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.asinh(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.acosh = function (n) { s(n, "acosh"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.acosh(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.atanh = function (n) { s(n, "atanh"); for (var i = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t)i[t] = Math.atanh(r[t]); return this.makeOutput(i, n.shape, "float32") }, t.prototype.erf = function (n) { s(n, "erf"); for (var f = new Float32Array(n.size), r = this.readSync(n.dataId), t = 0; t < r.length; ++t) { var e = Math.sign(r[t]), u = Math.abs(r[t]), i = 1 / (1 + .3275911 * u); f[t] = e * (1 - ((((1.061405429 * i - 1.453152027) * i + 1.421413741) * i - .284496736) * i + .254829592) * i * Math.exp(-u * u)) } return this.makeOutput(f, n.shape, "float32") }, t.prototype.step = function (n, t) { var r; void 0 === t && (t = 0); s(n, "step"); for (var u = new Float32Array(n.size), f = this.readSync(n.dataId), i = 0; i < f.length; ++i)r = f[i], u[i] = isNaN(r) ? NaN : r > 0 ? 1 : t; return this.makeOutput(u, n.shape, "float32") }, t.prototype.fusedConv2d = function (n) { var u = n.input, f = n.filter, e = n.convInfo, i = n.bias, r = n.activation, o = n.preluActivationWeights, t = this.conv2d(u, f, e); return i && (t = this.add(t, i)), r && (t = sk(this, t, r, o)), t }, t.prototype.conv2d = function (n, t, i) { var c, v, w, f; s([n, t], "conv2d"); for (var b = i.filterHeight, d = i.filterWidth, g = i.dilationHeight, nt = i.dilationWidth, tt = i.padInfo.left, it = i.padInfo.top, u = "channelsLast" === i.dataFormat, r = k(i.outShape, n.dtype), rt = n.strides[0], ut = u ? n.strides[1] : n.strides[2], ft = u ? n.strides[2] : 1, et = u ? 1 : n.strides[1], ot = r.strides[0], st = u ? r.strides[1] : r.strides[2], ht = u ? r.strides[2] : 1, ct = u ? 1 : r.strides[1], lt = this.readSync(n.dataId), at = this.readSync(t.dataId), vt = r.values, e = 0; e < i.batchSize; ++e)for (var yt = e * rt, pt = e * ot, o = 0; o < i.outHeight; ++o)for (var wt = pt + o * st, bt = o * i.strideHeight - it, h = 0; h < b; h++)if (c = bt + h * g, !(c < 0 || c >= i.inHeight)) for (var kt = h * t.strides[0], dt = yt + c * ut, l = 0; l < i.outWidth; ++l)for (var gt = wt + l * ht, ni = l * i.strideWidth - tt, a = 0; a < d; a++)if (v = ni + a * nt, !(v < 0 || v >= i.inWidth)) for (var ti = dt + v * ft, p = kt + a * t.strides[1], y = 0; y < i.inChannels; ++y) { for (w = lt[ti + y * et], f = 0; f < i.outChannels; ++f)vt[gt + f * ct] += w * at[p + f]; p += i.outChannels } return r.toTensor() }, t.prototype.conv3d = function (n, t, i) { for (var s, l, y, b, u, d = i.filterDepth, g = i.filterHeight, nt = i.filterWidth, tt = i.dilationDepth, it = i.dilationHeight, rt = i.dilationWidth, ut = i.padInfo.front, ft = i.padInfo.left, et = i.padInfo.top, r = k(i.outShape, n.dtype), ot = this.readSync(n.dataId), st = this.readSync(t.dataId), ht = r.values, f = 0; f < i.batchSize; ++f)for (var ct = f * n.strides[0], lt = f * r.strides[0], e = 0; e < i.outDepth; ++e)for (var at = lt + e * r.strides[1], vt = e * i.strideDepth - ut, o = 0; o < d; o++)if (s = vt + o * tt, !(s < 0 || s >= i.inDepth)) for (var yt = o * t.strides[0], pt = ct + s * n.strides[1], h = 0; h < i.outHeight; ++h)for (var wt = at + h * r.strides[2], bt = h * i.strideHeight - et, c = 0; c < g; c++)if (l = bt + c * it, !(l < 0 || l >= i.inHeight)) for (var kt = yt + c * t.strides[1], dt = pt + l * n.strides[2], a = 0; a < i.outWidth; ++a)for (var gt = wt + a * i.outChannels, ni = a * i.strideWidth - ft, v = 0; v < nt; v++)if (y = ni + v * rt, !(y < 0 || y >= i.inWidth)) for (var ti = kt + v * t.strides[2], ii = dt + y * i.inChannels, w = ti, p = 0; p < i.inChannels; ++p) { for (b = ot[ii + p], u = 0; u < i.outChannels; ++u)ht[gt + u] += b * st[w + u]; w += i.outChannels } return r.toTensor() }, t.prototype.conv2dDerInput = function (n, t, i) { var f, e, tt, o; s([n, t], "conv2dDerInput"); for (var r = k(i.inShape, "float32"), it = r.values, rt = this.readSync(n.dataId), ut = this.readSync(t.dataId), v = t.strides, ft = v[0], et = v[1], ot = v[2], st = i.batchSize, y = i.filterHeight, p = i.filterWidth, ht = i.inChannels, ct = i.inHeight, lt = i.inWidth, at = i.outChannels, vt = i.outHeight, yt = i.outWidth, w = i.strideHeight, b = i.strideWidth, pt = i.dataFormat, wt = y - 1 - i.padInfo.top, bt = p - 1 - i.padInfo.left, u = "channelsLast" === pt, kt = r.strides[0], dt = u ? r.strides[1] : r.strides[2], gt = u ? r.strides[2] : 1, ni = u ? 1 : r.strides[1], ti = n.strides[0], ii = u ? n.strides[1] : n.strides[2], ri = u ? n.strides[2] : 1, ui = u ? 1 : n.strides[1], h = 0; h < st; ++h)for (f = 0; f < ht; ++f)for (e = 0; e < ct; ++e)for (var d = e - wt, fi = Math.max(0, Math.ceil(d / w)), ei = Math.min(vt, (y + d) / w), c = 0; c < lt; ++c) { for (var g = c - bt, oi = Math.max(0, Math.ceil(g / b)), si = Math.min(yt, (p + g) / b), nt = 0, l = fi; l < ei; ++l)for (tt = l * w - d, o = oi; o < si; ++o)for (var hi = ti * h + ii * l + ri * o, ci = ft * (y - 1 - tt) + et * (p - 1 - (o * b - g)) + ot * f, a = 0; a < at; ++a)nt += rt[hi + ui * a] * ut[ci + a]; it[kt * h + dt * e + gt * c + ni * f] = nt } return r.toTensor() }, t.prototype.conv3dDerInput = function (n, t, i) { for (var r, u, et, f, ot, e, p = k(i.inShape, "float32"), st = p.values, o = p.strides, ht = o[0], ct = o[1], lt = o[2], at = o[3], vt = this.readSync(n.dataId), s = n.strides, yt = s[0], pt = s[1], wt = s[2], bt = s[3], kt = this.readSync(t.dataId), h = t.strides, dt = h[0], gt = h[1], ni = h[2], ti = h[3], ii = i.batchSize, w = i.filterDepth, b = i.filterHeight, d = i.filterWidth, ri = i.inChannels, ui = i.inDepth, fi = i.inHeight, ei = i.inWidth, oi = i.outChannels, si = i.outDepth, hi = i.outHeight, ci = i.outWidth, g = i.strideDepth, nt = i.strideHeight, tt = i.strideWidth, li = w - 1 - i.padInfo.front, ai = b - 1 - i.padInfo.top, vi = d - 1 - i.padInfo.left, c = 0; c < ii; ++c)for (r = 0; r < ri; ++r)for (u = 0; u < ui; ++u)for (var it = u - li, yi = Math.max(0, Math.ceil(it / g)), pi = Math.min(si, (w + it) / g), l = 0; l < fi; ++l)for (var rt = l - ai, wi = Math.max(0, Math.ceil(rt / nt)), bi = Math.min(hi, (b + rt) / nt), a = 0; a < ei; ++a) { for (var ut = a - vi, ki = Math.max(0, Math.ceil(ut / tt)), di = Math.min(ci, (d + ut) / tt), ft = 0, v = yi; v < pi; ++v)for (et = v * g - it, f = wi; f < bi; ++f)for (ot = f * nt - rt, e = ki; e < di; ++e)for (var gi = yt * c + pt * v + wt * f + bt * e, nr = dt * (w - 1 - et) + gt * (b - 1 - ot) + ni * (d - 1 - (e * tt - ut)) + ti * r, y = 0; y < oi; ++y)ft += vt[gi + y] * kt[nr + y]; st[ht * c + ct * u + lt * l + at * a + r] = ft } return p.toTensor() }, t.prototype.conv2dDerFilter = function (n, t, i) { var e, p, r, o, w, h, b; s([n, t], "conv2dDerFilter"); for (var l = i.strideHeight, a = i.strideWidth, tt = i.filterHeight, it = i.filterWidth, rt = "channelsLast" === i.dataFormat, d = k(i.filterShape, "float32"), v = i.padInfo.left, y = i.padInfo.top, g = this.bufferSync(n), nt = this.bufferSync(t), u = 0; u < tt; ++u)for (var ut = Math.max(0, Math.ceil((y - u) / l)), ft = Math.min(i.outHeight, (i.inHeight + y - u) / l), f = 0; f < it; ++f)for (var et = Math.max(0, Math.ceil((v - f) / a)), ot = Math.min(i.outWidth, (i.inWidth + v - f) / a), c = 0; c < i.inChannels; ++c)for (e = 0; e < i.outChannels; ++e) { for (p = 0, r = 0; r < i.batchSize; ++r)for (o = ut; o < ft; ++o)for (w = u + o * l - y, h = et; h < ot; ++h)b = f + h * a - v, p += rt ? g.get(r, w, b, c) * nt.get(r, o, h, e) : g.get(r, c, w, b) * nt.get(r, e, o, h); d.set(p, u, f, c, e) } return d.toTensor() }, t.prototype.conv3dDerFilter = function (n, t, i) { for (var rt, e, it, o, ut, p = i.strideDepth, w = i.strideHeight, b = i.strideWidth, ft = i.filterDepth, et = i.filterHeight, ot = i.filterWidth, d = k(i.filterShape, "float32"), st = d.values, s = d.strides, ht = s[0], ct = s[1], lt = s[2], at = s[3], vt = this.readSync(t.dataId), h = t.strides, yt = h[0], pt = h[1], wt = h[2], bt = h[3], kt = this.readSync(n.dataId), c = n.strides, dt = c[0], gt = c[1], ni = c[2], ti = c[3], g = i.padInfo.front, nt = i.padInfo.left, tt = i.padInfo.top, r = 0; r < ft; ++r)for (var ii = Math.max(0, Math.ceil((g - r) / p)), ri = Math.min(i.outDepth, (i.inDepth + g - r) / p), ui = r * ht, u = 0; u < et; ++u)for (var fi = Math.max(0, Math.ceil((tt - u) / w)), ei = Math.min(i.outHeight, (i.inHeight + tt - u) / w), oi = u * ct + ui, f = 0; f < ot; ++f)for (var si = Math.max(0, Math.ceil((nt - f) / b)), hi = Math.min(i.outWidth, (i.inWidth + nt - f) / b), ci = f * lt + oi, l = 0; l < i.inChannels; ++l)for (rt = l * at + ci, e = 0; e < i.outChannels; ++e) { for (it = 0, o = 0; o < i.batchSize; ++o)for (var li = o * dt, ai = o * yt, a = ii; a < ri; ++a)for (var vi = (r + a * p - g) * gt + li, yi = a * pt + ai, v = fi; v < ei; ++v)for (var pi = (u + v * w - tt) * ni + vi, wi = v * wt + yi, y = si; y < hi; ++y)ut = y * bt + wi, it += kt[(f + y * b - nt) * ti + pi + l] * vt[ut + e]; st[rt + e] = it } return d.toTensor() }, t.prototype.fusedDepthwiseConv2D = function (n) { var u = n.input, f = n.filter, e = n.convInfo, i = n.bias, r = n.activation, o = n.preluActivationWeights, t = this.depthwiseConv2D(u, f, e); return i && (t = this.add(t, i)), r && (t = sk(this, t, r, o)), t }, t.prototype.depthwiseConv2D = function (n, t, i) { var h, a, b, u; s([n, t], "depthwiseConv2D"); for (var d = i.filterHeight, g = i.filterWidth, nt = i.dilationHeight, tt = i.dilationWidth, it = i.padInfo.left, rt = i.padInfo.top, v = i.outChannels / i.inChannels, r = k(i.outShape, n.dtype), ut = this.readSync(n.dataId), ft = this.readSync(t.dataId), et = r.values, f = 0; f < i.batchSize; ++f)for (var ot = f * n.strides[0], st = f * r.strides[0], e = 0; e < i.outHeight; ++e)for (var ht = st + e * r.strides[1], ct = e * i.strideHeight - it, o = 0; o < d; ++o)if (h = ct + o * nt, !(h < 0 || h >= i.inHeight)) for (var lt = o * t.strides[0], at = ot + h * n.strides[1], c = 0; c < i.outWidth; ++c)for (var vt = ht + c * r.strides[2], yt = c * i.strideWidth - rt, l = 0; l < g; ++l)if (a = yt + l * tt, !(a < 0 || a >= i.inWidth)) for (var pt = lt + l * t.strides[1], wt = at + a * i.inChannels, p = vt, w = pt, y = 0; y < i.inChannels; ++y) { for (b = ut[wt + y], u = 0; u < v; ++u)et[p + u] += b * ft[w + u]; p += v; w += v } return r.toTensor() }, t.prototype.depthwiseConv2DDerInput = function (n, t, i) { var r, u, ut, f; s([n, t], "depthwiseConv2DDerInput"); for (var l = k(i.inShape, "float32"), ft = l.values, a = l.strides, et = a[0], ot = a[1], st = a[2], ht = this.readSync(n.dataId), v = n.strides, ct = v[0], lt = v[1], at = v[2], vt = this.readSync(t.dataId), y = t.strides, yt = y[0], pt = y[1], wt = y[2], bt = i.batchSize, p = i.filterHeight, w = i.filterWidth, tt = i.inChannels, kt = i.inHeight, dt = i.inWidth, gt = i.outChannels, ni = i.outHeight, ti = i.outWidth, b = i.strideHeight, d = i.strideWidth, ii = p - 1 - i.padInfo.top, ri = w - 1 - i.padInfo.left, it = gt / tt, e = 0; e < bt; ++e)for (r = 0; r < tt; ++r)for (u = 0; u < kt; ++u)for (var g = u - ii, ui = Math.max(0, Math.ceil(g / b)), fi = Math.min(ni, (p + g) / b), o = 0; o < dt; ++o) { for (var nt = o - ri, ei = Math.max(0, Math.ceil(nt / d)), oi = Math.min(ti, (w + nt) / d), rt = 0, h = ui; h < fi; ++h)for (ut = h * b - g, f = ei; f < oi; ++f)for (var si = ct * e + lt * h + at * f, hi = yt * (p - 1 - ut) + pt * (w - 1 - (f * d - nt)) + wt * r, c = 0; c < it; ++c)rt += ht[si + (r * it + c)] * vt[hi + c]; ft[et * e + ot * u + st * o + r] = rt } return l.toTensor() }, t.prototype.depthwiseConv2DDerFilter = function (n, t, i) { var e, d, o, g; s([n, t], "depthwiseConv2DDerFilter"); for (var c = i.strideHeight, l = i.strideWidth, nt = i.filterHeight, tt = i.filterWidth, y = k(i.filterShape, "float32"), a = i.padInfo.left, v = i.padInfo.top, p = i.outChannels / i.inChannels, it = this.bufferSync(n), rt = this.bufferSync(t), r = 0; r < nt; ++r)for (var ut = Math.max(0, Math.ceil((v - r) / c)), ft = Math.min(i.outHeight, (i.inHeight + v - r) / c), u = 0; u < tt; ++u)for (var et = Math.max(0, Math.ceil((a - u) / l)), ot = Math.min(i.outWidth, (i.inWidth + a - u) / l), f = 0; f < i.outChannels; ++f) { for (var w = Math.trunc(f / p), st = f % p, b = 0, h = 0; h < i.batchSize; ++h)for (e = ut; e < ft; ++e)for (d = r + e * c - v, o = et; o < ot; ++o)g = u + o * l - a, b += it.get(h, d, g, w) * rt.get(h, e, o, f); y.set(b, r, u, w, st) } return y.toTensor() }, t.prototype.tile = function (n, t) { return s(n, "tile"), uft(this.bufferSync(n), t) }, t.prototype.pad = function (n, t, i) { var u, e, o; s(n, "pad"); var h = t.map(function (t, i) { return t[0] + n.shape[i] + t[1] }), c = t.map(function (n) { return n[0] }), f = this.bufferSync(n), r = k(h, n.dtype); for (0 !== i && r.values.fill(i), u = 0; u < n.size; u++)e = f.indexToLoc(u), o = e.map(function (n, t) { return n + c[t] }), r.set.apply(r, [f.get.apply(f, e)].concat(o)); return r.toTensor() }, t.prototype.transpose = function (n, t) { var r, i, h; for (s(n, "transpose"), r = new Array(n.rank), i = 0; i < r.length; i++)r[i] = n.shape[t[i]]; var c = this.readSync(n.dataId), f = k(r, n.dtype), l = this.bufferSync(n); for (i = 0; i < n.size; ++i) { for (var o = l.indexToLoc(i), e = new Array(o.length), u = 0; u < e.length; u++)e[u] = o[t[u]]; h = f.locToIndex(e); f.values[h] = c[i] } return f.toTensor() }, t.prototype.gather = function (n, t, i) { var f, e, o, h, l; s([n, t], "gather"); f = n.shape.slice(); e = this.readSync(t.dataId); f[i] = e.length; for (var r = k(f, n.dtype), c = this.bufferSync(n), u = 0; u < r.size; ++u)o = r.indexToLoc(u), h = o.slice(), h[i] = e[o[i]], l = c.locToIndex(h), r.values[u] = c.values[l]; return r.toTensor() }, t.prototype.batchToSpaceND = function (n, t, i) { s([n], "batchToSpaceND"); var r = t.reduce(function (n, t) { return n * t }), u = rl(n.shape, t, r), e = ul(u.length, t.length), f = fl(n.shape, t, r), o = sut(i, t.length), h = hut(f, i, t.length); return n.reshape(u).transpose(e).reshape(f).slice(o, h) }, t.prototype.spaceToBatchND = function (n, t, i) { var u, r, f; for (s([n], "spaceToBatchND"), u = t.reduce(function (n, t) { return n * t }), r = [[0, 0]], r.push.apply(r, i), f = 1 + t.length; f < n.shape.length; ++f)r.push([0, 0]); var e = n.pad(r), o = rl(e.shape, t, u, !1), h = ul(o.length, t.length, !1), c = fl(e.shape, t, u, !1); return e.reshape(o).transpose(h).reshape(c) }, t.prototype.pool = function (n, t, i) { var r, b, h, c; s(n, "pool"); for (var d = t.strideHeight, g = t.strideWidth, nt = t.dilationHeight, tt = t.dilationWidth, it = t.effectiveFilterHeight, rt = t.effectiveFilterWidth, ut = t.padInfo.top, ft = t.padInfo.left, et = "max" === i ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY, ot = this.readSync(n.dataId), a = k(t.outShape, n.dtype), st = a.values, ht = t.outShape[1] * t.outShape[2] * t.outShape[3], ct = t.outShape[2] * t.outShape[3], lt = t.outShape[3], u = 0; u < t.batchSize; ++u)for (var at = u * ht, vt = u * n.strides[0], f = 0; f < t.inChannels; ++f)for (r = 0; r < t.outHeight; ++r)for (var v = r * d - ut, yt = Math.max(0, v), pt = Math.min(t.inHeight, it + v), wt = at + r * ct, e = 0; e < t.outWidth; ++e) { for (var y = e * g - ft, bt = Math.max(0, y), kt = Math.min(t.inWidth, rt + y), o = et, p = 0, w = 0, l = yt; l < pt; l += nt) { for (b = vt + l * n.strides[1], h = bt; h < kt; h += tt)c = ot[b + h * n.strides[2] + f], "max" === i && c > o ? o = c : "avg" === i && (p += c, w++); if (isNaN(o)) break } st[wt + e * lt + f] = "avg" === i ? p / w : o } return a.toTensor() }, t.prototype.maxPool = function (n, t) { return this.pool(n, t, "max") }, t.prototype.maxPoolPositions = function (n, t) { for (var i, r, o, s, b, u, h, c, nt, f, tt, a, v = k(t.outShape, "int32"), it = t.strideHeight, rt = t.strideWidth, y = t.dilationHeight, p = t.dilationWidth, ut = t.effectiveFilterHeight, w = t.effectiveFilterWidth, ft = t.padInfo.top, et = t.padInfo.left, ot = this.bufferSync(n), e = 0; e < t.batchSize; ++e)for (i = 0; i < t.inChannels; ++i)for (r = 0; r < t.outHeight; ++r) { for (o = r * it - ft, s = o; s < 0;)s += y; for (b = Math.min(t.inHeight, ut + o), u = 0; u < t.outWidth; ++u) { for (h = u * rt - et, c = h; c < 0;)c += p; for (var st = Math.min(t.inWidth, w + h), d = Number.NEGATIVE_INFINITY, g = -1, l = s; l < b; l += y)for (nt = l - o, f = c; f < st; f += p)tt = f - h, a = ot.get(e, l, f, i), a > d && (d = a, g = nt * w + tt); v.set(g, e, r, u, i) } } return v.toTensor() }, t.prototype.maxPoolBackprop = function (n, t, i, r) { var e, h, c, u, l, f, p; s([t, i], "maxPoolBackprop"); for (var d = this.maxPoolPositions(t, r), g = r.strideHeight, nt = r.strideWidth, tt = r.dilationHeight, it = r.dilationWidth, y = r.effectiveFilterHeight, a = r.effectiveFilterWidth, rt = a - 1 - r.padInfo.left, ut = y - 1 - r.padInfo.top, w = k(t.shape, "float32"), ft = this.bufferSync(d), et = this.bufferSync(n), o = 0; o < r.batchSize; ++o)for (e = 0; e < r.inChannels; ++e)for (h = 0; h < r.inHeight; ++h)for (c = 0; c < r.inWidth; ++c) { for (var ot = h - ut, st = c - rt, b = 0, v = 0; v < y; v += tt)if (u = (ot + v) / g, !(u < 0 || u >= r.outHeight || Math.floor(u) !== u)) for (l = 0; l < a; l += it)f = (st + l) / nt, f < 0 || f >= r.outWidth || Math.floor(f) !== f || (p = y * a - 1 - ft.get(o, u, f, e) === v * a + l ? 1 : 0, 0 !== p && (b += et.get(o, u, f, e) * p)); w.set(b, o, h, c, e) } return w.toTensor() }, t.prototype.avgPoolBackprop = function (n, t, i) { var f, e, o, r, c, u; s([n, t], "avgPoolBackprop"); for (var w = i.strideHeight, b = i.strideWidth, d = i.filterHeight, g = i.filterWidth, nt = i.dilationHeight, tt = i.dilationWidth, a = i.effectiveFilterHeight, v = i.effectiveFilterWidth, it = v - 1 - i.padInfo.left, rt = a - 1 - i.padInfo.top, y = k(t.shape, "float32"), ut = 1 / (d * g), ft = this.bufferSync(n), h = 0; h < i.batchSize; ++h)for (f = 0; f < i.inChannels; ++f)for (e = 0; e < i.inHeight; ++e)for (o = 0; o < i.inWidth; ++o) { for (var et = e - rt, ot = o - it, p = 0, l = 0; l < a; l += nt)if (r = (et + l) / w, !(r < 0 || r >= i.outHeight || Math.floor(r) !== r)) for (c = 0; c < v; c += tt)u = (ot + c) / b, u < 0 || u >= i.outWidth || Math.floor(u) !== u || (p += ft.get(h, r, u, f)); y.set(p * ut, h, e, o, f) } return y.toTensor() }, t.prototype.pool3d = function (n, t, i) { var u, w, o, b, c, d, a, et, v, ot, y, p; s(n, "pool3d"); for (var st = t.strideDepth, ht = t.strideHeight, ct = t.strideWidth, nt = t.dilationDepth, tt = t.dilationHeight, it = t.dilationWidth, lt = t.effectiveFilterDepth, at = t.effectiveFilterHeight, vt = t.effectiveFilterWidth, yt = t.padInfo.front, pt = t.padInfo.top, wt = t.padInfo.left, bt = "max" === i ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY, kt = this.readSync(n.dataId), rt = k(t.outShape, n.dtype), dt = rt.values, gt = t.outShape[1] * t.outShape[2] * t.outShape[3] * t.outShape[4], ni = t.outShape[2] * t.outShape[3] * t.outShape[4], ti = t.outShape[3] * t.outShape[4], ii = t.outShape[4], f = 0; f < t.batchSize; ++f)for (var ri = f * gt, ui = f * n.strides[0], e = 0; e < t.inChannels; ++e)for (u = 0; u < t.outDepth; ++u) { for (w = u * st - yt, o = w; o < 0;)o += nt; for (var fi = Math.min(t.inDepth, lt + w), ei = ri + u * ni, h = 0; h < t.outHeight; ++h) { for (b = h * ht - pt, c = b; c < 0;)c += tt; for (var oi = Math.min(t.inHeight, at + b), si = ei + h * ti, l = 0; l < t.outWidth; ++l) { for (d = l * ct - wt, a = d; a < 0;)a += it; for (var hi = Math.min(t.inWidth, vt + d), ci = si + l * ii, r = bt, ut = 0, ft = 0, g = o; g < fi; g += nt) { for (et = ui + g * n.strides[1], v = c; v < oi; v += tt) { for (ot = et + v * n.strides[2], y = a; y < hi; y += it)if (p = kt[ot + y * n.strides[3] + e], "max" === i && p > r ? r = p : "avg" === i && (ut += p, ft++), isNaN(r)) break; if (isNaN(r)) break } if (isNaN(r)) break } dt[ci + e] = "avg" === i ? ut / ft : r } } } return rt.toTensor() }, t.prototype.avgPool3d = function (n, t) { return s(n, "avgPool3d"), this.pool3d(n, t, "avg").toFloat() }, t.prototype.avgPool3dBackprop = function (n, t, i) { var e, o, h, c, r, a, u, v, f; s([n, t], "avgPool3dBackprop"); for (var nt = i.strideDepth, tt = i.strideHeight, it = i.strideWidth, rt = i.filterDepth, ut = i.filterHeight, ft = i.filterWidth, et = i.dilationDepth, ot = i.dilationHeight, st = i.dilationWidth, p = i.effectiveFilterDepth, w = i.effectiveFilterHeight, b = i.effectiveFilterWidth, ht = p - 1 - i.padInfo.front, ct = b - 1 - i.padInfo.left, lt = w - 1 - i.padInfo.top, d = k(t.shape, "float32"), at = 1 / (rt * ut * ft), vt = this.bufferSync(n), l = 0; l < i.batchSize; ++l)for (e = 0; e < i.inChannels; ++e)for (o = 0; o < i.inDepth; ++o)for (h = 0; h < i.inHeight; ++h)for (c = 0; c < i.inWidth; ++c) { for (var yt = o - ht, pt = h - lt, wt = c - ct, g = 0, y = 0; y < p; y += et)if (r = (yt + y) / nt, !(r < 0 || r >= i.outDepth || Math.floor(r) !== r)) for (a = 0; a < w; a += ot)if (u = (pt + a) / tt, !(u < 0 || u >= i.outHeight || Math.floor(u) !== u)) for (v = 0; v < b; v += st)f = (wt + v) / it, f < 0 || f >= i.outWidth || Math.floor(f) !== f || (g += vt.get(l, r, u, f, e)); d.set(g * at, l, o, h, c, e) } return d.toTensor() }, t.prototype.maxPool3d = function (n, t) { return s(n, "maxPool3d"), this.pool3d(n, t, "max").toFloat() }, t.prototype.maxPool3dPositions = function (n, t) { for (var i, r, h, c, rt, u, l, a, ut, f, v, y, ot, e, st, o, ht, b, d = k(t.outShape, "int32"), ct = t.strideDepth, lt = t.strideHeight, at = t.strideWidth, g = t.dilationDepth, nt = t.dilationHeight, tt = t.dilationWidth, vt = t.effectiveFilterDepth, w = t.effectiveFilterHeight, it = t.effectiveFilterWidth, yt = t.padInfo.front, pt = t.padInfo.top, wt = t.padInfo.left, bt = this.bufferSync(n), s = 0; s < t.batchSize; ++s)for (i = 0; i < t.inChannels; ++i)for (r = 0; r < t.outDepth; ++r) { for (h = r * ct - yt, c = h; c < 0;)c += g; for (rt = Math.min(t.inDepth, vt + h), u = 0; u < t.outHeight; ++u) { for (l = u * lt - pt, a = l; a < 0;)a += nt; for (ut = Math.min(t.inHeight, w + l), f = 0; f < t.outWidth; ++f) { for (v = f * at - wt, y = v; y < 0;)y += tt; for (var kt = Math.min(t.inWidth, it + v), ft = Number.NEGATIVE_INFINITY, et = -1, p = c; p < rt; p += g)for (ot = p - h, e = a; e < ut; e += nt)for (st = e - l, o = y; o < kt; o += tt)ht = o - v, b = bt.get(s, p, e, o, i), b >= ft && (ft = b, et = ot * w * it + st * w + ht); d.set(et, s, r, u, f, i) } } } return d.toTensor() }, t.prototype.maxPool3dBackprop = function (n, t, i, r) { var o, l, a, v, u, y, f, p, e, g; s([t, i], "maxPool3dBackprop"); for (var it = this.maxPool3dPositions(t, r), rt = r.strideDepth, ut = r.strideHeight, ft = r.strideWidth, et = r.dilationDepth, ot = r.dilationHeight, st = r.dilationWidth, d = r.effectiveFilterDepth, w = r.effectiveFilterHeight, h = r.effectiveFilterWidth, ht = d - 1 - r.padInfo.front, ct = h - 1 - r.padInfo.left, lt = w - 1 - r.padInfo.top, nt = k(t.shape, "float32"), at = this.bufferSync(it), vt = this.bufferSync(n), c = 0; c < r.batchSize; ++c)for (o = 0; o < r.inChannels; ++o)for (l = 0; l < r.inDepth; ++l)for (a = 0; a < r.inHeight; ++a)for (v = 0; v < r.inWidth; ++v) { for (var yt = l - ht, pt = a - lt, wt = v - ct, tt = 0, b = 0; b < d; b += et)if (u = (yt + b) / rt, !(u < 0 || u >= r.outDepth || Math.floor(u) !== u)) for (y = 0; y < w; y += ot)if (f = (pt + y) / ut, !(f < 0 || f >= r.outHeight || Math.floor(f) !== f)) for (p = 0; p < h; p += st)e = (wt + p) / ft, e < 0 || e >= r.outWidth || Math.floor(e) !== e || (g = d * w * h - 1 - at.get(c, u, f, e, o) === b * w * h + y * h + p ? 1 : 0, 0 !== g && (tt += vt.get(c, u, f, e, o) * g)); nt.set(tt, c, l, a, v, o) } return nt.toTensor() }, t.prototype.cast = function (n, t) { return ew(n, t, this) }, t.prototype.reshape = function (n, t) { return al(n, t) }, t.prototype.avgPool = function (n, t) { return s(n, "avgPool"), this.pool(n, t, "avg").toFloat() }, t.prototype.resizeBilinear = function (n, t, i, r) { var h; s(n, "resizeBilinear"); for (var f = n.shape, c = f[0], l = f[1], a = f[2], v = f[3], e = this.readSync(n.dataId), d = new Float32Array(w([c, t, i, v])), g = [r && t > 1 ? l - 1 : l, r && i > 1 ? a - 1 : a], nt = [r && t > 1 ? t - 1 : t, r && i > 1 ? i - 1 : i], ht = 0, ct = g[0] / nt[0], lt = g[1] / nt[1], o = 0; o < c; o++)for (h = 0; h < t; h++)for (var y = ct * h, tt = Math.floor(y), at = y - tt, vt = Math.min(l - 1, Math.ceil(y)), it = o * n.strides[0] + tt * n.strides[1], rt = o * n.strides[0] + vt * n.strides[1], p = 0; p < i; p++)for (var b = lt * p, k = Math.floor(b), ut = b - k, ft = Math.min(a - 1, Math.ceil(b)), yt = it + k * n.strides[2], pt = rt + k * n.strides[2], wt = it + ft * n.strides[2], bt = rt + ft * n.strides[2], u = 0; u < v; u++) { var et = e[yt + u], ot = e[pt + u], st = et + (e[wt + u] - et) * ut, kt = st + (ot + (e[bt + u] - ot) * ut - st) * at; d[ht++] = kt } return fi(d, [c, t, i, v]) }, t.prototype.resizeBilinearBackprop = function (n, t, i) { var w, a, c; s([n, t], "resizeBilinearBackprop"); for (var l = t.shape, v = l[0], u = l[1], f = l[2], y = l[3], it = n.shape, e = it[1], o = it[2], h = new Float32Array(v * u * f * y), rt = [i && e > 1 ? u - 1 : u, i && o > 1 ? f - 1 : f], ut = [i && e > 1 ? e - 1 : e, i && o > 1 ? o - 1 : o], lt = rt[0] / ut[0], at = rt[1] / ut[1], vt = this.readSync(n.dataId), yt = 0, p = 0; p < v; p++)for (w = p * t.strides[0], a = 0; a < e; a++)for (var b = a * lt, ft = Math.floor(b), pt = Math.min(Math.ceil(b), u - 1), et = w + ft * t.strides[1], ot = w + pt * t.strides[1], k = b - ft, st = 1 - k, d = 0; d < o; d++)for (var g = d * at, nt = Math.floor(g), ht = Math.min(Math.ceil(g), f - 1), tt = g - nt, ct = 1 - tt, wt = et + nt * t.strides[2], bt = et + ht * t.strides[2], kt = ot + nt * t.strides[2], dt = ot + ht * t.strides[2], gt = st * ct, ni = st * tt, ti = k * ct, ii = k * tt, r = 0; r < y; r++)c = vt[yt++], h[wt + r] += c * gt, h[bt + r] += c * ni, h[kt + r] += c * ti, h[dt + r] += c * ii; return yi(h, [v, f, u, y], t.dtype) }, t.prototype.resizeNearestNeighbor = function (n, t, i, r) { var b, f, g; s(n, "resizeNearestNeighbor"); for (var u = n.shape, e = u[0], o = u[1], h = u[2], c = u[3], nt = this.readSync(n.dataId), y = new Float32Array(e * t * i * c), p = [r && t > 1 ? o - 1 : o, r && i > 1 ? h - 1 : h], w = [r && t > 1 ? t - 1 : t, r && i > 1 ? i - 1 : i], tt = p[0] / w[0], it = p[1] / w[1], rt = 0, l = 0; l < e; l++)for (b = l * n.strides[0], f = 0; f < t; f++)for (var k = tt * f, ut = b + Math.min(o - 1, r ? Math.round(k) : Math.floor(k)) * n.strides[1], a = 0; a < i; a++)for (var d = it * a, ft = ut + Math.min(h - 1, r ? Math.round(d) : Math.floor(d)) * n.strides[2], v = 0; v < c; v++)g = nt[ft + v], y[rt++] = g; return fi(y, [e, t, i, c], n.dtype) }, t.prototype.resizeNearestNeighborBackprop = function (n, t, i) { var b, r, k, y, c, at, d, p, l, vt, g; s([n, t], "resizeNearestNeighborBackprop"); for (var a = t.shape, nt = a[0], u = a[1], f = a[2], tt = a[3], it = n.shape, e = it[1], o = it[2], rt = new Float32Array(nt * u * f * tt), yt = this.readSync(n.dataId), ut = [i && e > 1 ? u - 1 : u, i && o > 1 ? f - 1 : f], ft = [i && e > 1 ? e - 1 : e, i && o > 1 ? o - 1 : o], et = ut[0] / ft[0], ot = ut[1] / ft[1], st = 1 / et, ht = 1 / ot, ct = 2 * Math.ceil(st) + 2, lt = 2 * Math.ceil(ht) + 2, w = 0; w < nt; w++)for (b = w * t.strides[0], r = 0; r < u; r++)for (var pt = b + r * t.strides[1], wt = Math.floor(r * st), bt = Math.floor(wt - ct / 2), h = 0; h < f; h++)for (var kt = pt + h * t.strides[2], dt = Math.floor(h * ht), gt = Math.floor(dt - lt / 2), v = 0; v < tt; v++) { for (k = 0, y = 0; y < ct; y++)if (c = y + bt, !(c < 0 || c >= e) && (at = b + c * n.strides[1], d = c * et, r === Math.min(u - 1, i ? Math.round(d) : Math.floor(d)))) for (p = 0; p < lt; p++)l = p + gt, l < 0 || l >= o || (vt = at + l * n.strides[2], g = l * ot, h === Math.min(f - 1, i ? Math.round(g) : Math.floor(g)) && (k += yt[vt + v])); rt[kt + v] = k } return yi(rt, t.shape, t.dtype) }, t.prototype.batchNormalization = function (n, t, i, r, u, f) { s([n, t, i, u, f], "batchNorm"); for (var o = this.readSync(n.dataId), v = this.readSync(t.dataId), y = this.readSync(i.dataId), p = u ? this.readSync(u.dataId) : new Float32Array([1]), w = f ? this.readSync(f.dataId) : new Float32Array([0]), b = new Float32Array(o.length), k = w.length, d = p.length, g = y.length, nt = v.length, h = 0, c = 0, l = 0, a = 0, e = 0; e < o.length; ++e)b[e] = w[h++] + (o[e] - v[c++]) * p[l++] / Math.sqrt(y[a++] + r), h >= k && (h = 0), c >= nt && (c = 0), l >= d && (l = 0), a >= g && (a = 0); return yi(b, n.shape) }, t.prototype.localResponseNormalization4D = function (n, t, i, r, u) { function y(n) { for (var u, i = n % e, r = n - i + Math.max(0, i - t), s = n - i + Math.min(i + t, v), f = 0; r <= s; r++)u = o[r], f += u * u; return f } var f, l, a; s(n, "localResponseNormalization4D"); var e = n.shape[3], v = e - 1, o = this.readSync(n.dataId), h = n.size, c = new Float32Array(h); for (f = 0; f < h; f++)l = y(f), a = o[f] * Math.pow(i + r * l, -u), c[f] = a; return yi(c, n.shape) }, t.prototype.LRNGrad = function (n, t, i, r, u, f, e) { var a; s(n, "LRNGrad"); for (var v = n.shape[3], k = this.readSync(n.dataId), y = this.readSync(t.dataId), d = this.readSync(i.dataId), p = new Float32Array(n.size), g = n.size, h = 0; h < g; h++) { for (var l = h % v, w = h - l + Math.max(0, l - r), b = h - l + Math.min(v, l + r + 1), c = 0, o = w; o < b; o++)c += Math.pow(y[o], 2); for (c = f * c + u, o = w; o < b; o++)a = -2 * f * e * y[o] * d[h] / c, h === o && (a += Math.pow(c, -e)), a *= k[h], p[o] += a } return yi(p, n.shape) }, t.prototype.multinomial = function (n, t, i, r) { var l, u, f, k, e; s(n, "multinomial"); for (var c = t ? n : fu(n), a = c.shape[0], v = c.shape[1], y = ot([a, i], "int32"), p = this.readSync(y.dataId), w = this.readSync(c.dataId), o = 0; o < a; ++o) { for (l = o * v, u = new Float32Array(v - 1), u[0] = w[l], f = 1; f < u.length; ++f)u[f] = u[f - 1] + w[l + f]; for (var d = tl(r.toString()), b = o * i, h = 0; h < i; ++h)for (k = d(), p[b + h] = u.length, e = 0; e < u.length; e++)if (k < u[e]) { p[b + h] = e; break } } return y }, t.prototype.oneHot = function (n, t, i, r) { var f, e, u; for (s(n, "oneHot"), f = new Float32Array(n.size * t), f.fill(r), e = this.readSync(n.dataId), u = 0; u < n.size; ++u)e[u] >= 0 && e[u] < t && (f[u * t + e[u]] = i); return lu(f, [n.size, t], "int32") }, t.prototype.nonMaxSuppression = function (n, t, i, r, u) { return s(n, "nonMaxSuppression"), hw(this.readSync(n.dataId), this.readSync(t.dataId), i, r, u) }, t.prototype.fft = function (n) { return this.fftBatch(n, !1) }, t.prototype.ifft = function (n) { return this.fftBatch(n, !0) }, t.prototype.fftBatch = function (n, t) { for (var e, f = n.shape[0], i = n.shape[1], o = k(n.shape, "float32"), s = k(n.shape, "float32"), h = ir(n).as2D(f, i), c = yr(n).as2D(f, i), r = 0; r < f; r++)for (var l = h.slice([r, 0], [1, i]), a = c.slice([r, 0], [1, i]), v = ui(l, a), y = this.readSync(this.fftImpl(v, t).dataId), u = 0; u < i; u++)e = nft(y, u), o.values[r * i + u] = e.real, s.values[r * i + u] = e.imag; return ui(o.toTensor(), s.toTensor()).as2D(f, i) }, t.prototype.fftImpl = function (n, t) { var f = n.as1D(), i = f.size, r, e, u; return this.isExponentOf2(i) ? (r = this.fftRadix2(f, i, t).as2D(n.shape[0], n.shape[1]), t && (r = ui(ir(r).div(h(i)), yr(r).div(h(i)))), r) : (e = this.readSync(n.dataId), u = function (n) { for (var i = new Float32Array(n.length / 2), r = new Float32Array(n.length / 2), t = 0; t < n.length; t += 2)i[t / 2] = n[t], r[t / 2] = n[t + 1]; return { real: i, imag: r } }(this.fourierTransformByMatmul(e, i, t)), ui(u.real, u.imag).as2D(n.shape[0], n.shape[1])) }, t.prototype.isExponentOf2 = function (n) { return 0 == (n & n - 1) }, t.prototype.fftRadix2 = function (n, t, i) { if (1 === t) return n; var f = this.readSync(n.dataId), e = t / 2, o = function (n) { for (var i = Math.ceil(n.length / 4), r = new Float32Array(i), u = new Float32Array(i), t = 0; t < n.length; t += 4)r[Math.floor(t / 4)] = n[t], u[Math.floor(t / 4)] = n[t + 1]; return { real: r, imag: u } }(f), r = ui(o.real, o.imag).as1D(), s = function (n) { for (var i = Math.floor(n.length / 4), r = new Float32Array(i), u = new Float32Array(i), t = 2; t < n.length; t += 4)r[Math.floor(t / 4)] = n[t], u[Math.floor(t / 4)] = n[t + 1]; return { real: r, imag: u } }(f), u = ui(s.real, s.imag).as1D(); r = this.fftRadix2(r, e, i); u = this.fftRadix2(u, e, i); var h = function (n, t) { for (var r, u = new Float32Array(n / 2), f = new Float32Array(n / 2), i = 0; i < Math.ceil(n / 2); i++)r = (t ? 2 : -2) * Math.PI * (i / n), u[i] = Math.cos(r), f[i] = Math.sin(r); return { real: u, imag: f } }(t, i), c = ui(h.real, h.imag).mul(u), l = r.add(c), a = r.sub(c), v = ir(l).concat(ir(a)), y = yr(l).concat(yr(a)); return ui(v, y).as1D() }, t.prototype.fourierTransformByMatmul = function (n, t, i) { for (var u, f, o = new Float32Array(2 * t), r = 0; r < t; r++) { for (var s = 0, h = 0, e = 0; e < t; e++)u = dkt(r * e, t, i), f = nft(n, e), s += f.real * u.real - f.imag * u.imag, h += f.real * u.imag + f.imag * u.real; i && (s /= t, h /= t); kkt(o, s, h, r) } return o }, t.prototype.depthToSpace = function (n, t, r) { var u, w; i("NHWC" === r, function () { return "Only NHWC dataFormat supported on CPU for depthToSpace. Got " + r }); i(t > 1, function () { return "blockSize should be > 1 for depthToSpace, but was: " + t }); for (var o = n.shape[0], a = n.shape[1], v = n.shape[2], y = n.shape[3], s = a * t, h = v * t, f = y / (t * t), b = this.readSync(n.dataId), p = new Float32Array(o * s * h * f), k = 0, c = 0; c < o; ++c)for (u = 0; u < s; ++u)for (var d = Math.floor(u / t), g = u % t, e = 0; e < h; ++e)for (var nt = Math.floor(e / t), tt = (g * t + e % t) * f, l = 0; l < f; ++l)w = l + tt + y * (nt + v * (d + a * c)), p[k++] = b[w]; return yi(p, [o, s, h, f]) }, t.prototype.broadcastedBinaryOp = function (n, t, i, r) { var e = tt(n.shape, t.shape), o = k(e, i), s = this.readSync(n.dataId), h = this.readSync(t.dataId), c = au(n.shape, e), l = au(t.shape, e), f = o.values, u; if (c.length + l.length === 0) for (u = 0; u < f.length; ++u)f[u] = r(s[u % s.length], h[u % h.length]); else { var a = this.bufferSync(n), v = this.bufferSync(t), y = function (i) { var e = o.indexToLoc(i), y = e.slice(-n.rank), p, u, w; c.forEach(function (n) { return y[n] = 0 }); p = a.locToIndex(y); u = e.slice(-t.rank); l.forEach(function (n) { return u[n] = 0 }); w = v.locToIndex(u); f[i] = r(s[p], h[w]) }; for (u = 0; u < f.length; ++u)y(u) } return o.toTensor() }, t.prototype.broadcastedBinaryComplexOp = function (n, t, i) { var e = tt(n.shape, t.shape), s = k(e, "float32"), h = k(e, "float32"), u = this.readSync(n.dataId), f = this.readSync(t.dataId), c = au(n.shape, e), l = au(t.shape, e), o = s.values, a = h.values, r; if (c.length + l.length === 0) for (r = 0; r < o.length; r++) { var v = r % u.length, y = r % f.length, p = i(u[2 * v], u[2 * v + 1], f[2 * y], f[2 * y + 1]); o[r] = p.real; a[r] = p.imag } else { var w = this.bufferSync(this.data.get(n.dataId).complexTensors.real), b = this.bufferSync(this.data.get(t.dataId).complexTensors.real), d = function (r) { var p = s.indexToLoc(r), k = p.slice(-n.rank), e, h, v, y; c.forEach(function (n) { return k[n] = 0 }); e = w.locToIndex(k); h = p.slice(-t.rank); l.forEach(function (n) { return h[n] = 0 }); v = b.locToIndex(h); y = i(u[2 * e], u[2 * e + 1], f[2 * v], f[2 * v + 1]); o[r] = y.real; a[r] = y.imag }; for (r = 0; r < o.length; r++)d(r) } return this.complex(s.toTensor(), h.toTensor()) }, t.prototype.split = function (n, t, i) { return rft(n, t, i) }, t.prototype.dispose = function () { }, t.prototype.floatPrecision = function () { return 32 }, t.prototype.epsilon = function () { return 1e-7 }, t.prototype.cropAndResize = function (n, t, i, r, u, f) { for (var b, o, e, c, y, gt, ni, ti, ii, rt = n.shape, ri = rt[0], ut = rt[1], p = rt[2], d = rt[3], lt = t.shape[0], nt = r[0], a = r[1], w = k([lt, nt, a, d], "float32"), ft = this.readSync(t.dataId), ui = this.readSync(i.dataId), tt = this.readSync(n.dataId), s = n.strides, h = w.strides, l = 0; l < lt; l++) { var et = 4 * l, ot = ft[et], it = ft[et + 1], at = ft[et + 2], st = ft[et + 3], g = ui[l]; if (!(g >= ri)) for (var fi = nt > 1 ? (at - ot) * (ut - 1) / (nt - 1) : 0, vt = a > 1 ? (st - it) * (p - 1) / (a - 1) : 0, v = 0; v < nt; v++)if (b = nt > 1 ? ot * (ut - 1) + v * fi : .5 * (ot + at) * (ut - 1), b < 0 || b > ut - 1) for (o = 0; o < a; o++)for (e = 0; e < d; e++)c = e + o * h[2] + v * h[1] + l * h[0], w.values[c] = f; else if ("bilinear" === u) { var ht = Math.floor(b), yt = Math.ceil(b), ei = b - ht; for (o = 0; o < a; o++)if ((y = a > 1 ? it * (p - 1) + o * vt : .5 * (it + st) * (p - 1)) < 0 || y > p - 1) for (e = 0; e < d; e++)c = e + o * h[2] + v * h[1] + l * h[0], w.values[c] = f; else { var ct = Math.floor(y), pt = Math.ceil(y), wt = y - ct; for (e = 0; e < d; e++) { var bt = tt[c = e + ct * s[2] + ht * s[1] + g * s[0]], oi = tt[c = e + pt * s[2] + ht * s[1] + g * s[0]], kt = tt[c = e + ct * s[2] + yt * s[1] + g * s[0]], dt = bt + (oi - bt) * wt, si = kt + (tt[c = e + pt * s[2] + yt * s[1] + g * s[0]] - kt) * wt; c = e + o * h[2] + v * h[1] + l * h[0]; w.values[c] = dt + (si - dt) * ei } } } else for (o = 0; o < a; ++o)if ((y = a > 1 ? it * (p - 1) + o * vt : .5 * (it + st) * (p - 1)) < 0 || y > p - 1) for (e = 0; e < d; e++)c = e + o * h[2] + v * h[1] + l * h[0], w.values[c] = f; else for (gt = Math.round(y), ni = Math.round(b), e = 0; e < d; e++)ti = e + gt * s[2] + ni * s[1] + g * s[0], ii = e + o * h[2] + v * h[1] + l * h[0], w.values[ii] = tt[ti] } return w.toTensor() }, t.prototype.sparseToDense = function (n, t, i, r) { var u = ks(0, n, i), f = u.sliceRank, e = u.numUpdates, o = u.sliceSize, s = u.strides, h = u.outputSize; return this.scatter(n, t, i, h, o, e, f, s, r, !1) }, t.prototype.gatherND = function (n, t) { var c = t.shape, l = c[c.length - 1], u = dp(n, t), a = u[0], s = u[1], i = u[2], p = u[3], h, r; if (0 === s) return fi([], a, n.dtype); for (var v = new no([s, i], n.dtype), w = this.readSync(t.dataId), b = this.readSync(n.dataId), f = 0; f < s; f++) { for (var y = [], e = 0, o = 0; o < l; o++)h = w[f * l + o], e += h * p[o], y.push(h); if (e < 0 || e >= n.size / i) throw new Error("Invalid indices: " + y + " does not index into " + n.shape); for (r = 0; r < i; r++)v.values[f * i + r] = b[e * i + r] } return v.toTensor().reshape(a) }, t.prototype.scatterND = function (n, t, i) { var r = ks(0, n, i), u = r.sliceRank, f = r.numUpdates, e = r.sliceSize, o = r.strides, s = r.outputSize, c = h(0); return this.scatter(n, t, i, s, e, f, u, o, c, !0) }, t.prototype.fill = function (n, t, i) { var u = rs(i = i || de(t), w(n)); return u.fill(t), r.makeTensor(u, n, i, this) }, t.prototype.onesLike = function (n) { if ("string" === n.dtype) throw new Error("onesLike is not supported for string tensors"); return this.fill(n.shape, 1, n.dtype) }, t.prototype.zerosLike = function (n) { var t = rs(n.dtype, w(n.shape)); return this.makeOutput(t, n.shape, n.dtype) }, t.prototype.linspace = function (n, t, i) { return ow(n, t, i) }, t.prototype.scatter = function (n, t, i, r, u, f, e, o, s, h) { var k = [r / u, u], d = this.readSync(n.dataId), p = this.readSync(t.dataId), a, l, w, c; if (0 === r) return fi([], i, t.dtype); for (a = new no(k, t.dtype), a.values.fill(this.readSync(s.dataId)[0]), l = 0; l < f; l++) { for (var b = [], v = 0, y = 0; y < e; y++)w = d[l * e + y], b.push(w), v += w * o[y]; if (v < 0 || v >= r / u) throw new Error("Invalid indices: " + b + " does not index into " + i); for (c = 0; c < u; c++)h ? a.values[v * u + c] += p[l * u + c] : a.values[v * u + c] = 0 === t.rank ? p[0] : p[l * u + c] } return a.toTensor().reshape(i) }, t }(rw), r.registerBackend("cpu", function () { return new evt }, 1), ha = 0, hk = [{ kernelName: "NonMaxSuppressionV5", backendName: "cpu", kernelFunc: function (n) { var e = n.inputs, o = n.backend, h = n.attrs, r = e, u = r.boxes, c = r.scores, t = h, l = t.maxOutputSize, a = t.iouThreshold, v = t.scoreThreshold, y = t.softNmsSigma, f = o, i; return s(u, "NonMaxSuppressionWithScore"), i = cw(f.data.get(u.dataId).values, f.data.get(c.dataId).values, l, a, v, y), [i.selectedIndices, i.selectedScores] } }, { kernelName: "Square", backendName: "cpu", kernelFunc: function (n) { var o = n.inputs, h = n.backend, t = o.x, f = h, u; s(t, "square"); for (var r = f.data.get(t.dataId).values, e = new Float32Array(r.length), i = 0; i < r.length; ++i)u = r[i], e[i] = u * u; return { dataId: f.write(e, t.shape, t.dtype), shape: t.shape, dtype: t.dtype } } }, { kernelName: uh, backendName: "cpu", kernelFunc: function (n) { var o = n.inputs, h = n.backend, u = o, t = u.a, i = u.b, r = h; s([t, i], uh); var c = r.data.get(t.dataId).values, l = r.data.get(i.dataId).values, f = function (n, t, i, r, u, f) { var o = tt(n, t), y = o.length, p = cr(o), s = ke(u, w(o)), h = n.length, c = t.length, b = cr(n), k = cr(t), l = au(n, o), a = au(t, o), e, v; if (l.length + a.length === 0) for (e = 0; e < s.length; ++e)s[e] = f(i[e % i.length], r[e % r.length]); else for (v = function (n) { var u = ett(n, y, p), e = u.slice(-h), o, t, v; l.forEach(function (n) { return e[n] = 0 }); o = by(e, h, b); t = u.slice(-c); a.forEach(function (n) { return t[n] = 0 }); v = by(t, c, k); s[n] = f(i[o], r[v]) }, e = 0; e < s.length; ++e)v(e); return [s, o] }(t.shape, i.shape, c, l, t.dtype, function (n, t) { var i = n - t; return i * i }), a = f[0], e = f[1]; return { dataId: r.write(a, e, t.dtype), shape: e, dtype: t.dtype } } }]; ha < hk.length; ha++)sy(hk[ha]); for (ovt = function (n) { this.variableNames = ["A"]; var t = li(), i = n[0], r = n[1]; this.outputShape = n; this.userCode = "\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" + r + ".0, " + i + ".0);\n\n        vec4 values = " + t.texture2D + "(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    " }, svt = function (n) { this.variableNames = ["A"]; this.packedInputs = !1; this.packedOutput = !0; var t = li(), i = n[0], r = n[1]; this.outputShape = n; this.userCode = "\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(" + r + ".0, " + i + ".0);\n            vec4 values = " + t.texture2D + "(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        " + t.output + " = result;\n      }\n    " }, ca = 0, ck = [{ kernelName: "FromPixels", backendName: "webgl", kernelFunc: function (n) { var a = n.inputs, i = n.backend, v = n.attrs, t = a.pixels, y = v.numChannels, e = "undefined" != typeof HTMLVideoElement && t instanceof HTMLVideoElement, p = "undefined" != typeof HTMLImageElement && t instanceof HTMLImageElement, s = e ? [t.videoWidth, t.videoHeight] : [t.width, t.height], u = s[0], f = s[1], w = [f, u], h = [f, u, y], r, c, l; return (p || e) && (null == ho && (ho = document.createElement("canvas").getContext("2d")), ho.canvas.width = u, ho.canvas.height = f, ho.drawImage(t, 0, 0, u, f), t = ho.canvas), r = i.makeTensorInfo(w, "int32"), i.texData.get(r.dataId).usage = gi.PIXELS, i.gpgpu.uploadPixelDataToTexture(i.getTexture(r.dataId), t), c = o().getBool("WEBGL_PACK") ? new svt(h) : new ovt(h), l = i.runWebGLProgram(c, [r], "int32"), i.disposeData(r.dataId), l } }, { kernelName: "NonMaxSuppressionV5", backendName: "webgl", kernelFunc: function (n) { var f = n.inputs, e = n.backend, o = n.attrs; kc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"); var i = f, s = i.boxes, h = i.scores, t = o, c = t.maxOutputSize, l = t.iouThreshold, a = t.scoreThreshold, v = t.softNmsSigma, r = e, u = cw(r.readSync(s.dataId), r.readSync(h.dataId), c, l, a, v); return [u.selectedIndices, u.selectedScores] } }, { kernelName: "Square", backendName: "webgl", kernelFunc: function (n) { var i = n.inputs, r = n.backend, t = i.x, u = r, f = new g(t.shape, "return x * x;"); return u.runWebGLProgram(f, [t], t.dtype) } }, { kernelName: uh, backendName: "webgl", kernelFunc: function (n) { var u = n.inputs, f = n.backend, r = u, t = r.a, i = r.b, e = f, s = o().getBool("WEBGL_PACK_BINARY_OPERATIONS") ? new vu("return (a - b) * (a - b);", t.shape, i.shape) : new at("return (a - b) * (a - b);", t.shape, i.shape); return e.compileAndRun(s, [t, i]) } }]; ca < ck.length; ca++)sy(ck[ca]); for (la = 0, lk = [{ kernelName: "Square", gradFunc: function (n, t) { var i = t[0]; return { x: function () { return n.mul(i.toFloat().mul(2)) } } } }, { kernelName: uh, gradFunc: function (n, t) { var i = t[0], r = t[1], u = h(2); return { a: function () { return si(n, si(u, dt(i, r))) }, b: function () { return si(n, si(u, dt(r, i))) } } } }]; la < lk.length; la++)pn(lk[la]); hvt = function () { function n() { } return n.prototype.fetch = function (n, t) { return fetch(n, t) }, n.prototype.now = function () { return performance.now() }, n.prototype.encode = function (n, t) { if ("utf-8" !== t && "utf8" !== t) throw new Error("Browser's encoder only supports utf-8, but got " + t); return null == this.textEncoder && (this.textEncoder = new TextEncoder), this.textEncoder.encode(n) }, n.prototype.decode = function (n, t) { return new TextDecoder(t).decode(n) }, n }(); o().get("IS_BROWSER") && o().setPlatform("browser", new hvt); cvt = function () { return require("node-fetch") }; lvt = function () { function n() { this.util = require("util"); this.textEncoder = new this.util.TextEncoder } return n.prototype.fetch = function (n, t) { return null != o().global.fetch ? o().global.fetch(n, t) : (null == ak && (ak = cvt()), ak(n, t)) }, n.prototype.now = function () { var n = process.hrtime(); return 1e3 * n[0] + n[1] / 1e6 }, n.prototype.encode = function (n, t) { if ("utf-8" !== t && "utf8" !== t) throw new Error("Node built-in encoder only supports utf-8, but got " + t); return this.textEncoder.encode(n) }, n.prototype.decode = function (n, t) { return 0 === n.length ? "" : new this.util.TextDecoder(t).decode(n) }, n }(); o().get("IS_NODE") && o().setPlatform("node", new lvt); aa = { float32: 4, int32: 4, uint16: 2, uint8: 1, bool: 1 }; vh = 4; va = "undefined" != typeof Buffer && ("undefined" == typeof Blob || "undefined" == typeof atob || "undefined" == typeof btoa); var fr = function () { function n() { this.saveRouters = []; this.loadRouters = [] } return n.getInstance = function () { return null == n.instance && (n.instance = new n), n.instance }, n.registerSaveRouter = function (t) { n.getInstance().saveRouters.push(t) }, n.registerLoadRouter = function (t) { n.getInstance().loadRouters.push(t) }, n.getSaveHandlers = function (t) { return n.getHandlers(t, "save") }, n.getLoadHandlers = function (t, i) { return n.getHandlers(t, "load", i) }, n.getHandlers = function (t, i, r) { var u = []; return ("load" === i ? n.getInstance().loadRouters : n.getInstance().saveRouters).forEach(function (n) { var i = n(t, r); null !== i && u.push(i) }), u }, n }(), co = "://", vf = function () { function n() { this.managers = {} } return n.getInstance = function () { return null == n.instance && (n.instance = new n), n.instance }, n.registerManager = function (t, r) { i(null != t, function () { return "scheme must not be undefined or null." }); t.endsWith(co) && (t = t.slice(0, t.indexOf(co))); i(t.length > 0, function () { return "scheme must not be an empty string." }); var u = n.getInstance(); i(null == u.managers[t], function () { return "A model store manager is already registered for scheme '" + t + "'." }); u.managers[t] = r }, n.getManager = function (n) { var t = this.getInstance().managers[n]; if (null == t) throw new Error("Cannot find model manager for scheme '" + n + "'"); return t }, n.getSchemes = function () { return Object.keys(this.getInstance().managers) }, n }(); if (yf = "models_store", wu = "model_info_store", ae = function () { function n(n) { if (this.indexedDB = wvt(), null == n || !n) throw new Error("For IndexedDB, modelPath must not be null, undefined or empty."); this.modelPath = n } return n.prototype.save = function (n) { return y(this, void 0, void 0, function () { return p(this, function () { if (n.modelTopology instanceof ArrayBuffer) throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet."); return [2, this.databaseAction(this.modelPath, n)] }) }) }, n.prototype.load = function () { return y(this, void 0, void 0, function () { return p(this, function () { return [2, this.databaseAction(this.modelPath)] }) }) }, n.prototype.databaseAction = function (n, t) { var i = this; return new Promise(function (n, r) { var u = i.indexedDB.open("tensorflowjs", 1); u.onupgradeneeded = function () { return yk(u) }; u.onsuccess = function () { var f = u.result, o, e; if (null == t) o = f.transaction(yf, "readonly"), e = o.objectStore(yf).get(i.modelPath), e.onsuccess = function () { if (null == e.result) return f.close(), r(new Error("Cannot find model with path '" + i.modelPath + "' in IndexedDB.")); n(e.result.modelArtifacts) }, e.onerror = function () { return f.close(), r(e.error) }, o.oncomplete = function () { return f.close() }; else { var s, h = yh(t), c = f.transaction(wu, "readwrite"), a = c.objectStore(wu), l = a.put({ modelPath: i.modelPath, modelArtifactsInfo: h }); l.onsuccess = function () { var u = (s = f.transaction(yf, "readwrite")).objectStore(yf).put({ modelPath: i.modelPath, modelArtifacts: t, modelArtifactsInfo: h }); u.onsuccess = function () { return n({ modelArtifactsInfo: h }) }; u.onerror = function () { var n = (a = c.objectStore(wu)).delete(i.modelPath); n.onsuccess = function () { return f.close(), r(u.error) }; n.onerror = function () { return f.close(), r(u.error) } } }; l.onerror = function () { return f.close(), r(l.error) }; c.oncomplete = function () { null == s ? f.close() : s.oncomplete = function () { return f.close() } } } }; u.onerror = function () { return r(u.error) } }) }, n.URL_SCHEME = "indexeddb://", n }(), pk = function (n) { return o().getBool("IS_BROWSER") && !Array.isArray(n) && n.startsWith(ae.URL_SCHEME) ? (t = n.slice(ae.URL_SCHEME.length), new ae(t)) : null; var t }, fr.registerSaveRouter(pk), fr.registerLoadRouter(pk), bvt = function () { function n() { this.indexedDB = wvt() } return n.prototype.listModels = function () { return y(this, void 0, void 0, function () { var n = this; return p(this, function () { return [2, new Promise(function (t, i) { var r = n.indexedDB.open("tensorflowjs", 1); r.onupgradeneeded = function () { return yk(r) }; r.onsuccess = function () { var u = r.result, f = u.transaction(wu, "readonly"), n = f.objectStore(wu).getAll(); n.onsuccess = function () { for (var r, u = {}, i = 0, f = n.result; i < f.length; i++)r = f[i], u[r.modelPath] = r.modelArtifactsInfo; t(u) }; n.onerror = function () { return u.close(), i(n.error) }; f.oncomplete = function () { return u.close() } }; r.onerror = function () { return i(r.error) } })] }) }) }, n.prototype.removeModel = function (n) { return y(this, void 0, void 0, function () { var t = this; return p(this, function () { var i; return n = (i = n).startsWith(ae.URL_SCHEME) ? i.slice(ae.URL_SCHEME.length) : i, [2, new Promise(function (i, r) { var u = t.indexedDB.open("tensorflowjs", 1); u.onupgradeneeded = function () { return yk(u) }; u.onsuccess = function () { var e, t = u.result, o = t.transaction(wu, "readwrite"), s = o.objectStore(wu), f = s.get(n); f.onsuccess = function () { if (null == f.result) return t.close(), r(new Error("Cannot find model with path '" + n + "' in IndexedDB.")); var u = s.delete(n), o = function () { var u = (e = t.transaction(yf, "readwrite")).objectStore(yf).delete(n); u.onsuccess = function () { return i(f.result.modelArtifactsInfo) }; u.onerror = function () { return r(f.error) } }; u.onsuccess = o; u.onerror = function () { return o(), t.close(), r(f.error) } }; f.onerror = function () { return t.close(), r(f.error) }; o.oncomplete = function () { null == e ? t.close() : e.oncomplete = function () { return t.close() } } }; u.onerror = function () { return r(u.error) } })] }) }) }, n }(), o().getBool("IS_BROWSER")) try { vf.registerManager(ae.URL_SCHEME, new bvt) } catch (an) { } var bu = "/", lo = "tensorflowjs_models", kvt = "info", uri = "model_topology", fri = "weight_specs", eri = "weight_data", ori = "model_metadata"; if (ve = function () { function n(n) { if (!o().getBool("IS_BROWSER") || "undefined" == typeof window || void 0 === window.localStorage) throw new Error("The current environment does not support local storage."); if (this.LS = window.localStorage, null == n || !n) throw new Error("For local storage, modelPath must not be null, undefined or empty."); this.modelPath = n; this.keys = dvt(this.modelPath) } return n.prototype.save = function (n) { return y(this, void 0, void 0, function () { var i, r, t; return p(this, function () { if (n.modelTopology instanceof ArrayBuffer) throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet."); i = JSON.stringify(n.modelTopology); r = JSON.stringify(n.weightSpecs); t = yh(n); try { return this.LS.setItem(this.keys.info, JSON.stringify(t)), this.LS.setItem(this.keys.topology, i), this.LS.setItem(this.keys.weightSpecs, r), this.LS.setItem(this.keys.weightData, function (n) { if (va) return Buffer.from(n).toString("base64"); for (var i = new Uint8Array(n), r = "", t = 0, u = i.length; t < u; t++)r += String.fromCharCode(i[t]); return btoa(r) }(n.weightData)), this.LS.setItem(this.keys.modelMetadata, JSON.stringify({ format: n.format, generatedBy: n.generatedBy, convertedBy: n.convertedBy, userDefinedMetadata: n.userDefinedMetadata })), [2, { modelArtifactsInfo: t }] } catch (n) { throw this.LS.removeItem(this.keys.info), this.LS.removeItem(this.keys.topology), this.LS.removeItem(this.keys.weightSpecs), this.LS.removeItem(this.keys.weightData), this.LS.removeItem(this.keys.modelMetadata), new Error("Failed to save model '" + this.modelPath + "' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=" + t.modelTopologyBytes + ", weightSpecsBytes=" + t.weightSpecsBytes + ", weightDataBytes=" + t.weightDataBytes + "."); } return [2] }) }) }, n.prototype.load = function () { return y(this, void 0, void 0, function () { var i, n, r, u, f, t, e; return p(this, function () { if (null == (i = JSON.parse(this.LS.getItem(this.keys.info)))) throw new Error("In local storage, there is no model with name '" + this.modelPath + "'"); if ("JSON" !== i.modelTopologyType) throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet."); if (n = {}, null == (r = JSON.parse(this.LS.getItem(this.keys.topology)))) throw new Error("In local storage, the topology of model '" + this.modelPath + "' is missing."); if (n.modelTopology = r, null == (u = JSON.parse(this.LS.getItem(this.keys.weightSpecs)))) throw new Error("In local storage, the weight specs of model '" + this.modelPath + "' are missing."); if (n.weightSpecs = u, null != (f = this.LS.getItem(this.keys.modelMetadata)) && (t = JSON.parse(f), n.format = t.format, n.generatedBy = t.generatedBy, n.convertedBy = t.convertedBy, n.userDefinedMetadata = t.userDefinedMetadata), null == (e = this.LS.getItem(this.keys.weightData))) throw new Error("In local storage, the binary weight values of model '" + this.modelPath + "' are missing."); return n.weightData = function (n) { var t; if (va) return t = Buffer.from(n, "base64"), t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength); for (var r = atob(n), u = new Uint8Array(r.length), i = 0; i < r.length; ++i)u.set([r.charCodeAt(i)], i); return u.buffer }(e), [2, n] }) }) }, n.URL_SCHEME = "localstorage://", n }(), wk = function (n) { return o().getBool("IS_BROWSER") && !Array.isArray(n) && n.startsWith(ve.URL_SCHEME) ? (t = n.slice(ve.URL_SCHEME.length), new ve(t)) : null; var t }, fr.registerSaveRouter(wk), fr.registerLoadRouter(wk), gvt = function () { function n() { i(o().getBool("IS_BROWSER"), function () { return "Current environment is not a web browser" }); i("undefined" == typeof window || void 0 !== window.localStorage, function () { return "Current browser does not appear to support localStorage" }); this.LS = window.localStorage } return n.prototype.listModels = function () { return y(this, void 0, void 0, function () { var i, r, u, n, t, f; return p(this, function () { for (i = {}, r = lo + bu, u = bu + kvt, n = 0; n < this.LS.length; ++n)(t = this.LS.key(n)).startsWith(r) && t.endsWith(u) && (f = sri(t), i[f] = JSON.parse(this.LS.getItem(t))); return [2, i] }) }) }, n.prototype.removeModel = function (n) { return y(this, void 0, void 0, function () { var t, i; return p(this, function () { var r; if (n = (r = n).startsWith(ve.URL_SCHEME) ? r.slice(ve.URL_SCHEME.length) : r, t = dvt(n), null == this.LS.getItem(t.info)) throw new Error("Cannot find model at path '" + n + "'"); return i = JSON.parse(this.LS.getItem(t.info)), this.LS.removeItem(t.info), this.LS.removeItem(t.topology), this.LS.removeItem(t.weightSpecs), this.LS.removeItem(t.weightData), [2, i] }) }) }, n }(), o().getBool("IS_BROWSER")) try { vf.registerManager(ve.URL_SCHEME, new gvt) } catch (an) { } var hri = "model", cri = ".json", lri = ".weights.bin"; pa = function () { function n(t) { if (!o().getBool("IS_BROWSER")) throw new Error("browserDownloads() cannot proceed because the current environment is not a browser."); t.startsWith(n.URL_SCHEME) && (t = t.slice(n.URL_SCHEME.length)); null != t && 0 !== t.length || (t = hri); this.modelTopologyFileName = t + cri; this.weightDataFileName = t + lri } return n.prototype.save = function (n) { return y(this, void 0, void 0, function () { var r, u, f, e, t, i; return p(this, function (o) { switch (o.label) { case 0: if ("undefined" == typeof document) throw new Error("Browser downloads are not supported in this environment since `document` is not present"); if (r = window.URL.createObjectURL(new Blob([n.weightData], { type: "application/octet-stream" })), !(n.modelTopology instanceof ArrayBuffer)) return [3, 1]; throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet."); case 1: return u = [{ paths: ["./" + this.weightDataFileName], weights: n.weightSpecs }], f = { modelTopology: n.modelTopology, format: n.format, generatedBy: n.generatedBy, convertedBy: n.convertedBy, weightsManifest: u }, e = window.URL.createObjectURL(new Blob([JSON.stringify(f)], { type: "application/json" })), (t = null == this.jsonAnchor ? document.createElement("a") : this.jsonAnchor).download = this.modelTopologyFileName, t.href = e, [4, nyt(function () { return t.dispatchEvent(new MouseEvent("click")) })]; case 2: return o.sent(), null == n.weightData ? [3, 4] : ((i = null == this.weightDataAnchor ? document.createElement("a") : this.weightDataAnchor).download = this.weightDataFileName, i.href = r, [4, nyt(function () { return i.dispatchEvent(new MouseEvent("click")) })]); case 3: o.sent(); o.label = 4; case 4: return [2, { modelArtifactsInfo: yh(n) }] } }) }) }, n.URL_SCHEME = "downloads://", n }(); tyt = function () { function n(n) { if (null == n || n.length < 1) throw new Error("When calling browserFiles, at least 1 file is required, but received " + n); this.files = n } return n.prototype.load = function () { return y(this, void 0, void 0, function () { var n, t, i = this; return p(this, function () { return n = this.files[0], t = this.files.slice(1), [2, new Promise(function (r, u) { var f = new FileReader; f.onload = function (f) { var e = JSON.parse(f.target.result), h = e.modelTopology, o, l; if (null != h) if (0 === t.length && r({ modelTopology: h }), o = e.weightsManifest, null != o) { try { l = i.checkManifestAndWeightFiles(o, t) } catch (n) { return void u(n) } var c = [], a = [], s = []; o.forEach(function (n) { n.paths.forEach(function (n) { a.push(n); s.push(null) }); c.push.apply(c, n.weights) }); o.forEach(function (n) { n.paths.forEach(function (n) { var t = new FileReader; t.onload = function (t) { var i = t.target.result, u = a.indexOf(n); s[u] = i; -1 === s.indexOf(null) && r({ modelTopology: h, weightSpecs: c, weightData: vk(s), format: e.format, generatedBy: e.generatedBy, convertedBy: e.convertedBy, userDefinedMetadata: e.userDefinedMetadata }) }; t.onerror = function () { return u("Failed to weights data from file of path '" + n + "'.") }; t.readAsArrayBuffer(l[n]) }) }) } else u(new Error("weightManifest field is missing from file " + n.name)); else u(new Error("modelTopology field is missing from file " + n.name)) }; f.onerror = function () { return u("Failed to read model topology and weights manifest JSON from file '" + n.name + "'. BrowserFiles supports loading Keras-style tf.Model artifacts only.") }; f.readAsText(n) })] }) }) }, n.prototype.checkManifestAndWeightFiles = function (n, t) { for (var i = [], u = t.map(function (n) { return yvt(n.name) }), f = {}, r = 0, e = n; r < e.length; r++)e[r].paths.forEach(function (n) { var r = yvt(n); if (-1 !== i.indexOf(r)) throw new Error("Duplicate file basename found in weights manifest: '" + r + "'"); if (i.push(r), -1 === u.indexOf(r)) throw new Error("Weight file with basename '" + r + "' is not provided."); f[n] = t[u.indexOf(r)] }); if (i.length !== t.length) throw new Error("Mismatch in the number of files in weights manifest (" + i.length + ") and the number of weight files provided (" + t.length + ")."); return f }, n }(); fr.registerSaveRouter(function (n) { return o().getBool("IS_BROWSER") && !Array.isArray(n) && n.startsWith(pa.URL_SCHEME) ? function (n) { return void 0 === n && (n = "model"), new pa(n) }(n.slice(pa.URL_SCHEME.length)) : null }); bk = function () { function n(n, t) { if (this.DEFAULT_METHOD = "POST", null == t && (t = {}), this.weightPathPrefix = t.weightPathPrefix, this.onProgress = t.onProgress, null != t.fetchFunc ? (i("function" == typeof t.fetchFunc, function () { return "Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)" }), this.fetch = t.fetchFunc) : this.fetch = o().platform.fetch, i(null != n && n.length > 0, function () { return "URL path for http must not be null, undefined or empty." }), Array.isArray(n) && i(2 === n.length, function () { return "URL paths for http must have a length of 2, (actual length is " + n.length + ")." }), this.path = n, null != t.requestInit && null != t.requestInit.body) throw new Error("requestInit is expected to have no pre-existing body, but has one."); this.requestInit = t.requestInit || {} } return n.prototype.save = function (n) { return y(this, void 0, void 0, function () { var t, r, u, i; return p(this, function (f) { switch (f.label) { case 0: if (n.modelTopology instanceof ArrayBuffer) throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet."); return (t = Object.assign({ method: this.DEFAULT_METHOD }, this.requestInit)).body = new FormData, r = [{ paths: ["./model.weights.bin"], weights: n.weightSpecs }], u = { modelTopology: n.modelTopology, format: n.format, generatedBy: n.generatedBy, convertedBy: n.convertedBy, userDefinedMetadata: n.userDefinedMetadata, weightsManifest: r }, t.body.append("model.json", new Blob([JSON.stringify(u)], { type: "application/json" }), "model.json"), null != n.weightData && t.body.append("model.weights.bin", new Blob([n.weightData], { type: "application/octet-stream" }), "model.weights.bin"), [4, this.fetch(this.path, t)]; case 1: if ((i = f.sent()).ok) return [2, { modelArtifactsInfo: yh(n), responses: [i] }]; throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status " + i.status + "."); } }) }) }, n.prototype.load = function () { return y(this, void 0, void 0, function () { var r, n, t, u, i, e, o, s, h, c, l, f; return p(this, function (a) { switch (a.label) { case 0: return [4, this.fetch(this.path, this.requestInit)]; case 1: if (!(r = a.sent()).ok) throw new Error("Request to " + this.path + " failed with status code " + r.status + ". Please verify this URL points to the model JSON of the model to load."); a.label = 2; case 2: return a.trys.push([2, 4, , 5]), [4, r.json()]; case 3: return n = a.sent(), [3, 5]; case 4: throw a.sent(), t = "Failed to parse model JSON of response from " + this.path + ".", t += this.path.endsWith(".pb") ? " Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository." : " Please make sure the server is serving valid JSON for this request.", new Error(t); case 5: if (u = n.modelTopology, i = n.weightsManifest, e = n.generatedBy, o = n.convertedBy, s = n.format, h = n.userDefinedMetadata, null == u && null == i) throw new Error("The JSON from HTTP path " + this.path + " contains neither model topology or manifest for weights."); return null == i ? [3, 7] : [4, this.loadWeights(i)]; case 6: f = a.sent(); c = f[0]; l = f[1]; a.label = 7; case 7: return [2, { modelTopology: u, weightSpecs: c, weightData: l, userDefinedMetadata: h, generatedBy: e, convertedBy: o, format: s }] } }) }) }, n.prototype.loadWeights = function (n) { return y(this, void 0, void 0, function () { var e, r, o, s, h, t, i, u, c, f, l; return p(this, function (a) { switch (a.label) { case 0: for (e = Array.isArray(this.path) ? this.path[1] : this.path, r = function (n) { var t = n.lastIndexOf("/"), i = n.lastIndexOf("?"), r = n.substring(0, t), u = i > t ? n.substring(i) : ""; return [r + "/", u] }(e), o = r[0], s = r[1], h = this.weightPathPrefix || o, t = [], i = 0, u = n; i < u.length; i++)c = u[i], t.push.apply(t, c.weights); return f = [], n.forEach(function (n) { n.paths.forEach(function (n) { f.push(h + n + s) }) }), [4, ryt(f, { requestInit: this.requestInit, fetchFunc: this.fetch, onProgress: this.onProgress })]; case 1: return l = a.sent(), [2, [t, vk(l)]] } }) }) }, n.URL_SCHEME_REGEX = /^https?:\/\//, n }(); dk = function (n, t) { return "undefined" == typeof fetch ? null : (Array.isArray(n) ? n.every(function (n) { return kk(n) }) : kk(n)) ? gk(n, { onProgress: t }) : null }; fr.registerSaveRouter(dk); fr.registerLoadRouter(dk); var nd = function () { function n(n) { this.modelArtifacts = n } return n.prototype.load = function () { return y(this, void 0, void 0, function () { return p(this, function () { return [2, this.modelArtifacts] }) }) }, n }(), ari = function () { function n(n) { this.saveHandler = n } return n.prototype.save = function (n) { return y(this, void 0, void 0, function () { return p(this, function () { return [2, this.saveHandler(n)] }) }) }, n }(), td = Object.freeze({ browserFiles: function (n) { return new tyt(n) }, browserHTTPRequest: function (n, t) { return gk(n, t) }, concatenateArrayBuffers: vk, decodeWeights: avt, encodeWeights: function (n, t) { return y(this, void 0, void 0, function () { var u, i, f, e, r, o = this; return p(this, function (s) { switch (s.label) { case 0: for (u = [], i = [], f = Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n), e = function (r) { var s = f[r], e = Array.isArray(n) ? n[r].tensor : n[s], h, c; if ("float32" !== e.dtype && "int32" !== e.dtype && "bool" !== e.dtype && "string" !== e.dtype) throw new Error("Unsupported dtype in weight '" + s + "': " + e.dtype); h = { name: s, shape: e.shape, dtype: e.dtype }; "string" === e.dtype ? (c = new Promise(function (n) { return y(o, void 0, void 0, function () { var t, o, r, i, u, f, s; return p(this, function (h) { switch (h.label) { case 0: return [4, e.bytes()]; case 1: for (t = h.sent(), o = t.reduce(function (n, t) { return n + t.length }, 0) + vh * t.length, r = new Uint8Array(o), i = 0, u = 0; u < t.length; u++)f = t[u], s = new Uint8Array(new Uint32Array([f.length]).buffer), r.set(s, i), i += vh, r.set(f, i), i += f.length; return n(r), [2] } }) }) }), i.push(c)) : i.push(e.data()); null != t && (h.group = t); u.push(h) }, r = 0; r < f.length; ++r)e(r); return [4, Promise.all(i)]; case 1: return [2, { data: rri(s.sent()), specs: u }] } }) }) }, fromMemory: function (n, t, i, r) { return 1 === arguments.length ? null != n.modelTopology || null != n.weightSpecs ? new nd(n) : (console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."), new nd({ modelTopology: n })) : (console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."), new nd({ modelTopology: n, weightSpecs: t, weightData: i, trainingConfig: r })) }, getLoadHandlers: function (n, t) { return fr.getLoadHandlers(n, t) }, getModelArtifactsInfoForJSON: yh, getSaveHandlers: function (n) { return fr.getSaveHandlers(n) }, http: gk, isHTTPScheme: kk, loadWeights: function (n, t, i, r) { return void 0 === t && (t = ""), y(this, void 0, void 0, function () { return p(this, function () { return [2, uyt(function (n) { return ryt(n, { requestInit: r }) })(n, t, i)] }) }) }, registerLoadRouter: function (n) { return fr.registerLoadRouter(n) }, registerSaveRouter: function (n) { return fr.registerSaveRouter(n) }, weightsLoaderFactory: uyt, withSaveHandler: function (n) { return new ari(n) }, copyModel: function (n, t) { return y(this, void 0, void 0, function () { return p(this, function () { return [2, pvt(n, t, !1)] }) }) }, listModels: function () { return y(this, void 0, void 0, function () { var f, t, n, i, r, e, u; return p(this, function (o) { switch (o.label) { case 0: f = vf.getSchemes(); t = {}; n = 0; i = f; o.label = 1; case 1: return n < i.length ? (r = i[n], [4, vf.getManager(r).listModels()]) : [3, 4]; case 2: for (u in e = o.sent()) t[r + co + u] = e[u]; o.label = 3; case 3: return n++, [3, 1]; case 4: return [2, t] } }) }) }, moveModel: function (n, t) { return y(this, void 0, void 0, function () { return p(this, function () { return [2, pvt(n, t, !0)] }) }) }, removeModel: function (n) { return y(this, void 0, void 0, function () { var t; return p(this, function () { return t = ya(n), [2, vf.getManager(t.scheme).removeModel(t.path)] }) }) } }), ao, vri = u({ confusionMatrix_: function (n, r, u) { var f = t(n, "labels", "confusionMatrix"), e = t(r, "predictions", "confusionMatrix"), o, s; return i(null == u || u > 0 && Number.isInteger(u), function () { return "If provided, numClasses must be a positive integer, but got " + u }), i(1 === f.rank, function () { return "Expected the rank of labels to be 1, but got " + f.rank }), i(1 === e.rank, function () { return "Expected the rank of predictions to be 1, but got " + e.rank }), i(f.shape[0] === e.shape[0], function () { return "Mismatch in the number of examples: " + f.shape[0] + " vs. " + e.shape[0] + ". Labels and predictions should have the same number of elements." }), i(u > 0 && Number.isInteger(u), function () { return "numClasses is required to be a positive integer, but got " + u }), o = il(f.asType("int32"), u), s = il(e.asType("int32"), u), o.transpose().matMul(s).asType("int32") } }), yri = Object.freeze({ confusionMatrix: vri }), pri = u({ fromPixels_: function (n, t) { var c, o, s; if (void 0 === t && (t = 3), t > 4) throw new Error("Cannot construct Tensor with more than 4 channels from pixels."); if (null == n) throw new Error("pixels passed to tf.browser.fromPixels() can not be null"); var l = !1, a = !1, f = !1, v = !1, y = !1; if (n.data instanceof Uint8Array) l = !0; else if ("undefined" != typeof ImageData && n instanceof ImageData) a = !0; else if ("undefined" != typeof HTMLVideoElement && n instanceof HTMLVideoElement) f = !0; else if ("undefined" != typeof HTMLImageElement && n instanceof HTMLImageElement) v = !0; else { if (null == n.getContext) throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was " + n.constructor.name); y = !0 } if (f && f && n.readyState < 2) throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element."); if (null != ey("FromPixels", r.backendName)) return r.runKernel("FromPixels", { pixels: n }, { numChannels: t }); var e, h, p = f ? [n.videoWidth, n.videoHeight] : [n.width, n.height], i = p[0], u = p[1]; if (y ? e = n.getContext("2d").getImageData(0, 0, i, u).data : a || l ? e = n.data : (v || f) && (null == ao && (ao = document.createElement("canvas").getContext("2d")), ao.canvas.width = i, ao.canvas.height = u, ao.drawImage(n, 0, 0, i, u), e = ao.getImageData(0, 0, i, u).data), 4 === t) h = new Int32Array(e); else for (c = i * u, h = new Int32Array(c * t), o = 0; o < c; o++)for (s = 0; s < t; ++s)h[o * t + s] = e[4 * o + s]; return gc(h, [u, i, t], "int32") } }), wa = Object.freeze({ toPixels: function (n, i) { return y(this, void 0, void 0, function () { var r, d, h, c, s, f, g, nt, tt, it, rt, l, a, e, o, u, v, y, w, b, k, ut, ft; return p(this, function (p) { switch (p.label) { case 0: if (r = t(n, "img", "toPixels"), n instanceof et || (r = r.toInt()), 2 !== r.rank && 3 !== r.rank) throw new Error("toPixels only supports rank 2 or 3 tensors, got rank " + r.rank + "."); if (d = r.shape.slice(0, 2), h = d[0], c = d[1], (s = 2 === r.rank ? 1 : r.shape[2]) > 4 || 2 === s) throw new Error("toPixels only supports depth of size 1, 3 or 4 but got " + s); return [4, r.data()]; case 1: return f = p.sent(), g = r.min(), nt = r.max(), [4, Promise.all([g.data(), nt.data()])]; case 2: if (tt = p.sent(), it = tt[0], rt = tt[1], l = it[0], a = rt[0], g.dispose(), nt.dispose(), "float32" === r.dtype) { if (l < 0 || a > 1) throw new Error("Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [" + l + " - " + a + "]."); } else { if ("int32" !== r.dtype) throw new Error("Unsupported type for toPixels: " + r.dtype + ". Please use float32 or int32 tensors."); if (l < 0 || a > 255) throw new Error("Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [" + l + " - " + a + "]."); } for (e = "float32" === r.dtype ? 255 : 1, o = new Uint8ClampedArray(c * h * 4), u = 0; u < h * c; ++u)v = void 0, y = void 0, w = void 0, b = void 0, 1 === s ? (v = f[u] * e, y = f[u] * e, w = f[u] * e, b = 255) : 3 === s ? (v = f[3 * u] * e, y = f[3 * u + 1] * e, w = f[3 * u + 2] * e, b = 255) : 4 === s && (v = f[4 * u] * e, y = f[4 * u + 1] * e, w = f[4 * u + 2] * e, b = f[4 * u + 3] * e), o[(k = 4 * u) + 0] = Math.round(v), o[k + 1] = Math.round(y), o[k + 2] = Math.round(w), o[k + 3] = Math.round(b); return null != i && (i.width = c, i.height = h, ut = i.getContext("2d"), ft = new ImageData(o, c, h), ut.putImageData(ft, 0, 0)), r !== n && r.dispose(), [2, o] } }) }) }, fromPixels: pri }), fyt = function () { function n() { } return n.prototype.getClassName = function () { return this.constructor.className }, n.fromConfig = function (n, t) { return new n(t) }, n }(), eyt = function () { function n() { this.classNameMap = {} } return n.getMap = function () { return null == n.instance && (n.instance = new n), n.instance }, n.register = function (t) { n.getMap().classNameMap[t.className] = [t, t.fromConfig] }, n }(); var wri = Object.freeze({ Serializable: fyt, SerializationMap: eyt, registerClass: pf }), bri = .001, oyt = .1; var kri = Object.freeze({ TEST_EPSILON_FLOAT16: oyt, expectArraysClose: function (n, t, i) { return null == i && (i = id()), rd(n, t, function (n, t) { return ud(n, t, i) }) }, testEpsilon: id, expectPromiseToFail: function (n, t) { n().then(function () { return t.fail() }, function () { return t() }) }, expectArraysEqual: function (n, t) { var i = "string" == typeof t || "number" == typeof t || "boolean" == typeof t ? [t] : t; return uf(n) || uf(n[0]) || uf(t) || uf(t[0]) ? rd(n, i, function (n, t) { return n == t }) : rd(n, t, function (n, t) { return ud(n, t, 0) }) }, expectNumbersClose: function (n, t, i) { if (null == i && (i = id()), !ud(n, t, i)) throw new Error("Numbers differ: actual === " + n + ", expected === " + t); }, expectValuesInRange: function (n, t, i) { for (var r = 0; r < n.length; r++)if (n[r] < t || n[r] > i) throw new Error("Value out of range:" + n[r] + " low: " + t + ", high: " + i); }, expectArrayBuffersEqual: function (n, t) { expect(new Float32Array(n)).toEqual(new Float32Array(t)) } }), dri = Object.freeze({ gpgpu_util: vet, webgl_util: nrt, forceHalfFloat: function () { o().set("WEBGL_FORCE_F16_TEXTURES", !0) }, MathBackendWebGL: ib, setWebGLContext: ytt, GPGPUContext: ww }), wf = function (n) { function t() { return null !== n && n.apply(this, arguments) || this } return hr(t, n), t.prototype.minimize = function (n, t, i) { var e; void 0 === t && (t = !1); var u = this.computeGradients(n, i), f = u.value, r = u.grads; return null != i ? (e = i.map(function (n) { return { name: n.name, tensor: r[n.name] } }), this.applyGradients(e)) : this.applyGradients(r), ai(r), t ? f : (f.dispose(), null) }, Object.defineProperty(t.prototype, "iterations", { get: function () { return null == this.iterations_ && (this.iterations_ = 0), this.iterations_ }, enumerable: !0, configurable: !0 }), t.prototype.incrementIterations = function () { this.iterations_ = this.iterations + 1 }, t.prototype.computeGradients = function (n, t) { return kut(n, t) }, t.prototype.dispose = function () { null != this.iterations_ && ai(this.iterations_) }, t.prototype.saveIterations = function () { return y(this, void 0, void 0, function () { return p(this, function () { return null == this.iterations_ && (this.iterations_ = 0), [2, { name: "iter", tensor: h(this.iterations_, "int32") }] }) }) }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { return p(this, function () { throw new Error("getWeights() is not implemented for this optimizer yet."); }) }) }, t.prototype.setWeights = function () { return y(this, void 0, void 0, function () { return p(this, function () { throw new Error("setWeights() is not implemented for this optimizer class " + this.getClassName()); }) }) }, t.prototype.extractIterations = function (n) { return y(this, void 0, void 0, function () { var t; return p(this, function (i) { switch (i.label) { case 0: return t = this, [4, n[0].tensor.data()]; case 1: return t.iterations_ = i.sent()[0], [2, n.slice(1)] } }) }) }, t }(fyt); Object.defineProperty(wf, Symbol.hasInstance, { value: function (n) { return null != n.minimize && null != n.computeGradients && null != n.applyGradients } }); ba = function (n) { function t(t, i, u) { void 0 === u && (u = null); var f = n.call(this) || this; return f.learningRate = t, f.rho = i, f.epsilon = u, f.accumulatedGrads = [], f.accumulatedUpdates = [], null == u && (f.epsilon = r.backend.epsilon()), f } return hr(t, n), t.prototype.applyGradients = function (n) { var t = this; (Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n)).forEach(function (i, u) { var f = r.registeredVariables[i], e, o, s; null == t.accumulatedGrads[u] && (t.accumulatedGrads[u] = { originalName: i + "/accum_grad", variable: c(function () { return it(f).variable(!1) }) }); null == t.accumulatedUpdates[u] && (t.accumulatedUpdates[u] = { originalName: i + "/accum_var", variable: c(function () { return it(f).variable(!1) }) }); e = Array.isArray(n) ? n[u].tensor : n[i]; null != e && (o = t.accumulatedGrads[u].variable, s = t.accumulatedUpdates[u].variable, c(function () { var r = o.mul(t.rho).add(e.square().mul(1 - t.rho)), n = s.add(t.epsilon).sqrt().div(o.add(t.epsilon).sqrt()).mul(e), u = s.mul(t.rho).add(n.square().mul(1 - t.rho)), i; o.assign(r); s.assign(u); i = n.mul(-t.learningRate).add(f); f.assign(i) })) }); this.incrementIterations() }, t.prototype.dispose = function () { null != this.accumulatedUpdates && (ai(this.accumulatedGrads.map(function (n) { return n.variable })), ai(this.accumulatedUpdates.map(function (n) { return n.variable }))) }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { var n; return p(this, function (t) { switch (t.label) { case 0: return n = this.accumulatedGrads.concat(this.accumulatedUpdates), [4, this.saveIterations()]; case 1: return [2, [t.sent()].concat(n.map(function (n) { return { name: n.originalName, tensor: n.variable } }))] } }) }) }, t.prototype.setWeights = function (n) { return y(this, void 0, void 0, function () { var t; return p(this, function (i) { switch (i.label) { case 0: return [4, this.extractIterations(n)]; case 1: return n = i.sent(), t = n.length / 2, this.accumulatedGrads = n.slice(0, t).map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), this.accumulatedUpdates = n.slice(t, 2 * t).map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), [2] } }) }) }, t.prototype.getConfig = function () { return { learningRate: this.learningRate, rho: this.rho, epsilon: this.epsilon } }, t.fromConfig = function (n, t) { return new n(t.learningRate, t.rho, t.epsilon) }, t.className = "Adadelta", t }(wf); pf(ba); ka = function (n) { function t(t, i) { void 0 === i && (i = .1); var r = n.call(this) || this; return r.learningRate = t, r.initialAccumulatorValue = i, r.accumulatedGrads = [], r } return hr(t, n), t.prototype.applyGradients = function (n) { var t = this; (Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n)).forEach(function (i, u) { var e = r.registeredVariables[i], f, o; null == t.accumulatedGrads[u] && (t.accumulatedGrads[u] = { originalName: i + "/accumulator", variable: c(function () { return pr(e.shape, t.initialAccumulatorValue).variable(!1) }) }); f = Array.isArray(n) ? n[u].tensor : n[i]; null != f && (o = t.accumulatedGrads[u].variable, c(function () { var n = o.add(f.square()), i; o.assign(n); i = f.div(n.add(r.backend.epsilon()).sqrt()).mul(-t.learningRate).add(e); e.assign(i) })) }); this.incrementIterations() }, t.prototype.dispose = function () { null != this.accumulatedGrads && ai(this.accumulatedGrads.map(function (n) { return n.variable })) }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { return p(this, function (n) { switch (n.label) { case 0: return [4, this.saveIterations()]; case 1: return [2, [n.sent()].concat(this.accumulatedGrads.map(function (n) { return { name: n.originalName, tensor: n.variable } }))] } }) }) }, t.prototype.setWeights = function (n) { return y(this, void 0, void 0, function () { return p(this, function (t) { switch (t.label) { case 0: return [4, this.extractIterations(n)]; case 1: return n = t.sent(), this.accumulatedGrads = n.map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), [2] } }) }) }, t.prototype.getConfig = function () { return { learningRate: this.learningRate, initialAccumulatorValue: this.initialAccumulatorValue } }, t.fromConfig = function (n, t) { return new n(t.learningRate, t.initialAccumulatorValue) }, t.className = "Adagrad", t }(wf); pf(ka); da = function (n) { function t(t, i, u, f) { void 0 === f && (f = null); var e = n.call(this) || this; return e.learningRate = t, e.beta1 = i, e.beta2 = u, e.epsilon = f, e.accumulatedFirstMoment = [], e.accumulatedSecondMoment = [], c(function () { e.accBeta1 = h(i).variable(); e.accBeta2 = h(u).variable() }), null == f && (e.epsilon = r.backend.epsilon()), e } return hr(t, n), t.prototype.applyGradients = function (n) { var t = this, i = Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n); c(function () { var u = dt(1, t.accBeta1), f = dt(1, t.accBeta2); i.forEach(function (i, e) { var o = r.registeredVariables[i], s, y; if (null == t.accumulatedFirstMoment[e] && (t.accumulatedFirstMoment[e] = { originalName: i + "/m", variable: c(function () { return it(o).variable(!1) }) }), null == t.accumulatedSecondMoment[e] && (t.accumulatedSecondMoment[e] = { originalName: i + "/v", variable: c(function () { return it(o).variable(!1) }) }), s = Array.isArray(n) ? n[e].tensor : n[i], null != s) { var h = t.accumulatedFirstMoment[e].variable, l = t.accumulatedSecondMoment[e].variable, a = h.mul(t.beta1).add(s.mul(1 - t.beta1)), v = l.mul(t.beta2).add(s.square().mul(1 - t.beta2)), p = a.div(u), w = v.div(f); h.assign(a); l.assign(v); y = p.div(w.sqrt().add(t.epsilon)).mul(-t.learningRate).add(o); o.assign(y) } }); t.accBeta1.assign(t.accBeta1.mul(t.beta1)); t.accBeta2.assign(t.accBeta2.mul(t.beta2)) }); this.incrementIterations() }, t.prototype.dispose = function () { this.accBeta1.dispose(); this.accBeta2.dispose(); null != this.accumulatedFirstMoment && ai(this.accumulatedFirstMoment.map(function (n) { return n.variable })); null != this.accumulatedSecondMoment && ai(this.accumulatedSecondMoment.map(function (n) { return n.variable })) }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { var n; return p(this, function (t) { switch (t.label) { case 0: return n = this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment), [4, this.saveIterations()]; case 1: return [2, [t.sent()].concat(n.map(function (n) { return { name: n.originalName, tensor: n.variable } }))] } }) }) }, t.prototype.setWeights = function (n) { return y(this, void 0, void 0, function () { var i, t = this; return p(this, function (r) { switch (r.label) { case 0: return [4, this.extractIterations(n)]; case 1: return n = r.sent(), c(function () { t.accBeta1.assign(sh(t.beta1, t.iterations_ + 1)); t.accBeta2.assign(sh(t.beta2, t.iterations_ + 1)) }), i = n.length / 2, this.accumulatedFirstMoment = n.slice(0, i).map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), this.accumulatedSecondMoment = n.slice(i, 2 * i).map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), [2] } }) }) }, t.prototype.getConfig = function () { return { learningRate: this.learningRate, beta1: this.beta1, beta2: this.beta2, epsilon: this.epsilon } }, t.fromConfig = function (n, t) { return new n(t.learningRate, t.beta1, t.beta2, t.epsilon) }, t.className = "Adam", t }(wf); pf(da); ga = function (n) { function t(t, i, u, f, e) { void 0 === f && (f = null); void 0 === e && (e = 0); var o = n.call(this) || this; return o.learningRate = t, o.beta1 = i, o.beta2 = u, o.epsilon = f, o.decay = e, o.accumulatedFirstMoment = [], o.accumulatedWeightedInfNorm = [], c(function () { o.iteration = h(0).variable(); o.accBeta1 = h(i).variable() }), null == f && (o.epsilon = r.backend.epsilon()), o } return hr(t, n), t.prototype.applyGradients = function (n) { var t = this, i = Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n); c(function () { var u = dt(1, t.accBeta1), f = sr(-t.learningRate, t.iteration.mul(t.decay).add(1)); i.forEach(function (i, e) { var o = r.registeredVariables[i], s, v; if (null == t.accumulatedFirstMoment[e] && (t.accumulatedFirstMoment[e] = { originalName: i + "/m", variable: it(o).variable(!1) }), null == t.accumulatedWeightedInfNorm[e] && (t.accumulatedWeightedInfNorm[e] = { originalName: i + "/v", variable: it(o).variable(!1) }), s = Array.isArray(n) ? n[e].tensor : n[i], null != s) { var h = t.accumulatedFirstMoment[e].variable, c = t.accumulatedWeightedInfNorm[e].variable, l = h.mul(t.beta1).add(s.mul(1 - t.beta1)), y = c.mul(t.beta2), p = s.abs(), a = y.maximum(p); h.assign(l); c.assign(a); v = f.div(u).mul(l.div(a.add(t.epsilon))).add(o); o.assign(v) } }); t.iteration.assign(t.iteration.add(1)); t.accBeta1.assign(t.accBeta1.mul(t.beta1)) }); this.incrementIterations() }, t.prototype.dispose = function () { this.accBeta1.dispose(); this.iteration.dispose(); null != this.accumulatedFirstMoment && ai(this.accumulatedFirstMoment.map(function (n) { return n.variable })); null != this.accumulatedWeightedInfNorm && ai(this.accumulatedWeightedInfNorm.map(function (n) { return n.variable })) }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { return p(this, function () { throw new Error("getWeights() is not implemented for Adamax yet."); }) }) }, t.prototype.setWeights = function () { return y(this, void 0, void 0, function () { return p(this, function () { throw new Error("setWeights() is not implemented for Adamax yet."); }) }) }, t.prototype.getConfig = function () { return { learningRate: this.learningRate, beta1: this.beta1, beta2: this.beta2, epsilon: this.epsilon, decay: this.decay } }, t.fromConfig = function (n, t) { return new n(t.learningRate, t.beta1, t.beta2, t.epsilon, t.decay) }, t.className = "Adamax", t }(wf); pf(ga); ph = function (n) { function t(t) { var i = n.call(this) || this; return i.learningRate = t, i.setLearningRate(t), i } return hr(t, n), t.prototype.applyGradients = function (n) { var t = this; (Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n)).forEach(function (i, u) { var e = Array.isArray(n) ? n[u].tensor : n[i], f; null != e && (f = r.registeredVariables[i], c(function () { var n = t.c.mul(e).add(f); f.assign(n) })) }); this.incrementIterations() }, t.prototype.setLearningRate = function (n) { this.learningRate = n; null != this.c && this.c.dispose(); this.c = trt(h(-n)) }, t.prototype.dispose = function () { this.c.dispose() }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { return p(this, function (n) { switch (n.label) { case 0: return [4, this.saveIterations()]; case 1: return [2, [n.sent()]] } }) }) }, t.prototype.setWeights = function (n) { return y(this, void 0, void 0, function () { return p(this, function (t) { switch (t.label) { case 0: return [4, this.extractIterations(n)]; case 1: if (0 !== (n = t.sent()).length) throw new Error("SGD optimizer does not have settable weights."); return [2] } }) }) }, t.prototype.getConfig = function () { return { learningRate: this.learningRate } }, t.fromConfig = function (n, t) { return new n(t.learningRate) }, t.className = "SGD", t }(wf); pf(ph); nv = function (n) { function t(t, i, r) { void 0 === r && (r = !1); var u = n.call(this, t) || this; return u.learningRate = t, u.momentum = i, u.useNesterov = r, u.accumulations = [], u.m = h(u.momentum), u } return hr(t, n), t.prototype.applyGradients = function (n) { var t = this; (Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n)).forEach(function (i, u) { var f = r.registeredVariables[i], o, e; null == t.accumulations[u] && (t.accumulations[u] = { originalName: i + "/momentum", variable: c(function () { return it(f).variable(!1) }) }); o = t.accumulations[u].variable; e = Array.isArray(n) ? n[u].tensor : n[i]; null != e && c(function () { var i, n = t.m.mul(o).add(e); i = t.useNesterov ? t.c.mul(e.add(n.mul(t.m))).add(f) : t.c.mul(n).add(f); o.assign(n); f.assign(i) }) }); this.incrementIterations() }, t.prototype.dispose = function () { this.m.dispose(); null != this.accumulations && ai(this.accumulations.map(function (n) { return n.variable })) }, t.prototype.setMomentum = function (n) { this.momentum = n }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { return p(this, function (n) { switch (n.label) { case 0: return [4, this.saveIterations()]; case 1: return [2, [n.sent()].concat(this.accumulations.map(function (n) { return { name: n.originalName, tensor: n.variable } }))] } }) }) }, t.prototype.setWeights = function (n) { return y(this, void 0, void 0, function () { return p(this, function (t) { switch (t.label) { case 0: return [4, this.extractIterations(n)]; case 1: return n = t.sent(), this.accumulations = n.map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), [2] } }) }) }, t.prototype.getConfig = function () { return { learningRate: this.learningRate, momentum: this.momentum, useNesterov: this.useNesterov } }, t.fromConfig = function (n, t) { return new n(t.learningRate, t.momentum, t.useNesterov) }, t.className = "Momentum", t }(ph); pf(nv); tv = function (n) { function t(t, i, u, f, e) { void 0 === i && (i = .9); void 0 === u && (u = 0); void 0 === f && (f = null); void 0 === e && (e = !1); var o = n.call(this) || this; if (o.learningRate = t, o.decay = i, o.momentum = u, o.epsilon = f, o.accumulatedMeanSquares = [], o.accumulatedMoments = [], o.accumulatedMeanGrads = [], o.centered = e, null == f && (o.epsilon = r.backend.epsilon()), null == t) throw new Error("learningRate for RMSPropOptimizer must be defined."); return o } return hr(t, n), t.prototype.applyGradients = function (n) { var t = this; (Array.isArray(n) ? n.map(function (n) { return n.name }) : Object.keys(n)).forEach(function (i, u) { var f = r.registeredVariables[i], e, o, s; null == t.accumulatedMeanSquares[u] && (t.accumulatedMeanSquares[u] = { originalName: i + "/rms", variable: c(function () { return it(f).variable(!1) }) }); null == t.accumulatedMoments[u] && (t.accumulatedMoments[u] = { originalName: i + "/momentum", variable: c(function () { return it(f).variable(!1) }) }); null == t.accumulatedMeanGrads[u] && t.centered && (t.accumulatedMeanGrads[u] = { originalName: i + "/mg", variable: c(function () { return it(f).variable(!1) }) }); e = Array.isArray(n) ? n[u].tensor : n[i]; null != e && (o = t.accumulatedMeanSquares[u].variable, s = t.accumulatedMoments[u].variable, c(function () { var h = o.mul(t.decay).add(e.square().mul(1 - t.decay)), i, r; if (t.centered) { var c = t.accumulatedMeanGrads[u].variable, l = c.mul(t.decay).add(e.mul(1 - t.decay)), n = s.mul(t.momentum).add(e.mul(t.learningRate).div(h.sub(l.square().add(t.epsilon)).sqrt())); o.assign(h); c.assign(l); s.assign(n); i = f.sub(n); f.assign(i) } else r = o.mul(t.decay).add(e.square().mul(1 - t.decay)), n = s.mul(t.momentum).add(e.mul(t.learningRate).div(r.add(t.epsilon).sqrt())), o.assign(r), s.assign(n), i = f.sub(n), f.assign(i) })) }); this.incrementIterations() }, t.prototype.dispose = function () { null != this.accumulatedMeanSquares && ai(this.accumulatedMeanSquares.map(function (n) { return n.variable })); null != this.accumulatedMeanGrads && this.centered && ai(this.accumulatedMeanGrads.map(function (n) { return n.variable })); null != this.accumulatedMoments && ai(this.accumulatedMoments.map(function (n) { return n.variable })) }, t.prototype.getWeights = function () { return y(this, void 0, void 0, function () { var n; return p(this, function (t) { switch (t.label) { case 0: return n = this.accumulatedMeanSquares.concat(this.accumulatedMoments), this.centered && n.push.apply(n, this.accumulatedMeanGrads), [4, this.saveIterations()]; case 1: return [2, [t.sent()].concat(n.map(function (n) { return { name: n.originalName, tensor: n.variable } }))] } }) }) }, t.prototype.setWeights = function (n) { return y(this, void 0, void 0, function () { var t; return p(this, function (i) { switch (i.label) { case 0: return [4, this.extractIterations(n)]; case 1: return n = i.sent(), t = this.centered ? n.length / 3 : n.length / 2, this.accumulatedMeanSquares = n.slice(0, t).map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), this.accumulatedMoments = n.slice(t, 2 * t).map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } }), this.centered && (this.accumulatedMeanGrads = n.slice(2 * t, 3 * t).map(function (n) { return { originalName: n.name, variable: n.tensor.variable(!1) } })), [2] } }) }) }, t.prototype.getConfig = function () { return { learningRate: this.learningRate, decay: this.decay, momentum: this.momentum, epsilon: this.epsilon, centered: this.centered } }, t.fromConfig = function (n, t) { return new n(t.learningRate, t.decay, t.momentum, t.epsilon, t.centered) }, t.className = "RMSProp", t }(wf); pf(tv); var ye = function () { function n() { } return n.sgd = function (n) { return new ph(n) }, n.momentum = function (n, t, i) { return void 0 === i && (i = !1), new nv(n, t, i) }, n.rmsprop = function (n, t, i, r, u) { return void 0 === t && (t = .9), void 0 === i && (i = 0), void 0 === r && (r = null), void 0 === u && (u = !1), new tv(n, t, i, r, u) }, n.adam = function (n, t, i, r) { return void 0 === n && (n = .001), void 0 === t && (t = .9), void 0 === i && (i = .999), void 0 === r && (r = null), new da(n, t, i, r) }, n.adadelta = function (n, t, i) { return void 0 === n && (n = .001), void 0 === t && (t = .95), void 0 === i && (i = null), new ba(n, t, i) }, n.adamax = function (n, t, i, r, u) { return void 0 === n && (n = .002), void 0 === t && (t = .9), void 0 === i && (i = .999), void 0 === r && (r = null), void 0 === u && (u = 0), new ga(n, t, i, r, u) }, n.adagrad = function (n, t) { return void 0 === t && (t = .1), new ka(n, t) }, n }(), gri = { sgd: ye.sgd, momentum: ye.momentum, adadelta: ye.adadelta, adagrad: ye.adagrad, rmsprop: ye.rmsprop, adamax: ye.adamax, adam: ye.adam }, nui = "undefined" != typeof requestAnimationFrame ? requestAnimationFrame : "undefined" != typeof setImmediate ? setImmediate : function (n) { return n() }; et.prototype.squaredDifference = function (n) { return rb(this, n) }; e = iri; syt = Object.freeze({ __proto__: null, AdadeltaOptimizer: ba, AdagradOptimizer: ka, AdamOptimizer: da, AdamaxOptimizer: ga, DataStorage: iw, get ENV() { return fy }, Environment: vn, KernelBackend: rw, MomentumOptimizer: nv, Optimizer: wf, RMSPropOptimizer: tv, get Rank() { return dy }, get Reduction() { return hi }, SGDOptimizer: ph, Tensor: et, TensorBuffer: no, Variable: ef, abs: lot, acos: aot, acosh: vot, add: nt, addN: cht, addStrict: lht, all: klt, any: dlt, argMax: glt, argMin: nat, asin: yot, asinh: pot, atan: wot, atan2: aht, atanh: bot, avgPool: so, avgPool3d: vlt, backend: ukt, backend_util: gut, basicLSTMCell: hat, batchNorm: eb, batchNorm2d: fht, batchNorm3d: eht, batchNorm4d: oht, batchNormalization: uht, batchNormalization2d: tht, batchNormalization3d: iht, batchNormalization4d: rht, batchToSpaceND: yp, booleanMaskAsync: yct, broadcastTo: yrt, browser: wa, buffer: k, cast: prt, ceil: kot, clipByValue: bl, clone: wrt, complex: ui, concat: wt, concat1d: hrt, concat2d: crt, concat3d: lrt, concat4d: art, conv1d: bct, conv2d: ur, conv2dTranspose: tlt, conv3d: kct, conv3dTranspose: ilt, cos: dot, cosh: got, cumsum: brt, customGrad: ds, deprecationWarn: cp, depthToSpace: krt, depthwiseConv2d: hh, diag: kat, disableDeprecationWarnings: abt, dispose: ai, disposeVariables: vbt, div: sr, divNoNan: vht, divStrict: yht, dot: rlt, dropout: dat, elu: kb, enableDebugMode: lbt, enableProdMode: cbt, engine: ybt, env: o, equal: lb, equalStrict: ict, erf: nst, exp: kl, expandDims: rr, expm1: tst, eye: pp, fft: ra, fill: pr, findBackend: tkt, findBackendFactory: ikt, floor: ist, floorDiv: hb, frame: ea, fused: fvt, gather: ta, gatherND: bat, gather_util: cut, getBackend: gbt, getGradient: yn, getKernel: ey, getKernelsForBackend: oy, grad: ykt, grads: pkt, greater: rct, greaterEqual: ab, greaterEqualStrict: uct, greaterStrict: fct, hammingWindow: ik, hannWindow: fa, ifft: ah, imag: yr, image: sa, inTopKAsync: tvt, io: td, irfft: tk, isFinite: lst, isInf: cst, isNaN: hst, keep: trt, leakyRelu: eat, less: ect, lessEqual: oct, lessEqualStrict: sct, lessStrict: hct, linalg: uvt, linspace: srt, localResponseNormalization: sat, log: rst, log1p: ust, logSigmoid: fst, logSoftmax: dut, logSumExp: tat, logicalAnd: oh, logicalNot: sht, logicalOr: ob, logicalXor: hht, losses: ivt, matMul: ch, math: yri, max: lh, maxPool: gt, maxPool3d: alt, maximum: na, maximumStrict: pht, mean: iat, memory: pbt, min: rat, minimum: cb, minimumStrict: wht, mod: bht, modStrict: kht, moments: uat, movingAverage: lat, mul: si, mulStrict: dht, multiRNNCell: cat, multinomial: drt, neg: fh, nextFrame: tui, norm: nk, notEqual: cct, notEqualStrict: lct, oneHot: il, ones: fe, onesLike: ap, op: u, outerProduct: ult, pad: cf, pad1d: grt, pad2d: nut, pad3d: tut, pad4d: iut, pool: llt, pow: sh, powStrict: ght, prelu: db, print: vrt, prod: fat, profile: wbt, rand: rut, randomGamma: fut, randomNormal: uut, randomUniform: wp, range: bs, ready: dbt, real: ir, reciprocal: est, registerBackend: rkt, registerGradient: pn, registerKernel: sy, relu: ct, relu6: gb, removeBackend: nkt, reshape: or, reverse: oo, reverse1d: flt, reverse2d: elt, reverse3d: olt, reverse4d: slt, rfft: ua, round: ost, rsqrt: ub, scalar: h, scatterND: yat, scatter_util: vut, selu: oat, separableConv2d: ia, serialization: wri, setBackend: kbt, setPlatform: fkt, setdiff1dAsync: out, sigmoid: fb, sign: sst, signal: nvt, sin: ast, sinh: vst, slice: br, slice1d: ylt, slice2d: plt, slice3d: wb, slice4d: wlt, slice_util: but, softmax: fu, softplus: yst, spaceToBatchND: bp, sparseToDense: wat, spectral: pat, split: nl, sqrt: pst, square: cot, squaredDifference: rb, squaredDifferenceStrict: nct, squeeze: kp, stack: bi, step: wst, stft: rk, stridedSlice: aat, sub: dt, subStrict: tct, sum: bb, sumOutType: hc, tan: bst, tanh: kst, tensor: fi, tensor1d: vt, tensor2d: lu, tensor3d: gc, tensor4d: yi, tensor5d: frt, tensor6d: ert, tensor_util: sbt, test_util: kri, tidy: c, tile: se, time: bbt, topk: vat, train: gri, transpose: yu, truncatedNormal: eut, unregisterGradient: rbt, unregisterKernel: ibt, unsortedSegmentSum: vb, unstack: bt, util: ubt, valueAndGrad: wkt, valueAndGrads: bkt, variable: ort, variableGrads: kut, version_core: "1.7.0", webgl: dri, where: af, whereAsync: sb, zeros: ot, zerosLike: it });
    /*! *****************************************************************************
        Copyright (c) Microsoft Corporation. All rights reserved.
        Licensed under the Apache License, Version 2.0 (the "License"); you may not use
        this file except in compliance with the License. You may obtain a copy of the
        License at http://www.apache.org/licenses/LICENSE-2.0
      
        THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
        KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
        WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
        MERCHANTABLITY OR NON-INFRINGEMENT.
      
        See the Apache Version 2.0 License for specific language governing permissions
        and limitations under the License.
        ***************************************************************************** */
    iv = function (n, t) { return iv = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (n, t) { n.__proto__ = t } || function (n, t) { for (var i in t) t.hasOwnProperty(i) && (n[i] = t[i]) }, iv(n, t) }; ci = function () { return ci = Object.assign || function (n) { for (var t, r, i = 1, u = arguments.length; i < u; i++) { t = arguments[i]; for (r in t) Object.prototype.hasOwnProperty.call(t, r) && (n[r] = t[r]) } return n }, ci.apply(this, arguments) }; ku = function () { function n(n, t) { if (!kf(n) || !kf(t)) throw new Error("Dimensions.constructor - expected width and height to be valid numbers, instead have " + JSON.stringify({ width: n, height: t })); this._width = n; this._height = t } return Object.defineProperty(n.prototype, "width", { get: function () { return this._width }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "height", { get: function () { return this._height }, enumerable: !0, configurable: !0 }), n.prototype.reverse = function () { return new n(1 / this.width, 1 / this.height) }, n }(); var rui = Object.freeze({ __proto__: null, isTensor: vo, isTensor1D: iui, isTensor2D: hyt, isTensor3D: bh, isTensor4D: du, isFloat: cyt, isEven: fd, round: rv, isDimensions: ed, computeReshapedDimensions: lyt, getCenterPoint: uv, range: yo, isValidNumber: kf, isValidProbablitiy: fv }), ut = function () { function n(n, t) { this._x = n; this._y = t } return Object.defineProperty(n.prototype, "x", { get: function () { return this._x }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "y", { get: function () { return this._y }, enumerable: !0, configurable: !0 }), n.prototype.add = function (t) { return new n(this.x + t.x, this.y + t.y) }, n.prototype.sub = function (t) { return new n(this.x - t.x, this.y - t.y) }, n.prototype.mul = function (t) { return new n(this.x * t.x, this.y * t.y) }, n.prototype.div = function (t) { return new n(this.x / t.x, this.y / t.y) }, n.prototype.abs = function () { return new n(Math.abs(this.x), Math.abs(this.y)) }, n.prototype.magnitude = function () { return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2)) }, n.prototype.floor = function () { return new n(Math.floor(this.x), Math.floor(this.y)) }, n }(), kr = function () { function n(t, i) { i === void 0 && (i = !0); var r = t || {}, c = [r.left, r.top, r.right, r.bottom].every(kf), f = [r.x, r.y, r.width, r.height].every(kf); if (!f && !c) throw new Error("Box.constructor - expected box to be IBoundingBox | IRect, instead have " + JSON.stringify(r)); var u = f ? [r.x, r.y, r.width, r.height] : [r.left, r.top, r.right - r.left, r.bottom - r.top], e = u[0], o = u[1], s = u[2], h = u[3]; n.assertIsValidBox({ x: e, y: o, width: s, height: h }, "Box.constructor", i); this._x = e; this._y = o; this._width = s; this._height = h } return n.isRect = function (n) { return !!n && [n.x, n.y, n.width, n.height].every(kf) }, n.assertIsValidBox = function (t, i, r) { if (r === void 0 && (r = !1), !n.isRect(t)) throw new Error(i + " - invalid box: " + JSON.stringify(t) + ", expected object with properties x, y, width, height"); if (!r && (t.width < 0 || t.height < 0)) throw new Error(i + " - width (" + t.width + ") and height (" + t.height + ") must be positive numbers"); }, Object.defineProperty(n.prototype, "x", { get: function () { return this._x }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "y", { get: function () { return this._y }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "width", { get: function () { return this._width }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "height", { get: function () { return this._height }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "left", { get: function () { return this.x }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "top", { get: function () { return this.y }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "right", { get: function () { return this.x + this.width }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "bottom", { get: function () { return this.y + this.height }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "area", { get: function () { return this.width * this.height }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "topLeft", { get: function () { return new ut(this.left, this.top) }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "topRight", { get: function () { return new ut(this.right, this.top) }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "bottomLeft", { get: function () { return new ut(this.left, this.bottom) }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "bottomRight", { get: function () { return new ut(this.right, this.bottom) }, enumerable: !0, configurable: !0 }), n.prototype.round = function () { var t = [this.x, this.y, this.width, this.height].map(function (n) { return Math.round(n) }), i = t[0], r = t[1], u = t[2], f = t[3]; return new n({ x: i, y: r, width: u, height: f }) }, n.prototype.floor = function () { var t = [this.x, this.y, this.width, this.height].map(function (n) { return Math.floor(n) }), i = t[0], r = t[1], u = t[2], f = t[3]; return new n({ x: i, y: r, width: u, height: f }) }, n.prototype.toSquare = function () { var r = this, f = r.x, e = r.y, t = r.width, i = r.height, u = Math.abs(t - i); return t < i && (f -= u / 2, t += u), i < t && (e -= u / 2, i += u), new n({ x: f, y: e, width: t, height: i }) }, n.prototype.rescale = function (t) { var i = ed(t) ? t.width : t, r = ed(t) ? t.height : t; return new n({ x: this.x * i, y: this.y * r, width: this.width * i, height: this.height * r }) }, n.prototype.pad = function (t, i) { var r = [this.x - t / 2, this.y - i / 2, this.width + t, this.height + i], u = r[0], f = r[1], e = r[2], o = r[3]; return new n({ x: u, y: f, width: e, height: o }) }, n.prototype.clipAtImageBorders = function (t, i) { var r = this, e = r.x, o = r.y, s = r.right, h = r.bottom, u = Math.max(e, 0), f = Math.max(o, 0), c = s - u, l = h - f, a = Math.min(c, t - u), v = Math.min(l, i - f); return new n({ x: u, y: f, width: a, height: v }).floor() }, n.prototype.shift = function (t, i) { var r = this, u = r.width, f = r.height, e = this.x + t, o = this.y + i; return new n({ x: e, y: o, width: u, height: f }) }, n.prototype.padAtBorders = function (n, t) { var o = this.width + 1, s = this.height + 1, h = o, i = s, r = this.left, u = this.top, f = this.right, e = this.bottom; return f > t && (h = -f + t + o, f = t), e > n && (i = -e + n + s, e = n), r < 1 && (i = 2 - r, r = 1), u < 1 && (i = 2 - u, u = 1), { dy: 1, edy: i, dx: 1, edx: h, y: u, ey: e, x: r, ex: f, w: o, h: s } }, n.prototype.calibrate = function (t) { return new n({ left: this.left + t.left * this.width, top: this.top + t.top * this.height, right: this.right + t.right * this.width, bottom: this.bottom + t.bottom * this.height }).toSquare().round() }, n }(), kh = function (n) { function t(t, i, r, u, f) { return f === void 0 && (f = !1), n.call(this, { left: t, top: i, right: r, bottom: u }, f) || this } return d(t, n), t }(kr), od = function () { function n(n, t, i, r, u) { this._imageDims = new ku(u.width, u.height); this._score = n; this._classScore = t; this._className = i; this._box = new kr(r).rescale(this._imageDims) } return Object.defineProperty(n.prototype, "score", { get: function () { return this._score }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "classScore", { get: function () { return this._classScore }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "className", { get: function () { return this._className }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "box", { get: function () { return this._box }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "imageDims", { get: function () { return this._imageDims }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "imageWidth", { get: function () { return this.imageDims.width }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "imageHeight", { get: function () { return this.imageDims.height }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "relativeBox", { get: function () { return new kr(this._box).rescale(this.imageDims.reverse()) }, enumerable: !0, configurable: !0 }), n.prototype.forSize = function (t, i) { return new n(this.score, this.classScore, this.className, this.relativeBox, { width: t, height: i }) }, n }(), di = function (n) { function t(t, i, r) { return n.call(this, t, t, "", i, r) || this } return d(t, n), t.prototype.forSize = function (i, r) { var u = n.prototype.forSize.call(this, i, r), f = u.score, e = u.relativeBox, o = u.imageDims; return new t(f, e, o) }, t }(od); var ov = function (n) { function t(t, i, r, u, f) { return f === void 0 && (f = !1), n.call(this, { x: t, y: i, width: r, height: u }, f) || this } return d(t, n), t }(kr), eui = .5, oui = .43, sui = .45, pe = function () { function n(n, t, i) { i === void 0 && (i = new ut(0, 0)); var r = t.width, u = t.height; this._imgDims = new ku(r, u); this._shift = i; this._positions = n.map(function (n) { return n.mul(new ut(r, u)).add(i) }) } return Object.defineProperty(n.prototype, "shift", { get: function () { return new ut(this._shift.x, this._shift.y) }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "imageWidth", { get: function () { return this._imgDims.width }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "imageHeight", { get: function () { return this._imgDims.height }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "positions", { get: function () { return this._positions }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "relativePositions", { get: function () { var n = this; return this._positions.map(function (t) { return t.sub(n._shift).div(new ut(n.imageWidth, n.imageHeight)) }) }, enumerable: !0, configurable: !0 }), n.prototype.forSize = function (n, t) { return new this.constructor(this.relativePositions, { width: n, height: t }) }, n.prototype.shiftBy = function (n, t) { return new this.constructor(this.relativePositions, this._imgDims, new ut(n, t)) }, n.prototype.shiftByPoint = function (n) { return this.shiftBy(n.x, n.y) }, n.prototype.align = function (n, t) { var i; if (t === void 0 && (t = {}), n) return i = n instanceof di ? n.box.floor() : new kr(n), this.shiftBy(i.x, i.y).align(null, t); var r = Object.assign({}, { useDlibAlignment: !1, minBoxPadding: .2 }, t), u = r.useDlibAlignment, f = r.minBoxPadding; return u ? this.alignDlib() : this.alignMinBbox(f) }, n.prototype.alignDlib = function () { var n = this.getRefPointsForAlignment(), e = n[0], o = n[1], s = n[2], i = function (n) { return s.sub(n).magnitude() }, h = (i(e) + i(o)) / 2, t = Math.floor(h / sui), r = uv(n), u = Math.floor(Math.max(0, r.x - eui * t)), f = Math.floor(Math.max(0, r.y - oui * t)); return new ov(u, f, Math.min(t, this.imageWidth + u), Math.min(t, this.imageHeight + f)) }, n.prototype.alignMinBbox = function (n) { var t = vyt(this.positions); return t.pad(t.width * n, t.height * n) }, n.prototype.getRefPointsForAlignment = function () { throw new Error("getRefPointsForAlignment not implemented by base class"); }, n }(), pyt = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.getRefPointsForAlignment = function () { var n = this.positions; return [n[0], n[1], uv([n[3], n[4]])] }, t }(pe), sd = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.getJawOutline = function () { return this.positions.slice(0, 17) }, t.prototype.getLeftEyeBrow = function () { return this.positions.slice(17, 22) }, t.prototype.getRightEyeBrow = function () { return this.positions.slice(22, 27) }, t.prototype.getNose = function () { return this.positions.slice(27, 36) }, t.prototype.getLeftEye = function () { return this.positions.slice(36, 42) }, t.prototype.getRightEye = function () { return this.positions.slice(42, 48) }, t.prototype.getMouth = function () { return this.positions.slice(48, 68) }, t.prototype.getRefPointsForAlignment = function () { return [this.getLeftEye(), this.getRightEye(), this.getMouth()].map(uv) }, t }(pe), hd = function () { function n(n, t) { this._label = n; this._distance = t } return Object.defineProperty(n.prototype, "label", { get: function () { return this._label }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "distance", { get: function () { return this._distance }, enumerable: !0, configurable: !0 }), n.prototype.toString = function (n) { return n === void 0 && (n = !0), "" + this.label + (n ? " (" + rv(this.distance) + ")" : "") }, n }(), cd = function (n) { function t(t, i) { var r = n.call(this, t) || this; return r._label = i, r } return d(t, n), t.assertIsValidLabeledBox = function (n, t) { if (kr.assertIsValidBox(n, t), !kf(n.label)) throw new Error(t + " - expected property label (" + n.label + ") to be a number"); }, Object.defineProperty(t.prototype, "label", { get: function () { return this._label }, enumerable: !0, configurable: !0 }), t }(kr), dh = function () { function n(n, t) { if (!(typeof n == "string")) throw new Error("LabeledFaceDescriptors - constructor expected label to be a string"); if (!Array.isArray(t) || t.some(function (n) { return !(n instanceof Float32Array) })) throw new Error("LabeledFaceDescriptors - constructor expected descriptors to be an array of Float32Array"); this._label = n; this._descriptors = t } return Object.defineProperty(n.prototype, "label", { get: function () { return this._label }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "descriptors", { get: function () { return this._descriptors }, enumerable: !0, configurable: !0 }), n.prototype.toJSON = function () { return { label: this.label, descriptors: this.descriptors.map(function (n) { return Array.from(n) }) } }, n.fromJSON = function (t) { var i = t.descriptors.map(function (n) { return new Float32Array(n) }); return new n(t.label, i) }, n }(), hui = function (n) { function t(t, i, r, u) { var f = n.call(this, t, i) || this; return f._score = r, f._classScore = u, f } return d(t, n), t.assertIsValidPredictedBox = function (n, t) { if (cd.assertIsValidLabeledBox(n, t), !fv(n.score) || !fv(n.classScore)) throw new Error(t + " - expected properties score (" + n.score + ") and (" + n.classScore + ") to be a number between [0, 1]"); }, Object.defineProperty(t.prototype, "score", { get: function () { return this._score }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, "classScore", { get: function () { return this._classScore }, enumerable: !0, configurable: !0 }), t }(cd); ti = { getEnv: cui, setEnv: ld, initialize: ad, createBrowserEnv: wyt, createFileSystem: byt, createNodejsEnv: kyt, monkeyPatch: lui, isBrowser: dyt, isNodejs: gyt }; ad(), function (n) { n.TOP_LEFT = "TOP_LEFT"; n.TOP_RIGHT = "TOP_RIGHT"; n.BOTTOM_LEFT = "BOTTOM_LEFT"; n.BOTTOM_RIGHT = "BOTTOM_RIGHT" }(gu || (gu = {})); var vd = function () { function n(n) { n === void 0 && (n = {}); var t = n.anchorPosition, i = n.backgroundColor, r = n.fontColor, u = n.fontSize, f = n.fontStyle, e = n.padding; this.anchorPosition = t || gu.TOP_LEFT; this.backgroundColor = i || "rgba(0, 0, 0, 0.5)"; this.fontColor = r || "rgba(255, 255, 255, 1)"; this.fontSize = u || 14; this.fontStyle = f || "Georgia"; this.padding = e || 4 } return n }(), yd = function () { function n(t, i, r) { r === void 0 && (r = {}); this.text = typeof t == "string" ? [t] : t instanceof n ? t.text : t; this.anchor = i; this.options = new vd(r) } return n.prototype.measureWidth = function (n) { var t = this.options.padding; return this.text.map(function (t) { return n.measureText(t).width }).reduce(function (n, t) { return n < t ? t : n }, 0) + 2 * t }, n.prototype.measureHeight = function () { var n = this.options, t = n.fontSize, i = n.padding; return this.text.length * t + 2 * i }, n.prototype.getUpperLeft = function (n, t) { var i = this.options.anchorPosition, o = i === gu.BOTTOM_RIGHT || i === gu.TOP_RIGHT, s = i === gu.BOTTOM_LEFT || i === gu.BOTTOM_RIGHT, r = this.measureWidth(n), u = this.measureHeight(), f = o ? this.anchor.x - r : this.anchor.x, e = s ? this.anchor.y - u : this.anchor.y; if (t) { var h = t.width, c = t.height, l = Math.max(Math.min(f, h - r), 0), a = Math.max(Math.min(e, c - u), 0); return { x: l, y: a } } return { x: f, y: e } }, n.prototype.draw = function (n) { var u = sv(n), t = dr(u), i = this.options, h = i.backgroundColor, c = i.fontColor, f = i.fontSize, l = i.fontStyle, e = i.padding, o, s, r; t.font = f + "px " + l; o = this.measureWidth(t); s = this.measureHeight(); t.fillStyle = h; r = this.getUpperLeft(t, u); t.fillRect(r.x, r.y, o, s); t.fillStyle = c; this.text.forEach(function (n, i) { var u = e + r.x, o = e + r.y + (i + 1) * f; t.fillText(n, u, o) }) }, n }(), npt = function () { function n(n) { var t; n === void 0 && (n = {}); var i = n.boxColor, r = n.lineWidth, u = n.label, f = n.drawLabelOptions; this.boxColor = i || "rgba(0, 0, 255, 1)"; this.lineWidth = r || 2; this.label = u; t = { anchorPosition: gu.BOTTOM_LEFT, backgroundColor: this.boxColor }; this.drawLabelOptions = new vd(Object.assign({}, t, f)) } return n }(), tpt = function () { function n(n, t) { t === void 0 && (t = {}); this.box = new kr(n); this.options = new npt(t) } return n.prototype.draw = function (n) { var i = dr(n), u = this.options, s = u.boxColor, f = u.lineWidth, t = this.box, e = t.x, o = t.y, h = t.width, c = t.height, r; i.strokeStyle = s; i.lineWidth = f; i.strokeRect(e, o, h, c); r = this.options.label; r && new yd([r], { x: e - f / 2, y: o }, this.options.drawLabelOptions).draw(n) }, n }(); go = function () { function n(n, t) { var i = this; if (t === void 0 && (t = !1), this._imageTensors = [], this._canvases = [], this._treatAsBatchInput = !1, this._inputDimensions = [], !Array.isArray(n)) throw new Error("NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have " + n); this._treatAsBatchInput = t; this._batchSize = n.length; n.forEach(function (n, t) { var u, r; if (bh(n)) { i._imageTensors[t] = n; i._inputDimensions[t] = n.shape; return } if (du(n)) { if (u = n.shape[0], u !== 1) throw new Error("NetInput - tf.Tensor4D with batchSize " + u + " passed, but not supported in input array"); i._imageTensors[t] = n; i._inputDimensions[t] = n.shape.slice(1); return } r = n instanceof ti.getEnv().Canvas ? n : cv(n); i._canvases[t] = r; i._inputDimensions[t] = [r.height, r.width, 3] }) } return Object.defineProperty(n.prototype, "imageTensors", { get: function () { return this._imageTensors }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "canvases", { get: function () { return this._canvases }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "isBatchInput", { get: function () { return this.batchSize > 1 || this._treatAsBatchInput }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "batchSize", { get: function () { return this._batchSize }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "inputDimensions", { get: function () { return this._inputDimensions }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "inputSize", { get: function () { return this._inputSize }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "reshapedInputDimensions", { get: function () { var n = this; return yo(this.batchSize, 0, 1).map(function (t, i) { return n.getReshapedInputDimensions(i) }) }, enumerable: !0, configurable: !0 }), n.prototype.getInput = function (n) { return this.canvases[n] || this.imageTensors[n] }, n.prototype.getInputDimensions = function (n) { return this._inputDimensions[n] }, n.prototype.getInputHeight = function (n) { return this._inputDimensions[n][0] }, n.prototype.getInputWidth = function (n) { return this._inputDimensions[n][1] }, n.prototype.getReshapedInputDimensions = function (n) { if (typeof this.inputSize != "number") throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet"); var t = this.getInputWidth(n), i = this.getInputHeight(n); return lyt({ width: t, height: i }, this.inputSize) }, n.prototype.toBatchTensor = function (n, t) { var i = this; return t === void 0 && (t = !0), this._inputSize = n, c(function () { var r = yo(i.batchSize, 0, 1).map(function (r) { var f = i.getInput(r), u; if (f instanceof et) return u = du(f) ? f : f.expandDims(), u = yyt(u, t), (u.shape[1] !== n || u.shape[2] !== n) && (u = sa.resizeBilinear(u, [n, n])), u.as3D(n, n, 3); if (f instanceof ti.getEnv().Canvas) return wa.fromPixels(fpt(f, n, t)); throw new Error("toBatchTensor - at batchIdx " + r + ", expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have " + f); }); return bi(r.map(function (n) { return n.toFloat() })).as4D(i.batchSize, n, n, 3) }) }, n }(); gr = function () { function n(n) { this._name = n; this._params = undefined; this._paramMappings = [] } return Object.defineProperty(n.prototype, "params", { get: function () { return this._params }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "paramMappings", { get: function () { return this._paramMappings }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "isLoaded", { get: function () { return !!this.params }, enumerable: !0, configurable: !0 }), n.prototype.getParamFromPath = function (n) { var t = this.traversePropertyPath(n), i = t.obj, r = t.objProp; return i[r] }, n.prototype.reassignParamFromPath = function (n, t) { var i = this.traversePropertyPath(n), r = i.obj, u = i.objProp; r[u].dispose(); r[u] = t }, n.prototype.getParamList = function () { var n = this; return this._paramMappings.map(function (t) { var i = t.paramPath; return { path: i, tensor: n.getParamFromPath(i) } }) }, n.prototype.getTrainableParams = function () { return this.getParamList().filter(function (n) { return n.tensor instanceof ef }) }, n.prototype.getFrozenParams = function () { return this.getParamList().filter(function (n) { return !(n.tensor instanceof ef) }) }, n.prototype.variable = function () { var n = this; this.getFrozenParams().forEach(function (t) { var i = t.path, r = t.tensor; n.reassignParamFromPath(i, r.variable()) }) }, n.prototype.freeze = function () { var n = this; this.getTrainableParams().forEach(function (t) { var r = t.path, i = t.tensor, u = fi(i.dataSync()); i.dispose(); n.reassignParamFromPath(r, u) }) }, n.prototype.dispose = function (n) { n === void 0 && (n = !0); this.getParamList().forEach(function (t) { if (n && t.tensor.isDisposed) throw new Error("param tensor has already been disposed for path " + t.path); t.tensor.dispose() }); this._params = undefined }, n.prototype.serializeParams = function () { return new Float32Array(this.getParamList().map(function (n) { var t = n.tensor; return Array.from(t.dataSync()) }).reduce(function (n, t) { return n.concat(t) })) }, n.prototype.load = function (n) { return a(this, void 0, void 0, function () { return v(this, function (t) { switch (t.label) { case 0: return n instanceof Float32Array ? (this.extractWeights(n), [2]) : [4, this.loadFromUri(n)]; case 1: return t.sent(), [2] } }) }) }, n.prototype.loadFromUri = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: if (n && typeof n != "string") throw new Error(this._name + ".loadFromUri - expected model uri"); return [4, spt(n, this.getDefaultModelName())]; case 1: return t = i.sent(), this.loadFromWeightMap(t), [2] } }) }) }, n.prototype.loadFromDisk = function (n) { return a(this, void 0, void 0, function () { var t, i, r, u, f, e, o, s, h, c; return v(this, function (l) { switch (l.label) { case 0: if (n && typeof n != "string") throw new Error(this._name + ".loadFromDisk - expected model file path"); return t = ti.getEnv().readFile, i = opt(n, this.getDefaultModelName()), r = i.manifestUri, u = i.modelBaseUri, f = function (n) { return Promise.all(n.map(function (n) { return t(n).then(function (n) { return n.buffer }) })) }, e = td.weightsLoaderFactory(f), h = (s = JSON).parse, [4, t(r)]; case 1: return o = h.apply(s, [l.sent().toString()]), [4, e(o, u)]; case 2: return c = l.sent(), this.loadFromWeightMap(c), [2] } }) }) }, n.prototype.loadFromWeightMap = function (n) { var t = this.extractParamsFromWeigthMap(n), i = t.paramMappings, r = t.params; this._paramMappings = i; this._params = r }, n.prototype.extractWeights = function (n) { var t = this.extractParams(n), i = t.paramMappings, r = t.params; this._paramMappings = i; this._params = r }, n.prototype.traversePropertyPath = function (n) { if (!this.params) throw new Error("traversePropertyPath - model has no loaded params"); var r = n.split("/").reduce(function (t, i) { if (!t.nextObj.hasOwnProperty(i)) throw new Error("traversePropertyPath - object does not have property " + i + ", for path " + n); return { obj: t.nextObj, objProp: i, nextObj: t.nextObj[i] } }, { nextObj: this.params }), t = r.obj, i = r.objProp; if (!t || !i || !(t[i] instanceof et)) throw new Error("traversePropertyPath - parameter is not a tensor, for path " + n); return { obj: t, objProp: i } }, n }(); dd = function () { function n(n, t, i) { this.depthwise_filter = n; this.pointwise_filter = t; this.bias = i } return n }(); tg = function (n) { function t() { return n.call(this, "FaceFeatureExtractor") || this } return d(t, n), t.prototype.forwardInput = function (n) { var t = this.params; if (!t) throw new Error("FaceFeatureExtractor - load model before inference"); return c(function () { var r = n.toBatchTensor(112, !0), u = wo(r, [122.782, 117.001, 104.298]).div(h(255)), i = yv(u, t.dense0, !0); return i = yv(i, t.dense1), i = yv(i, t.dense2), i = yv(i, t.dense3), so(i, [7, 7], [2, 2], "valid") }) }, t.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, t.prototype.getDefaultModelName = function () { return "face_feature_extractor_model" }, t.prototype.extractParamsFromWeigthMap = function (n) { return bui(n) }, t.prototype.extractParams = function (n) { return wui(n) }, t }(gr); var vpt = function (n) { function t(t, i) { var r = n.call(this, t) || this; return r._faceFeatureExtractor = i, r } return d(t, n), Object.defineProperty(t.prototype, "faceFeatureExtractor", { get: function () { return this._faceFeatureExtractor }, enumerable: !0, configurable: !0 }), t.prototype.runNet = function (n) { var i = this, t = this.params; if (!t) throw new Error(this._name + " - load model before inference"); return c(function () { var r = n instanceof go ? i.faceFeatureExtractor.forwardInput(n) : n; return eu(r.as2D(r.shape[0], -1), t.fc) }) }, t.prototype.dispose = function (t) { t === void 0 && (t = !0); this.faceFeatureExtractor.dispose(t); n.prototype.dispose.call(this, t) }, t.prototype.loadClassifierParams = function (n) { var t = this.extractClassifierParams(n), i = t.params, r = t.paramMappings; this._params = i; this._paramMappings = r }, t.prototype.extractClassifierParams = function (n) { return kui(n, this.getClassifierChannelsIn(), this.getClassifierChannelsOut()) }, t.prototype.extractParamsFromWeigthMap = function (n) { var t = apt(n), i = t.featureExtractorMap, r = t.classifierMap; return this.faceFeatureExtractor.loadFromWeightMap(i), dui(r) }, t.prototype.extractParams = function (n) { var r = this.getClassifierChannelsIn(), t = this.getClassifierChannelsOut(), i = t * r + t, u = n.slice(0, n.length - i), f = n.slice(n.length - i); return this.faceFeatureExtractor.extractWeights(u), this.extractClassifierParams(f) }, t }(gr), ig = ["neutral", "happy", "sad", "angry", "fearful", "disgusted", "surprised"], wv = function () { function n(n) { var t = this; if (n.length !== 7) throw new Error("FaceExpressions.constructor - expected probabilities.length to be 7, have: " + n.length); ig.forEach(function (i, r) { t[i] = n[r] }) } return n.prototype.asSortedArray = function () { var n = this; return ig.map(function (t) { return { expression: t, probability: n[t] } }).sort(function (n, t) { return t.probability - n.probability }) }, n }(), ypt = function (n) { function t(t) { return t === void 0 && (t = new tg), n.call(this, "FaceExpressionNet", t) || this } return d(t, n), t.prototype.forwardInput = function (n) { var t = this; return c(function () { return fu(t.runNet(n)) }) }, t.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, t.prototype.predictExpressions = function (n) { return a(this, void 0, void 0, function () { var t, i, u, r, f = this; return v(this, function (e) { switch (e.label) { case 0: return [4, ii(n)]; case 1: return t = e.sent(), [4, this.forwardInput(t)]; case 2: return i = e.sent(), [4, Promise.all(bt(i).map(function (n) { return a(f, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return [4, n.data()]; case 1: return t = i.sent(), n.dispose(), [2, t] } }) }) }))]; case 3: return u = e.sent(), i.dispose(), r = u.map(function (n) { return new wv(n) }), [2, t.isBatchInput ? r : r[0]] } }) }) }, t.prototype.getDefaultModelName = function () { return "face_expression_model" }, t.prototype.getClassifierChannelsIn = function () { return 256 }, t.prototype.getClassifierChannelsOut = function () { return 7 }, t }(vpt); ug = function () { function n(n) { n === void 0 && (n = {}); var t = n.drawLines, r = t === void 0 ? !0 : t, i = n.drawPoints, u = i === void 0 ? !0 : i, f = n.lineWidth, e = n.lineColor, o = n.pointSize, s = n.pointColor; this.drawLines = r; this.drawPoints = u; this.lineWidth = f || 1; this.pointSize = o || 2; this.lineColor = e || "rgba(0, 255, 255, 1)"; this.pointColor = s || "rgba(255, 0, 255, 1)" } return n }(); fg = function () { function n(n, t) { t === void 0 && (t = {}); this.faceLandmarks = n; this.options = new ug(t) } return n.prototype.draw = function (n) { var t = dr(n), i = this.options, f = i.drawLines, e = i.drawPoints, o = i.lineWidth, s = i.lineColor, h = i.pointSize, r = i.pointColor, u; f && this.faceLandmarks instanceof sd && (t.strokeStyle = s, t.lineWidth = o, bf(t, this.faceLandmarks.getJawOutline()), bf(t, this.faceLandmarks.getLeftEyeBrow()), bf(t, this.faceLandmarks.getRightEyeBrow()), bf(t, this.faceLandmarks.getNose()), bf(t, this.faceLandmarks.getLeftEye(), !0), bf(t, this.faceLandmarks.getRightEye(), !0), bf(t, this.faceLandmarks.getMouth(), !0)); e && (t.strokeStyle = r, t.fillStyle = r, u = function (n) { t.beginPath(); t.arc(n.x, n.y, h, 0, 2 * Math.PI); t.fill() }, this.faceLandmarks.positions.forEach(u)) }, n }(); wpt = Object.freeze({ __proto__: null, drawContour: bf, drawDetections: aui, drawFaceExpressions: gui, DrawBoxOptions: npt, DrawBox: tpt, DrawFaceLandmarksOptions: ug, DrawFaceLandmarks: fg, drawFaceLandmarks: nfi, get AnchorPosition() { return gu }, DrawTextFieldOptions: vd, DrawTextField: yd }); kpt = function (n) { function t(t) { var i = n.call(this, "TinyXception") || this; return i._numMainBlocks = t, i } return d(t, n), t.prototype.forwardInput = function (n) { var i = this, t = this.params; if (!t) throw new Error("TinyXception - load model before inference"); return c(function () { var u = n.toBatchTensor(112, !0), f = wo(u, [122.782, 117.001, 104.298]).div(h(256)), r = ct(bpt(f, t.entry_flow.conv_in, [2, 2])); return r = eg(r, t.entry_flow.reduction_block_0, !1), r = eg(r, t.entry_flow.reduction_block_1), yo(i._numMainBlocks, 0, 1).forEach(function (n) { r = ffi(r, t.middle_flow["main_block_" + n]) }), r = eg(r, t.exit_flow.reduction_block), r = ct(er(r, t.exit_flow.separable_conv, [1, 1])) }) }, t.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, t.prototype.getDefaultModelName = function () { return "tiny_xception_model" }, t.prototype.extractParamsFromWeigthMap = function (n) { return ufi(n, this._numMainBlocks) }, t.prototype.extractParams = function (n) { return ifi(n, this._numMainBlocks) }, t }(gr), function (n) { n.FEMALE = "female"; n.MALE = "male" }(n.Gender || (n.Gender = {})); var dpt = function (t) { function i(n) { n === void 0 && (n = new kpt(2)); var i = t.call(this, "AgeGenderNet") || this; return i._faceFeatureExtractor = n, i } return d(i, t), Object.defineProperty(i.prototype, "faceFeatureExtractor", { get: function () { return this._faceFeatureExtractor }, enumerable: !0, configurable: !0 }), i.prototype.runNet = function (n) { var i = this, t = this.params; if (!t) throw new Error(this._name + " - load model before inference"); return c(function () { var r = n instanceof go ? i.faceFeatureExtractor.forwardInput(n) : n, u = so(r, [7, 7], [2, 2], "valid").as2D(r.shape[0], -1), f = eu(u, t.fc.age).as1D(), e = eu(u, t.fc.gender); return { age: f, gender: e } }) }, i.prototype.forwardInput = function (n) { var t = this; return c(function () { var i = t.runNet(n), r = i.age, u = i.gender; return { age: r, gender: fu(u) } }) }, i.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, i.prototype.predictAgeAndGender = function (t) { return a(this, void 0, void 0, function () { var r, i, f, e, o, u, s = this; return v(this, function (h) { switch (h.label) { case 0: return [4, ii(t)]; case 1: return r = h.sent(), [4, this.forwardInput(r)]; case 2: return i = h.sent(), f = bt(i.age), e = bt(i.gender), o = f.map(function (n, t) { return { ageTensor: n, genderTensor: e[t] } }), [4, Promise.all(o.map(function (t) { var i = t.ageTensor, r = t.genderTensor; return a(s, void 0, void 0, function () { var f, t, u, e, o; return v(this, function (s) { switch (s.label) { case 0: return [4, i.data()]; case 1: return f = s.sent()[0], [4, r.data()]; case 2: return t = s.sent()[0], u = t > .5, e = u ? n.Gender.MALE : n.Gender.FEMALE, o = u ? t : 1 - t, i.dispose(), r.dispose(), [2, { age: f, gender: e, genderProbability: o }] } }) }) }))]; case 3: return u = h.sent(), i.age.dispose(), i.gender.dispose(), [2, r.isBatchInput ? u : u[0]] } }) }) }, i.prototype.getDefaultModelName = function () { return "age_gender_model" }, i.prototype.dispose = function (n) { n === void 0 && (n = !0); this.faceFeatureExtractor.dispose(n); t.prototype.dispose.call(this, n) }, i.prototype.loadClassifierParams = function (n) { var t = this.extractClassifierParams(n), i = t.params, r = t.paramMappings; this._params = i; this._paramMappings = r }, i.prototype.extractClassifierParams = function (n) { return efi(n) }, i.prototype.extractParamsFromWeigthMap = function (n) { var t = apt(n), i = t.featureExtractorMap, r = t.classifierMap; return this.faceFeatureExtractor.loadFromWeightMap(i), ofi(r) }, i.prototype.extractParams = function (n) { var t = 1539, i = n.slice(0, n.length - t), r = n.slice(n.length - t); return this.faceFeatureExtractor.extractWeights(i), this.extractClassifierParams(r) }, i }(gr), gpt = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.postProcess = function (n, t, i) { var r = i.map(function (n) { var i = n.width, r = n.height, u = t / Math.max(r, i); return { width: i * u, height: r * u } }), u = r.length; return c(function () { var i = function (n, t) { return bi([pr([68], n), pr([68], t)], 1).as2D(1, 136).as1D() }, f = function (n, t) { var i = r[n], u = i.width, f = i.height; return t(u, f) ? Math.abs(u - f) / 2 : 0 }, e = function (n) { return f(n, function (n, t) { return n < t }) }, o = function (n) { return f(n, function (n, t) { return t < n }) }; return n.mul(pr([u, 136], t)).sub(bi(Array.from(Array(u), function (n, t) { return i(e(t), o(t)) }))).div(bi(Array.from(Array(u), function (n, t) { return i(r[t].width, r[t].height) }))) }) }, t.prototype.forwardInput = function (n) { var t = this; return c(function () { var i = t.runNet(n); return t.postProcess(i, n.inputSize, n.inputDimensions.map(function (n) { var t = n[0], i = n[1]; return { height: t, width: i } })) }) }, t.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, t.prototype.detectLandmarks = function (n) { return a(this, void 0, void 0, function () { var t, i, r, u = this; return v(this, function (f) { switch (f.label) { case 0: return [4, ii(n)]; case 1: return t = f.sent(), i = c(function () { return bt(u.forwardInput(t)) }), [4, Promise.all(i.map(function (n, i) { return a(u, void 0, void 0, function () { var r, u, f, e, o; return v(this, function (s) { switch (s.label) { case 0: return f = (u = Array).from, [4, n.data()]; case 1: return r = f.apply(u, [s.sent()]), e = r.filter(function (n, t) { return fd(t) }), o = r.filter(function (n, t) { return !fd(t) }), [2, new sd(Array(68).fill(0).map(function (n, t) { return new ut(e[t], o[t]) }), { height: t.getInputHeight(i), width: t.getInputWidth(i) })] } }) }) }))]; case 2: return r = f.sent(), i.forEach(function (n) { return n.dispose() }), [2, t.isBatchInput ? r : r[0]] } }) }) }, t.prototype.getClassifierChannelsOut = function () { return 136 }, t }(vpt), og = function (n) { function t(t) { return t === void 0 && (t = new tg), n.call(this, "FaceLandmark68Net", t) || this } return d(t, n), t.prototype.getDefaultModelName = function () { return "face_landmark_68_model" }, t.prototype.getClassifierChannelsIn = function () { return 256 }, t }(gpt); var cfi = function (n) { function t() { return n.call(this, "TinyFaceFeatureExtractor") || this } return d(t, n), t.prototype.forwardInput = function (n) { var t = this.params; if (!t) throw new Error("TinyFaceFeatureExtractor - load model before inference"); return c(function () { var r = n.toBatchTensor(112, !0), u = wo(r, [122.782, 117.001, 104.298]).div(h(255)), i = bd(u, t.dense0, !0); return i = bd(i, t.dense1), i = bd(i, t.dense2), so(i, [14, 14], [2, 2], "valid") }) }, t.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, t.prototype.getDefaultModelName = function () { return "face_feature_extractor_tiny_model" }, t.prototype.extractParamsFromWeigthMap = function (n) { return sfi(n) }, t.prototype.extractParams = function (n) { return hfi(n) }, t }(gr), nwt = function (n) { function t(t) { return t === void 0 && (t = new cfi), n.call(this, "FaceLandmark68TinyNet", t) || this } return d(t, n), t.prototype.getDefaultModelName = function () { return "face_landmark_68_tiny_model" }, t.prototype.getClassifierChannelsIn = function () { return 128 }, t }(gpt), lfi = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t }(og); dv = function (n) { function t() { return n.call(this, "FaceRecognitionNet") || this } return d(t, n), t.prototype.forwardInput = function (n) { var t = this.params; if (!t) throw new Error("FaceRecognitionNet - load model before inference"); return c(function () { var f = n.toBatchTensor(150, !0).toFloat(), e = wo(f, [122.782, 117.001, 104.298]).div(h(256)), i = iwt(e, t.conv32_down), r, u; return i = gt(i, 3, 2, "valid"), i = ou(i, t.conv32_1), i = ou(i, t.conv32_2), i = ou(i, t.conv32_3), i = kv(i, t.conv64_down), i = ou(i, t.conv64_1), i = ou(i, t.conv64_2), i = ou(i, t.conv64_3), i = kv(i, t.conv128_down), i = ou(i, t.conv128_1), i = ou(i, t.conv128_2), i = kv(i, t.conv256_down), i = ou(i, t.conv256_1), i = ou(i, t.conv256_2), i = kv(i, t.conv256_down_out), r = i.mean([1, 2]), u = ch(r, t.fc), u }) }, t.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, t.prototype.computeFaceDescriptor = function (n) { return a(this, void 0, void 0, function () { var t, i, r, u = this; return v(this, function (f) { switch (f.label) { case 0: return [4, ii(n)]; case 1: return t = f.sent(), i = c(function () { return bt(u.forwardInput(t)) }), [4, Promise.all(i.map(function (n) { return n.data() }))]; case 2: return r = f.sent(), i.forEach(function (n) { return n.dispose() }), [2, t.isBatchInput ? r : r[0]] } }) }) }, t.prototype.getDefaultModelName = function () { return "face_recognition_model" }, t.prototype.extractParamsFromWeigthMap = function (n) { return bfi(n) }, t.prototype.extractParams = function (n) { return pfi(n) }, t }(gr); tc = function () { function n(n) { var t = n === void 0 ? {} : n, i = t.minFaceSize, r = t.scaleFactor, u = t.maxNumScales, f = t.scoreThresholds, e = t.scaleSteps; if (this._name = "MtcnnOptions", this._minFaceSize = i || 20, this._scaleFactor = r || .709, this._maxNumScales = u || 10, this._scoreThresholds = f || [.6, .7, .7], this._scaleSteps = e, typeof this._minFaceSize != "number" || this._minFaceSize < 0) throw new Error(this._name + " - expected minFaceSize to be a number > 0"); if (typeof this._scaleFactor != "number" || this._scaleFactor <= 0 || this._scaleFactor >= 1) throw new Error(this._name + " - expected scaleFactor to be a number between 0 and 1"); if (typeof this._maxNumScales != "number" || this._maxNumScales < 0) throw new Error(this._name + " - expected maxNumScales to be a number > 0"); if (!Array.isArray(this._scoreThresholds) || this._scoreThresholds.length !== 3 || this._scoreThresholds.some(function (n) { return typeof n != "number" })) throw new Error(this._name + " - expected scoreThresholds to be an array of numbers of length 3"); if (this._scaleSteps && (!Array.isArray(this._scaleSteps) || this._scaleSteps.some(function (n) { return typeof n != "number" }))) throw new Error(this._name + " - expected scaleSteps to be an array of numbers"); } return Object.defineProperty(n.prototype, "minFaceSize", { get: function () { return this._minFaceSize }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "scaleFactor", { get: function () { return this._scaleFactor }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "maxNumScales", { get: function () { return this._maxNumScales }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "scoreThresholds", { get: function () { return this._scoreThresholds }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "scaleSteps", { get: function () { return this._scaleSteps }, enumerable: !0, configurable: !0 }), n }(); rwt = .0010000000474974513; gf = function () { function n(n) { var t = n === void 0 ? {} : n, i = t.minConfidence, r = t.maxResults; if (this._name = "SsdMobilenetv1Options", this._minConfidence = i || .5, this._maxResults = r || 100, typeof this._minConfidence != "number" || this._minConfidence <= 0 || this._minConfidence >= 1) throw new Error(this._name + " - expected minConfidence to be a number between 0 and 1"); if (typeof this._maxResults != "number") throw new Error(this._name + " - expected maxResults to be a number"); } return Object.defineProperty(n.prototype, "minConfidence", { get: function () { return this._minConfidence }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "maxResults", { get: function () { return this._maxResults }, enumerable: !0, configurable: !0 }), n }(); ic = function (n) { function t() { return n.call(this, "SsdMobilenetv1") || this } return d(t, n), t.prototype.forwardInput = function (n) { var t = this.params; if (!t) throw new Error("SsdMobilenetv1 - load model before inference"); return c(function () { var u = n.toBatchTensor(512, !1).toFloat(), f = dt(si(u, h(.0078431377187371254)), h(1)), i = eei(f, t.mobilenetv1), r = aei(i.out, i.conv11, t.prediction_layer), e = r.boxPredictions, o = r.classPredictions; return lei(e, o, t.output_layer) }) }, t.prototype.forward = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = this.forwardInput, [4, ii(n)]; case 1: return [2, t.apply(this, [i.sent()])] } }) }) }, t.prototype.locateFaces = function (n, t) { return t === void 0 && (t = {}), a(this, void 0, void 0, function () { var o, p, w, i, s, f, h, e, c, r, l, b, k, d, g, a, y, nt, tt, u, it; return v(this, function (v) { switch (v.label) { case 0: return o = new gf(t), p = o.maxResults, w = o.minConfidence, [4, ii(n)]; case 1: for (i = v.sent(), s = this.forwardInput(i), f = s.boxes, h = s.scores, e = f[0], c = h[0], r = 1; r < f.length; r++)f[r].dispose(), h[r].dispose(); return k = (b = Array).from, [4, c.data()]; case 2: return l = k.apply(b, [v.sent()]), d = .5, g = oei(e, l, p, d, w), a = i.getReshapedInputDimensions(0), y = i.inputSize, nt = y / a.width, tt = y / a.height, u = e.arraySync(), it = g.map(function (n) { var t = [Math.max(0, u[n][0]), Math.min(1, u[n][2])].map(function (n) { return n * tt }), r = t[0], o = t[1], f = [Math.max(0, u[n][1]), Math.min(1, u[n][3])].map(function (n) { return n * nt }), e = f[0], s = f[1]; return new di(l[n], new ov(e, r, s - e, o - r), { height: i.getInputHeight(0), width: i.getInputWidth(0) }) }), e.dispose(), c.dispose(), [2, it] } }) }) }, t.prototype.getDefaultModelName = function () { return "ssd_mobilenetv1_model" }, t.prototype.extractParamsFromWeigthMap = function (n) { return rei(n) }, t.prototype.extractParams = function (n) { return tei(n) }, t }(gr); var yei = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t }(ic), pei = .4, wei = [new ut(.738768, .874946), new ut(2.42204, 2.65704), new ut(4.30971, 7.04493), new ut(10.246, 4.59428), new ut(12.6868, 11.8741)], bei = [new ut(1.603231, 2.094468), new ut(6.041143, 7.080126), new ut(2.882459, 3.518061), new ut(4.266906, 5.178857), new ut(9.041765, 10.66308)], kei = [117.001, 114.697, 97.404], dei = "tiny_yolov2_model", gei = "tiny_yolov2_separable_conv_model", gv = function (n) { return typeof n == "number" }; (function (n) { n[n.XS = 224] = "XS"; n[n.SM = 320] = "SM"; n[n.MD = 416] = "MD"; n[n.LG = 608] = "LG" })(n.TinyYolov2SizeType || (n.TinyYolov2SizeType = {})); var rc = function () { function n(n) { var t = n === void 0 ? {} : n, i = t.inputSize, r = t.scoreThreshold; if (this._name = "TinyYolov2Options", this._inputSize = i || 416, this._scoreThreshold = r || .5, typeof this._inputSize != "number" || this._inputSize % 32 != 0) throw new Error(this._name + " - expected inputSize to be a number divisible by 32"); if (typeof this._scoreThreshold != "number" || this._scoreThreshold <= 0 || this._scoreThreshold >= 1) throw new Error(this._name + " - expected scoreThreshold to be a number between 0 and 1"); } return Object.defineProperty(n.prototype, "inputSize", { get: function () { return this._inputSize }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "scoreThreshold", { get: function () { return this._scoreThreshold }, enumerable: !0, configurable: !0 }), n }(), ewt = function (n) { function t(t) { var i = n.call(this, "TinyYolov2") || this; return fwt(t), i._config = t, i } return d(t, n), Object.defineProperty(t.prototype, "config", { get: function () { return this._config }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, "withClassScores", { get: function () { return this.config.withClassScores || this.config.classes.length > 1 }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, "boxEncodingSize", { get: function () { return 5 + (this.withClassScores ? this.config.classes.length : 0) }, enumerable: !0, configurable: !0 }), t.prototype.runTinyYolov2 = function (n, t) { var i = ne(n, t.conv0); return i = gt(i, [2, 2], [2, 2], "same"), i = ne(i, t.conv1), i = gt(i, [2, 2], [2, 2], "same"), i = ne(i, t.conv2), i = gt(i, [2, 2], [2, 2], "same"), i = ne(i, t.conv3), i = gt(i, [2, 2], [2, 2], "same"), i = ne(i, t.conv4), i = gt(i, [2, 2], [2, 2], "same"), i = ne(i, t.conv5), i = gt(i, [2, 2], [1, 1], "same"), i = ne(i, t.conv6), i = ne(i, t.conv7), nu(i, t.conv8, "valid", !1) }, t.prototype.runMobilenet = function (n, t) { var i = this.config.isFirstLayerConv2d ? ag(nu(n, t.conv0, "valid", !1)) : te(n, t.conv0); return i = gt(i, [2, 2], [2, 2], "same"), i = te(i, t.conv1), i = gt(i, [2, 2], [2, 2], "same"), i = te(i, t.conv2), i = gt(i, [2, 2], [2, 2], "same"), i = te(i, t.conv3), i = gt(i, [2, 2], [2, 2], "same"), i = te(i, t.conv4), i = gt(i, [2, 2], [2, 2], "same"), i = te(i, t.conv5), i = gt(i, [2, 2], [1, 1], "same"), i = t.conv6 ? te(i, t.conv6) : i, i = t.conv7 ? te(i, t.conv7) : i, nu(i, t.conv8, "valid", !1) }, t.prototype.forwardInput = function (n, t) { var i = this, r = this.params; if (!r) throw new Error("TinyYolov2 - load model before inference"); return c(function () { var u = n.toBatchTensor(t, !1).toFloat(); return u = i.config.meanRgb ? wo(u, i.config.meanRgb) : u, u = u.div(h(256)), i.config.withSeparableConvs ? i.runMobilenet(u, r) : i.runTinyYolov2(u, r) }) }, t.prototype.forward = function (n, t) { return a(this, void 0, void 0, function () { var i; return v(this, function (r) { switch (r.label) { case 0: return i = this.forwardInput, [4, ii(n)]; case 1: return [4, i.apply(this, [r.sent(), t])]; case 2: return [2, r.sent()] } }) }) }, t.prototype.detect = function (n, t) { return t === void 0 && (t = {}), a(this, void 0, void 0, function () { var u, f, l, i, e, o, a, r, s, h, y, p, w, b, k = this; return v(this, function (v) { switch (v.label) { case 0: return u = new rc(t), f = u.inputSize, l = u.scoreThreshold, [4, ii(n)]; case 1: return i = v.sent(), [4, this.forwardInput(i, f)]; case 2: return e = v.sent(), o = c(function () { return bt(e)[0].expandDims() }), a = { width: i.getInputWidth(0), height: i.getInputHeight(0) }, [4, this.extractBoxes(o, i.getReshapedInputDimensions(0), l)]; case 3: return r = v.sent(), e.dispose(), o.dispose(), s = r.map(function (n) { return n.box }), h = r.map(function (n) { return n.score }), y = r.map(function (n) { return n.classScore }), p = r.map(function (n) { return k.config.classes[n.label] }), w = po(s.map(function (n) { return n.rescale(f) }), h, this.config.iouThreshold, !0), b = w.map(function (n) { return new od(h[n], y[n], p[n], s[n], a) }), [2, b] } }) }) }, t.prototype.getDefaultModelName = function () { return "" }, t.prototype.extractParamsFromWeigthMap = function (n) { return roi(n, this.config) }, t.prototype.extractParams = function (n) { var r = this.config.filterSizes || t.DEFAULT_FILTER_SIZES, i = r ? r.length : undefined; if (i !== 7 && i !== 8 && i !== 9) throw new Error("TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found " + i + " filterSizes in config"); return toi(n, this.config, this.boxEncodingSize, r) }, t.prototype.extractBoxes = function (n, t, i) { return a(this, void 0, void 0, function () { var y, p, w, b, k, r, o, l, d, g, nt, tt, ct, s, f, e, u, a, lt, at, it, rt, ut, ft, et, ot, vt, yt, st, ht = this; return v(this, function (v) { switch (v.label) { case 0: return y = t.width, p = t.height, w = Math.max(y, p), b = w / y, k = w / p, r = n.shape[1], o = this.config.anchors.length, l = c(function () { var t = n.reshape([r, r, o, ht.boxEncodingSize]), i = t.slice([0, 0, 0, 0], [r, r, o, 4]), u = t.slice([0, 0, 0, 4], [r, r, o, 1]), f = ht.withClassScores ? fu(t.slice([0, 0, 0, 5], [r, r, o, ht.config.classes.length]), 3) : h(0); return [i, u, f] }), d = l[0], g = l[1], nt = l[2], tt = [], [4, g.array()]; case 1: return ct = v.sent(), [4, d.array()]; case 2: s = v.sent(); f = 0; v.label = 3; case 3: if (!(f < r)) return [3, 12]; e = 0; v.label = 4; case 4: if (!(e < r)) return [3, 11]; u = 0; v.label = 5; case 5: return (u < o) ? (a = ev(ct[f][e][u][0]), !(!i || a > i)) ? [3, 9] : (lt = (e + ev(s[f][e][u][0])) / r * b, at = (f + ev(s[f][e][u][1])) / r * k, it = Math.exp(s[f][e][u][2]) * this.config.anchors[u].x / r * b, rt = Math.exp(s[f][e][u][3]) * this.config.anchors[u].y / r * k, ut = lt - it / 2, ft = at - rt / 2, et = { row: f, col: e, anchor: u }, !this.withClassScores) ? [3, 7] : [4, this.extractPredictedClass(nt, et)] : [3, 10]; case 6: return st = v.sent(), [3, 8]; case 7: st = { classScore: 1, label: 0 }; v.label = 8; case 8: ot = st; vt = ot.classScore; yt = ot.label; tt.push(ci({ box: new kh(ut, ft, ut + it, ft + rt), score: a, classScore: a * vt, label: yt }, et)); v.label = 9; case 9: return u++, [3, 5]; case 10: return e++, [3, 4]; case 11: return f++, [3, 3]; case 12: return d.dispose(), g.dispose(), nt.dispose(), [2, tt] } }) }) }, t.prototype.extractPredictedClass = function (n, t) { return a(this, void 0, void 0, function () { var i, r, u, f; return v(this, function (e) { switch (e.label) { case 0: return i = t.row, r = t.col, u = t.anchor, [4, n.array()]; case 1: return f = e.sent(), [2, Array(this.config.classes.length).fill(0).map(function (n, t) { return f[i][r][u][t] }).map(function (n, t) { return { classScore: n, label: t } }).reduce(function (n, t) { return n.classScore > t.classScore ? n : t })] } }) }) }, t.DEFAULT_FILTER_SIZES = [3, 16, 32, 64, 128, 256, 512, 1024, 1024], t }(gr), vg = function (n) { function t(t) { t === void 0 && (t = !0); var r = this, i = Object.assign({}, { withSeparableConvs: t, iouThreshold: pei, classes: ["face"] }, t ? { anchors: bei, meanRgb: kei } : { anchors: wei, withClassScores: !0 }); return n.call(this, i) || this } return d(t, n), Object.defineProperty(t.prototype, "withSeparableConvs", { get: function () { return this.config.withSeparableConvs }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, "anchors", { get: function () { return this.config.anchors }, enumerable: !0, configurable: !0 }), t.prototype.locateFaces = function (n, t) { return a(this, void 0, void 0, function () { var i; return v(this, function (r) { switch (r.label) { case 0: return [4, this.detect(n, t)]; case 1: return i = r.sent(), [2, i.map(function (n) { return new di(n.score, n.relativeBox, { width: n.imageWidth, height: n.imageHeight }) })] } }) }) }, t.prototype.getDefaultModelName = function () { return this.withSeparableConvs ? gei : dei }, t.prototype.extractParamsFromWeigthMap = function (t) { return n.prototype.extractParamsFromWeigthMap.call(this, t) }, t }(ewt); yg = function (n) { function t() { var t = n !== null && n.apply(this, arguments) || this; return t._name = "TinyFaceDetectorOptions", t } return d(t, n), t }(rc); we = function () { function n() { } return n.prototype.then = function (n) { return a(this, void 0, void 0, function () { var t; return v(this, function (i) { switch (i.label) { case 0: return t = n, [4, this.run()]; case 1: return [2, t.apply(void 0, [i.sent()])] } }) }) }, n.prototype.run = function () { return a(this, void 0, void 0, function () { return v(this, function () { throw new Error("ComposableTask - run is not implemented"); }) }) }, n }(); uc = 2; fc = 12; ty = function (n) { function t(t, i, r, u) { return n.call(this, { left: t, top: i, right: r, bottom: u }, !0) || this } return d(t, n), t }(kr); var kg = function (n) { function t() { return n.call(this, "Mtcnn") || this } return d(t, n), t.prototype.load = function (t) { return a(this, void 0, void 0, function () { return v(this, function () { return console.warn("mtcnn is deprecated and will be removed soon"), [2, n.prototype.load.call(this, t)] }) }) }, t.prototype.loadFromDisk = function (t) { return a(this, void 0, void 0, function () { return v(this, function () { return console.warn("mtcnn is deprecated and will be removed soon"), [2, n.prototype.loadFromDisk.call(this, t)] }) }) }, t.prototype.forwardInput = function (n, t) { return t === void 0 && (t = {}), a(this, void 0, void 0, function () { var o, s, i, d, h, l, k, r, u, f, g, nt, tt, a, it, y, e, p, w, b, rt; return v(this, function (v) { switch (v.label) { case 0: if (o = this.params, !o) throw new Error("Mtcnn - load model before inference"); if (s = n.canvases[0], !s) throw new Error("Mtcnn - inputCanvas is not defined, note that passing tensors into Mtcnn.forwardInput is not supported yet."); return i = {}, d = Date.now(), h = c(function () { return foi(rr(wa.fromPixels(s)).toFloat()) }), l = function (n) { return h.dispose(), i.total = Date.now() - d, n }, k = h.shape.slice(1), r = k[0], u = k[1], f = new tc(t), g = f.minFaceSize, nt = f.scaleFactor, tt = f.maxNumScales, a = f.scoreThresholds, it = f.scaleSteps, y = (it || coi(g, nt, [r, u])).filter(function (n) { var t = wg(n, [r, u]); return Math.min(t.width, t.height) > fc }).slice(0, tt), i.scales = y, i.pyramid = y.map(function (n) { return wg(n, [r, u]) }), e = Date.now(), [4, yoi(h, y, a[0], o.pnet, i)]; case 1: return (p = v.sent(), i.total_stage1 = Date.now() - e, !p.boxes.length) ? [2, l({ results: [], stats: i })] : (i.stage2_numInputBoxes = p.boxes.length, e = Date.now(), [4, woi(s, p.boxes, a[1], o.rnet, i)]); case 2: return (w = v.sent(), i.total_stage2 = Date.now() - e, !w.boxes.length) ? [2, l({ results: [], stats: i })] : (i.stage3_numInputBoxes = w.boxes.length, e = Date.now(), [4, koi(s, w.boxes, a[2], o.onet, i)]); case 3: return b = v.sent(), i.total_stage3 = Date.now() - e, rt = b.boxes.map(function (n, t) { return nc(ko({}, new di(b.scores[t], new ov(n.left / u, n.top / r, n.width / u, n.height / r), { height: r, width: u })), new pyt(b.points[t].map(function (t) { return t.sub(new ut(n.left, n.top)).div(new ut(n.width, n.height)) }), { width: n.width, height: n.height })) }), [2, l({ results: rt, stats: i })] } }) }) }, t.prototype.forward = function (n, t) { return t === void 0 && (t = {}), a(this, void 0, void 0, function () { var i; return v(this, function (r) { switch (r.label) { case 0: return i = this.forwardInput, [4, ii(n)]; case 1: return [4, i.apply(this, [r.sent(), t])]; case 2: return [2, r.sent().results] } }) }) }, t.prototype.forwardWithStats = function (n, t) { return t === void 0 && (t = {}), a(this, void 0, void 0, function () { var i; return v(this, function (r) { switch (r.label) { case 0: return i = this.forwardInput, [4, ii(n)]; case 1: return [2, i.apply(this, [r.sent(), t])] } }) }) }, t.prototype.getDefaultModelName = function () { return "mtcnn_model" }, t.prototype.extractParamsFromWeigthMap = function (n) { return hoi(n) }, t.prototype.extractParams = function (n) { return ooi(n) }, t }(gr), doi = .4, goi = [new ut(1.603231, 2.094468), new ut(6.041143, 7.080126), new ut(2.882459, 3.518061), new ut(4.266906, 5.178857), new ut(9.041765, 10.66308)], nsi = [117.001, 114.697, 97.404], dg = function (n) { function t() { var i = this, t = { withSeparableConvs: !0, iouThreshold: doi, classes: ["face"], anchors: goi, meanRgb: nsi, isFirstLayerConv2d: !0, filterSizes: [3, 16, 32, 64, 128, 256, 512] }; return n.call(this, t) || this } return d(t, n), Object.defineProperty(t.prototype, "anchors", { get: function () { return this.config.anchors }, enumerable: !0, configurable: !0 }), t.prototype.locateFaces = function (n, t) { return a(this, void 0, void 0, function () { var i; return v(this, function (r) { switch (r.label) { case 0: return [4, this.detect(n, t)]; case 1: return i = r.sent(), [2, i.map(function (n) { return new di(n.score, n.relativeBox, { width: n.imageWidth, height: n.imageHeight }) })] } }) }) }, t.prototype.getDefaultModelName = function () { return "tiny_face_detector_model" }, t.prototype.extractParamsFromWeigthMap = function (t) { return n.prototype.extractParamsFromWeigthMap.call(this, t) }, t }(ewt), ft = { ssdMobilenetv1: new ic, tinyFaceDetector: new dg, tinyYolov2: new vg, mtcnn: new kg, faceLandmark68Net: new og, faceLandmark68TinyNet: new nwt, faceRecognitionNet: new dv, faceExpressionNet: new ypt, ageGenderNet: new dpt }, hwt = function (n, t) { return ft.ssdMobilenetv1.locateFaces(n, t) }, tsi = function (n, t) { return ft.tinyFaceDetector.locateFaces(n, t) }, isi = function (n, t) { return ft.tinyYolov2.locateFaces(n, t) }, rsi = function (n, t) { return ft.mtcnn.forward(n, t) }, cwt = function (n) { return ft.faceLandmark68Net.detectLandmarks(n) }, usi = function (n) { return ft.faceLandmark68TinyNet.detectLandmarks(n) }, fsi = function (n) { return ft.faceRecognitionNet.computeFaceDescriptor(n) }, esi = function (n) { return ft.faceExpressionNet.predictExpressions(n) }, osi = function (n) { return ft.ageGenderNet.predictAgeAndGender(n) }, lwt = function (n) { return ft.ssdMobilenetv1.load(n) }, ssi = function (n) { return ft.tinyFaceDetector.load(n) }, hsi = function (n) { return ft.mtcnn.load(n) }, csi = function (n) { return ft.tinyYolov2.load(n) }, lsi = function (n) { return ft.faceLandmark68Net.load(n) }, asi = function (n) { return ft.faceLandmark68TinyNet.load(n) }, vsi = function (n) { return ft.faceRecognitionNet.load(n) }, ysi = function (n) { return ft.faceExpressionNet.load(n) }, psi = function (n) { return ft.ageGenderNet.load(n) }, wsi = lwt, bsi = hwt, ksi = cwt, awt = function (n) { function t(t, i, r) { var u = n.call(this) || this; return u.parentTask = t, u.input = i, u.extractedFaces = r, u } return d(t, n), t }(we), gg = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t, i = this; return v(this, function (r) { switch (r.label) { case 0: return [4, this.parentTask]; case 1: return n = r.sent(), [4, ny(n, this.input, function (n) { return a(i, void 0, void 0, function () { return v(this, function (t) { switch (t.label) { case 0: return [4, Promise.all(n.map(function (n) { return ft.faceExpressionNet.predictExpressions(n) }))]; case 1: return [2, t.sent()] } }) }) }, this.extractedFaces)]; case 2: return t = r.sent(), [2, n.map(function (n, i) { return rg(n, t[i]) })] } }) }) }, t.prototype.withAgeAndGender = function () { return new un(this, this.input) }, t }(awt), nn = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t; return v(this, function (i) { switch (i.label) { case 0: return [4, this.parentTask]; case 1: return (n = i.sent(), !n) ? [2] : [4, pg(n, this.input, function (n) { return ft.faceExpressionNet.predictExpressions(n) }, this.extractedFaces)]; case 2: return t = i.sent(), [2, rg(n, t)] } }) }) }, t.prototype.withAgeAndGender = function () { return new fn(this, this.input) }, t }(awt), tn = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.withAgeAndGender = function () { return new en(this, this.input) }, t.prototype.withFaceDescriptors = function () { return new iy(this, this.input) }, t }(gg), rn = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.withAgeAndGender = function () { return new on(this, this.input) }, t.prototype.withFaceDescriptor = function () { return new ry(this, this.input) }, t }(nn), vwt = function (n) { function t(t, i, r) { var u = n.call(this) || this; return u.parentTask = t, u.input = i, u.extractedFaces = r, u } return d(t, n), t }(we), un = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t, i = this; return v(this, function (r) { switch (r.label) { case 0: return [4, this.parentTask]; case 1: return n = r.sent(), [4, ny(n, this.input, function (n) { return a(i, void 0, void 0, function () { return v(this, function (t) { switch (t.label) { case 0: return [4, Promise.all(n.map(function (n) { return ft.ageGenderNet.predictAgeAndGender(n) }))]; case 1: return [2, t.sent()] } }) }) }, this.extractedFaces)]; case 2: return t = r.sent(), [2, n.map(function (n, i) { var r = t[i], u = r.age, f = r.gender, e = r.genderProbability; return cg(lg(n, f, e), u) })] } }) }) }, t.prototype.withFaceExpressions = function () { return new gg(this, this.input) }, t }(vwt), fn = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t, i, r, u; return v(this, function (f) { switch (f.label) { case 0: return [4, this.parentTask]; case 1: return (n = f.sent(), !n) ? [2] : [4, pg(n, this.input, function (n) { return ft.ageGenderNet.predictAgeAndGender(n) }, this.extractedFaces)]; case 2: return t = f.sent(), i = t.age, r = t.gender, u = t.genderProbability, [2, cg(lg(n, r, u), i)] } }) }) }, t.prototype.withFaceExpressions = function () { return new nn(this, this.input) }, t }(vwt), en = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.withFaceExpressions = function () { return new tn(this, this.input) }, t.prototype.withFaceDescriptors = function () { return new iy(this, this.input) }, t }(un), on = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.withFaceExpressions = function () { return new rn(this, this.input) }, t.prototype.withFaceDescriptor = function () { return new ry(this, this.input) }, t }(fn), sn = function (n) { function t(t, i) { var r = n.call(this) || this; return r.parentTask = t, r.input = i, r } return d(t, n), t }(we), iy = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t; return v(this, function (i) { switch (i.label) { case 0: return [4, this.parentTask]; case 1: return n = i.sent(), [4, ny(n, this.input, function (n) { return Promise.all(n.map(function (n) { return ft.faceRecognitionNet.computeFaceDescriptor(n) })) }, null, function (n) { return n.landmarks.align(null, { useDlibAlignment: !0 }) })]; case 2: return t = i.sent(), [2, t.map(function (t, i) { return hg(n[i], t) })] } }) }) }, t.prototype.withFaceExpressions = function () { return new tn(this, this.input) }, t.prototype.withAgeAndGender = function () { return new en(this, this.input) }, t }(sn), ry = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t; return v(this, function (i) { switch (i.label) { case 0: return [4, this.parentTask]; case 1: return (n = i.sent(), !n) ? [2] : [4, pg(n, this.input, function (n) { return ft.faceRecognitionNet.computeFaceDescriptor(n) }, null, function (n) { return n.landmarks.align(null, { useDlibAlignment: !0 }) })]; case 2: return t = i.sent(), [2, hg(n, t)] } }) }) }, t.prototype.withFaceExpressions = function () { return new rn(this, this.input) }, t.prototype.withAgeAndGender = function () { return new on(this, this.input) }, t }(sn), hn = function (n) { function t(t, i, r) { var u = n.call(this) || this; return u.parentTask = t, u.input = i, u.useTinyLandmarkNet = r, u } return d(t, n), Object.defineProperty(t.prototype, "landmarkNet", { get: function () { return this.useTinyLandmarkNet ? ft.faceLandmark68TinyNet : ft.faceLandmark68Net }, enumerable: !0, configurable: !0 }), t }(we), ywt = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t, i, r, u, f = this; return v(this, function (e) { switch (e.label) { case 0: return [4, this.parentTask]; case 1: return (n = e.sent(), t = n.map(function (n) { return n.detection }), !(this.input instanceof et)) ? [3, 3] : [4, av(this.input, t)]; case 2: return r = e.sent(), [3, 5]; case 3: return [4, lv(this.input, t)]; case 4: r = e.sent(); e.label = 5; case 5: return i = r, [4, Promise.all(i.map(function (n) { return f.landmarkNet.detectLandmarks(n) }))]; case 6: return u = e.sent(), i.forEach(function (n) { return n instanceof et && n.dispose() }), [2, n.map(function (n, t) { return nc(n, u[t]) })] } }) }) }, t.prototype.withFaceExpressions = function () { return new tn(this, this.input) }, t.prototype.withAgeAndGender = function () { return new en(this, this.input) }, t.prototype.withFaceDescriptors = function () { return new iy(this, this.input) }, t }(hn), pwt = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var n, t, i, r, u; return v(this, function (f) { switch (f.label) { case 0: return [4, this.parentTask]; case 1: return (n = f.sent(), !n) ? [2] : (t = n.detection, !(this.input instanceof et)) ? [3, 3] : [4, av(this.input, [t])]; case 2: return r = f.sent(), [3, 5]; case 3: return [4, lv(this.input, [t])]; case 4: r = f.sent(); f.label = 5; case 5: return i = r, [4, this.landmarkNet.detectLandmarks(i[0])]; case 6: return u = f.sent(), i.forEach(function (n) { return n instanceof et && n.dispose() }), [2, nc(n, u)] } }) }) }, t.prototype.withFaceExpressions = function () { return new rn(this, this.input) }, t.prototype.withAgeAndGender = function () { return new on(this, this.input) }, t.prototype.withFaceDescriptor = function () { return new ry(this, this.input) }, t }(hn), cn = function (n) { function t(t, i) { i === void 0 && (i = new gf); var r = n.call(this) || this; return r.input = t, r.options = i, r } return d(t, n), t }(we), ln = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var t, i, n, r; return v(this, function (u) { switch (u.label) { case 0: return (t = this, i = t.input, n = t.options, !(n instanceof tc)) ? [3, 2] : [4, ft.mtcnn.forward(i, n)]; case 1: return [2, u.sent().map(function (n) { return n.detection })]; case 2: if (r = n instanceof yg ? function (t) { return ft.tinyFaceDetector.locateFaces(t, n) } : n instanceof gf ? function (t) { return ft.ssdMobilenetv1.locateFaces(t, n) } : n instanceof rc ? function (t) { return ft.tinyYolov2.locateFaces(t, n) } : null, !r) throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | MtcnnOptions | TinyYolov2Options"); return [2, r(i)] } }) }) }, t.prototype.runAndExtendWithFaceDetections = function () { var n = this; return new Promise(function (t) { return a(n, void 0, void 0, function () { var n; return v(this, function (i) { switch (i.label) { case 0: return [4, this.run()]; case 1: return n = i.sent(), [2, t(n.map(function (n) { return ko({}, n) }))] } }) }) }) }, t.prototype.withFaceLandmarks = function (n) { return n === void 0 && (n = !1), new ywt(this.runAndExtendWithFaceDetections(), this.input, n) }, t.prototype.withFaceExpressions = function () { return new gg(this.runAndExtendWithFaceDetections(), this.input) }, t.prototype.withAgeAndGender = function () { return new un(this.runAndExtendWithFaceDetections(), this.input) }, t }(cn), wwt = function (n) { function t() { return n !== null && n.apply(this, arguments) || this } return d(t, n), t.prototype.run = function () { return a(this, void 0, void 0, function () { var t, n; return v(this, function (i) { switch (i.label) { case 0: return [4, new ln(this.input, this.options)]; case 1: return t = i.sent(), n = t[0], t.forEach(function (t) { t.score > n.score && (n = t) }), [2, n] } }) }) }, t.prototype.runAndExtendWithFaceDetection = function () { var n = this; return new Promise(function (t) { return a(n, void 0, void 0, function () { var n; return v(this, function (i) { switch (i.label) { case 0: return [4, this.run()]; case 1: return n = i.sent(), [2, t(n ? ko({}, n) : undefined)] } }) }) }) }, t.prototype.withFaceLandmarks = function (n) { return n === void 0 && (n = !1), new pwt(this.runAndExtendWithFaceDetection(), this.input, n) }, t.prototype.withFaceExpressions = function () { return new nn(this.runAndExtendWithFaceDetection(), this.input) }, t.prototype.withAgeAndGender = function () { return new fn(this.runAndExtendWithFaceDetection(), this.input) }, t }(cn); kwt = bwt; gwt = function () { function n(n, t) { var i, u, r; if (t === void 0 && (t = .6), this._distanceThreshold = t, i = Array.isArray(n) ? n : [n], !i.length) throw new Error("FaceRecognizer.constructor - expected atleast one input"); u = 1; r = function () { return "person " + u++ }; this._labeledDescriptors = i.map(function (n) { if (n instanceof dh) return n; if (n instanceof Float32Array) return new dh(r(), [n]); if (n.descriptor && n.descriptor instanceof Float32Array) return new dh(r(), [n.descriptor]); throw new Error("FaceRecognizer.constructor - expected inputs to be of type LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array | Array<LabeledFaceDescriptors | WithFaceDescriptor<any> | Float32Array>"); }) } return Object.defineProperty(n.prototype, "labeledDescriptors", { get: function () { return this._labeledDescriptors }, enumerable: !0, configurable: !0 }), Object.defineProperty(n.prototype, "distanceThreshold", { get: function () { return this._distanceThreshold }, enumerable: !0, configurable: !0 }), n.prototype.computeMeanDistance = function (n, t) { return t.map(function (t) { return dwt(t, n) }).reduce(function (n, t) { return n + t }, 0) / (t.length || 1) }, n.prototype.matchDescriptor = function (n) { var t = this; return this.labeledDescriptors.map(function (i) { var r = i.descriptors, u = i.label; return new hd(u, t.computeMeanDistance(n, r)) }).reduce(function (n, t) { return n.distance < t.distance ? n : t }) }, n.prototype.findBestMatch = function (n) { var t = this.matchDescriptor(n); return t.distance < this.distanceThreshold ? t : new hd("unknown", t.distance) }, n.prototype.toJSON = function () { return { distanceThreshold: this.distanceThreshold, labeledDescriptors: this.labeledDescriptors.map(function (n) { return n.toJSON() }) } }, n.fromJSON = function (t) { var i = t.labeledDescriptors.map(function (n) { return dh.fromJSON(n) }); return new n(i, t.distanceThreshold) }, n }(); n.AgeGenderNet = dpt; n.BoundingBox = kh; n.Box = kr; n.ComposableTask = we; n.ComputeAllFaceDescriptorsTask = iy; n.ComputeFaceDescriptorsTaskBase = sn; n.ComputeSingleFaceDescriptorTask = ry; n.DetectAllFaceLandmarksTask = ywt; n.DetectAllFacesTask = ln; n.DetectFaceLandmarksTaskBase = hn; n.DetectFacesTaskBase = cn; n.DetectSingleFaceLandmarksTask = pwt; n.DetectSingleFaceTask = wwt; n.Dimensions = ku; n.FACE_EXPRESSION_LABELS = ig; n.FaceDetection = di; n.FaceDetectionNet = yei; n.FaceExpressionNet = ypt; n.FaceExpressions = wv; n.FaceLandmark68Net = og; n.FaceLandmark68TinyNet = nwt; n.FaceLandmarkNet = lfi; n.FaceLandmarks = pe; n.FaceLandmarks5 = pyt; n.FaceLandmarks68 = sd; n.FaceMatch = hd; n.FaceMatcher = gwt; n.FaceRecognitionNet = dv; n.LabeledBox = cd; n.LabeledFaceDescriptors = dh; n.Mtcnn = kg; n.MtcnnOptions = tc; n.NetInput = go; n.NeuralNetwork = gr; n.ObjectDetection = od; n.Point = ut; n.PredictedBox = hui; n.Rect = ov; n.SsdMobilenetv1 = ic; n.SsdMobilenetv1Options = gf; n.TinyFaceDetector = dg; n.TinyFaceDetectorOptions = yg; n.TinyYolov2 = vg; n.TinyYolov2Options = rc; n.allFaces = kwt; n.allFacesMtcnn = nhi; n.allFacesSsdMobilenetv1 = bwt; n.allFacesTinyYolov2 = gsi; n.awaitMediaLoaded = ipt; n.bufferToImage = rpt; n.computeFaceDescriptor = fsi; n.createCanvas = gh; n.createCanvasFromMedia = cv; n.createFaceDetectionNet = vei; n.createFaceRecognitionNet = kfi; n.createMtcnn = thi; n.createSsdMobilenetv1 = uwt; n.createTinyFaceDetector = ihi; n.createTinyYolov2 = uoi; n.detectAllFaces = uy; n.detectFaceLandmarks = cwt; n.detectFaceLandmarksTiny = usi; n.detectLandmarks = ksi; n.detectSingleFace = dsi; n.draw = wpt; n.env = ti; n.euclideanDistance = dwt; n.extendWithAge = cg; n.extendWithFaceDescriptor = hg; n.extendWithFaceDetection = ko; n.extendWithFaceExpressions = rg; n.extendWithFaceLandmarks = nc; n.extendWithGender = lg; n.extractFaceTensors = av; n.extractFaces = lv; n.fetchImage = vui; n.fetchJson = ept; n.fetchNetWeights = yui; n.fetchOrThrow = vv; n.getContext2dOrThrow = dr; n.getMediaDimensions = hv; n.imageTensorToCanvas = upt; n.imageToSquare = fpt; n.inverseSigmoid = fui; n.iou = ayt; n.isMediaElement = wd; n.isMediaLoaded = pd; n.isWithAge = dfi; n.isWithFaceDetection = bo; n.isWithFaceExpressions = ppt; n.isWithFaceLandmarks = bv; n.isWithGender = gfi; n.loadAgeGenderModel = psi; n.loadFaceDetectionModel = wsi; n.loadFaceExpressionModel = ysi; n.loadFaceLandmarkModel = lsi; n.loadFaceLandmarkTinyModel = asi; n.loadFaceRecognitionModel = vsi; n.loadMtcnnModel = hsi; n.loadSsdMobilenetv1Model = lwt; n.loadTinyFaceDetectorModel = ssi; n.loadTinyYolov2Model = csi; n.loadWeightMap = spt; n.locateFaces = bsi; n.matchDimensions = pui; n.minBbox = vyt; n.mtcnn = rsi; n.nets = ft; n.nonMaxSuppression = po; n.normalize = wo; n.padToSquare = yyt; n.predictAgeAndGender = osi; n.recognizeFaceExpressions = esi; n.resizeResults = nbt; n.resolveInput = sv; n.shuffleArray = uui; n.sigmoid = ev; n.ssdMobilenetv1 = hwt; n.tf = syt; n.tinyFaceDetector = tsi; n.tinyYolov2 = isi; n.toNetInput = ii; n.utils = rui; n.validateConfig = fwt; Object.defineProperty(n, "__esModule", { value: !0 })
});